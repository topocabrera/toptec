{"version":3,"sources":["components/Members/factory.jpg","firebase.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","services/reservation.service.js","utils/default.js","components/admin/adminReservations.js","services/users.service.js","components/Login/SignIn.js","components/Login/SignUp.js","providers/UserProvider.js","components/Login/Profile.js","components/Reservation/reservaList.js","components/Reservation/add-reservation.js","components/Reservation/editReserva.js","components/Reservation/addMesa.js","components/Reservation/mesasMap.js","services/clients.service.js","components/Logistic/Clients/addClient.js","components/Logistic/Clients/editClient.js","components/Logistic/Clients/listClient.js","services/productos.service.js","components/Logistic/Products/addProduct.js","components/Logistic/Products/listProduct.js","components/Logistic/Products/editProduct.js","components/Logistic/Products/changePrice.js","services/pedidos.service.js","components/Logistic/Pedido/pedido.js","components/ListCheckbox/index.js","components/Logistic/Pedido/pedidoList.js","components/Logistic/Pedido/editPedido.js","components/Logistic/Pedido/facturaTemplate.js","components/Logistic/Pedido/visita.js","services/pronostic.service.js","components/Prode/addPronostic.js","components/Prode/positions.js","services/member.service.js","components/Members/addMember.js","components/Members/listMember.js","components/Members/validateMember.js","components/Members/editMember.js","App.js","components/FooterView/index.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","GoogleAuthProvider","auth","firestore","generateUserDocument","user","additionalData","a","userRef","doc","uid","get","exists","email","displayName","photoURL","set","console","error","getUserDocument","userDocument","data","db","ref","tutorial","push","key","value","child","update","remove","AddTutorial","props","onChangeTitle","bind","onChangeDescription","saveTutorial","newTutorial","state","title","description","published","submitted","e","this","setState","target","TutorialDataService","create","then","log","catch","className","onClick","htmlFor","type","id","required","onChange","name","Component","Tutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","prevState","status","delete","refreshList","nextProps","TutorialsList","setActiveTutorial","removeAllTutorials","onDataChange","tutorials","currentIndex","getAll","on","off","items","forEach","item","val","index","deleteAll","map","totalPeople","orderByChild","limitToLast","once","snapshot","errorObject","code","reservation","turnos","mesasArray","dias","alert","Modal","ReservaList","onChangeDate","deleteReserva","reservas","date","ReservationDataService","adentro","mesa","cantidad","turno","asistio","dateFormat","format","filerReserva","filter","reserv","moment","isSame","resrv","Toast","fail","timeFormat","utc","closeOnSelect","initialValue","Date","getTime","Button","aria-label","variant","color","text","onPress","equalTo","SignIn","password","getUser","verifyLogin","onChangeValues","localStorage","removeItem","LoginService","pass","CryptoJS","AES","decrypt","toString","enc","Utf8","userName","rol","setItem","JSON","stringify","window","location","Container","component","maxWidth","Avatar","Typography","role","Grid","container","spacing","xs","TextField","fullWidth","label","autoComplete","FormControlLabel","control","Checkbox","justify","Link","href","Box","mt","align","getFullYear","SignUp","onSaveUser","ciphertext","encrypt","success","autoFocus","UserContext","createContext","ProfilePage","useContext","style","background","backgroundSize","height","width","signOut","queryString","require","onChangeTurno","filterReservations","changeSelect","handleOpenModal","onChangeValueCant","handleClose","editCant","changeTotal","onGetTotales","parse","search","reservaFilter","cantAdentro","cantAfuera","cantTotal","totalAsistentes","indexOpen","contadorTotal","getTotal","currentTotal","createTotal","fecha","turnoParam","reserva","totalPersonas","turnoComp","fechaComp","parseInt","sort","b","reload","updateTotal","totalMesas","length","colorTotal","colorMoment","InputLabel","Select","MenuItem","Paper","IconButton","disabled","preventDefault","size","scope","checked","Dialog","open","aria-labelledby","DialogTitle","onClose","DialogContent","margin","DialogActions","AddReservation","onChangeName","onChangeCantidad","onChangeAdentro","onChangeCumple","saveReserva","newReserva","getMesas","obtainLastMesa","lastId","mesasAdentro","mesasAfuera","isCumple","cantidadMesas","lastMesaAdentro","lastMesaAfuera","promises","cantMesasDiv","cantMesas","Math","trunc","restoMesas","nameCumple","i","quantity","activa","loading","textUbicacion","Tooltip","changeTooltip","labelPlacement","onChangeMesa","updateReserva","currentReserva","match","params","Object","keys","res","validationLugar","helperText","min","max","nroMesa","dataSet","mesaFilter","mesas","mesaColor","Breadcrumbs","separator","fontSize","toUpperCase","MesaMap","changeMesa","resetValues","filterReserva","dataUpdate","turnoFilter","filt","nombre","selectTurno","clients","AddClient","saveClient","newClient","onChangeDay","barrio","domicilio","dni","formato_comercial","razon_social","telefono","estado","motivo","dia","condicionIva","ClientsDataService","editClient","currentClient","updateClient","ClientService","listClient","deleteClient","searchTitle","clientFilter","razonSocial","clearTimeout","timer","setTimeout","toLowerCase","client","displayTable","placeholder","cliente","producto","AddProduct","onChangeCodigo","onChangeDescripcion","onChangeMarca","onChangeStock","onChangePrecio","saveProduct","newProduct","codigo","descripcion","marca","precio","stock","peso","ProductosDataService","marcas","listProduct","setActiveProduct","onChangeSearchTitle","deleteProduct","products","currentProduct","productoFilter","prod","product","EditProduct","updateProduct","onChangePorcentaje","porcentaje","promise","InputProps","endAdornment","InputAdornment","position","pedidos","Item","List","Brief","currentUser","getItem","Pedido","setActive","onChangePeso","onChangeDto","onChangeIva","addPedido","setInitialProduct","getLastId","createPedido","getClient","setOpen","descuento","indexActive","pedido","idCliente","clienteName","clienteDomicilio","productos","total","fechaEntrega","add","iva","medioIva","keyClient","editProd","indexProdOpen","PedidosDataService","ClientesDataService","valor","subtotal","idProducto","produc","isIva","prodPedido","condPago","findIndex","prd","splice","newTotal","subtotalDto","valorIva","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","toFixed","isActive","multipleLine","wrap","readOnly","startAdornment","descendingComparator","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","padding","indeterminate","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","primary","dark","flex","button","esES","EnhancedTableToolbar","onChangeClick","updatePedido","Toolbar","clsx","endIcon","useStyles","paper","marginBottom","table","minWidth","border","clip","overflow","top","EnhancedTable","React","useState","setProducts","setOrder","setOrderBy","selected","setSelected","page","dense","rowsPerPage","rows","emptyRows","cod","statusPrd","fechaConfirm","PedidoService","newSelecteds","n","array","comparator","stabilizedThis","el","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","hover","newSelected","selectedIndex","concat","handleClick","aria-checked","tabIndex","colSpan","PedidoList","filterPedidos","expandAll","deletePedido","changeEntrega","getClients","getClientsByDay","getQuantity","pedidoFilter","entregaPedido","entrega","cantVisitas","quantityProd","openModal","prodDesc","today","day","cli","cantByProd","arrayProd","desc","undefined","pr","totalPorDia","keyCodigos","dividers","Switch","Fragment","split","paddingBottom","paddingTop","Collapse","in","timeout","unmountOnExit","prompt","EditPedido","onChangeIvaProd","getCurrentPedido","editProduct","onChangeValueProduct","getPedido","print","printContents","document","getElementById","innerHTML","originalContents","body","totalSinDto","padStart","Visita","filterClients","setMotivo","resetAll","clientesPorDia","FormControl","equipos","fechas","pronos","Pronostic","getFechas","handleChange","pronostico","userId","pronosticos","competencia","PronosticDataService","getEquipos","equipo","cruces","cruce","numberCruce","splitCruce","cruce1","cruce2","RadioGroup","defaultValue","Radio","member","AddMember","onChangeDateVenc","contacto","actividad","dateVenc","MemberDataService","listMember","deleteMember","members","currentMember","memberFilter","actualDate","isVencido","validateMember","onSubmit","statusMember","memberSearch","isNotEmptySearch","dateMember","autocomplete","spellcheck","src","editMember","allowUser","changePass","MemberService","App","show","toggle","toggleButton","matchMedia","matches","data-toggle","data-target","aria-controls","aria-expanded","to","exact","path","Profile","ReservasList","Reservation","EditReserva","AddMesa","MesasMap","ListClient","EditClient","ListProduct","ChangePriceProduct","Factura","Positions","ValidateMember","ListMember","EditMember","AddMembers","DeleteReservas","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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A,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAGWC,EAAO,CAClB,CACEvE,MAAO,EACPgC,KAAM,SAER,CACEhC,MAAO,EACPgC,KAAM,UAER,CACEhC,MAAO,EACPgC,KAAM,gBAER,CACEhC,MAAO,EACPgC,KAAM,UAER,CACEhC,MAAO,EACPgC,KAAM,WAER,CACEhC,MAAO,EACPgC,KAAM,aAER,CACEhC,MAAO,EACPgC,KAAM,YCrIJwC,EAAQC,IAAMD,MAECE,E,kDACnB,WAAYrE,GAAQ,IAAD,8BACjB,cAAMA,IACD2C,aAAe,EAAKA,aAAazC,KAAlB,gBACpB,EAAKoE,aAAe,EAAKA,aAAapE,KAAlB,gBACpB,EAAKqE,cAAgB,EAAKA,cAAcrE,KAAnB,gBAErB,EAAKI,MAAQ,CACXkE,SAAU,GACVC,KAAM,IARS,E,gEAajBC,EAAuB5B,SACpBW,aAAa,MACbV,GAAG,QAASnC,KAAK+B,gB,6CAIpB+B,EAAuB5B,SAASE,IAAI,QAASpC,KAAK+B,gB,mCAGvCM,GACX,IAAIuB,EAAW,GACfvB,EAAMC,SAAQ,SAACC,GACb,IAAI9D,EAAO8D,EAAKC,MACZ1D,EAAMyD,EAAKzD,IACf8E,EAAS/E,KAAK,CACZC,MACA8B,GAAInC,EAAKmC,GACTG,KAAMtC,EAAKsC,KACXgD,QAAStF,EAAKsF,QACdC,KAAMvF,EAAKuF,KACXC,SAAUxF,EAAKwF,SACfC,MAAOzF,EAAKyF,MACZL,KAAMpF,EAAKoF,KACXM,QAAS1F,EAAK0F,UAAW,OAI7BnE,KAAKC,SAAS,CACZ2D,SAAUA,M,mCAID7D,GACX,IAAMqE,EAAarE,EAAEsE,OAAO,cAC5BrE,KAAKC,SAAS,CAAE4D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","file":"static/js/main.be897b7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/factory.6400acb9.jpg\";","import * as firebase from \"firebase\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nlet config = {\n  apiKey: \"AIzaSyB31L20GfT5Gpz8ZGRnQy56BNze6Jvsi_Q\",\n  authDomain: \"toptec-6a5ef.firebaseapp.com\",\n  databaseURL: \"https://toptec-6a5ef.firebaseio.com\",\n  projectId: \"toptec-6a5ef\",\n  storageBucket: \"toptec-6a5ef.appspot.com\",\n  messagingSenderId: \"996609770390\",\n  appId: \"1:996609770390:web:805010f6a1e028688f53b7\",\n};\n\nfirebase.initializeApp(config);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport default firebase.database();\nexport const firestore = firebase.firestore();\n\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\n\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const { email, displayName, photoURL } = user;\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async (uid) => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n\n    return {\n      uid,\n      ...userDocument.data(),\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/tutorials\");\n\nclass TutorialDataService {\n  getAll() {\n    return db;\n  }\n\n  create(tutorial) {\n    return db.push(tutorial);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new TutorialDataService();\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false,\n    };\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  saveTutorial() {\n    let data = {\n      title: this.state.title,\n      description: this.state.description,\n      published: false\n    };\n\n    TutorialDataService.create(data)\n      .then(() => {\n        console.log(\"Created new item successfully!\");\n        this.setState({\n          submitted: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n\n    this.state = {\n      currentTutorial: {\n        key: null,\n        title: \"\",\n        description: \"\",\n        published: false,\n      },\n      message: \"\",\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { tutorial } = nextProps;\n    if (prevState.currentTutorial.key !== tutorial.key) {\n      return {\n        currentTutorial: tutorial,\n        message: \"\"\n      };\n    }\n\n    return prevState.currentTutorial;\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentTutorial: this.props.tutorial,\n    });\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          title: title,\n        },\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n\n    this.setState((prevState) => ({\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        description: description,\n      },\n    }));\n  }\n\n  updatePublished(status) {\n    TutorialDataService.update(this.state.currentTutorial.key, {\n      published: status,\n    })\n      .then(() => {\n        this.setState((prevState) => ({\n          currentTutorial: {\n            ...prevState.currentTutorial,\n            published: status,\n          },\n          message: \"The status was updated successfully!\",\n        }));\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  updateTutorial() {\n    const data = {\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n    };\n\n    TutorialDataService.update(this.state.currentTutorial.key, data)\n      .then(() => {\n        this.setState({\n          message: \"The tutorial was updated successfully!\",\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  deleteTutorial() {\n    TutorialDataService.delete(this.state.currentTutorial.key)\n      .then(() => {\n        this.props.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentTutorial } = this.state;\n\n    return (\n      <div>\n        <h4>Tutorial</h4>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.title}\n                  onChange={this.onChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentTutorial.description}\n                  onChange={this.onChangeDescription}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\n              </div>\n            </form>\n\n            {currentTutorial.published ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteTutorial}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateTutorial}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Tutorial...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nimport Tutorial from \"./tutorial.component\";\n\nexport default class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n    };\n  }\n\n  componentDidMount() {\n    TutorialDataService.getAll().on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    TutorialDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let tutorials = [];\n\n    items.forEach((item) => {\n      let key = item.key;\n      let data = item.val();\n      tutorials.push({\n        key: key,\n        title: data.title,\n        description: data.description,\n        published: data.published,\n      });\n    });\n\n    this.setState({\n      tutorials: tutorials,\n    });\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll()\n      .then(() => {\n        this.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { tutorials, currentTutorial, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <h4>Tutorials List</h4>\n\n          <ul className=\"list-group\">\n            {tutorials &&\n              tutorials.map((tutorial, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\n                  key={index}\n                >\n                  {tutorial.title}\n                </li>\n              ))}\n          </ul>\n\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllTutorials}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentTutorial ? (\n            <Tutorial\n              tutorial={currentTutorial}\n              refreshList={this.refreshList}\n            />\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Tutorial...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/reservation\");\nconst a = firebase.ref(\"/clients\")\nconst totalPeople = firebase.ref(\"/totalPersonas\")\n\nclass ReservationDataService {\n  getAll() {\n    return db;\n  }\n\n  getLast() {\n    a.orderByChild(\"id\")\n    .limitToLast(1).once(\"value\", function(snapshot) {\n      console.log('snaps', snapshot.val());\n    }, function (errorObject) {\n      console.log(\"The read failed: \" + errorObject.code);\n    });\n    // return a.orderByChild(\"id\").limitToLast(1);\n  }\n\n  create(reservation) {\n    return db.push(reservation);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n\n  createTotal(value) {\n    return totalPeople.push(value);\n  }\n\n  getTotal() {\n    return totalPeople;\n  }\n\n  updateTotal(key, value) {\n    return totalPeople.child(key).update(value);\n  }\n}\n\nexport default new ReservationDataService();\n","export default [\n  \"Windy\",\n  \"Temple\",\n  \"La Lacteo\",\n  \"DDL\",\n  \"Don Abdon\",\n  \"Diafana\",\n  \"Cremosur\",\n  \"La Cabaña\",\n  \"Punta del Agua\",\n  \"La Tirolesa\",\n  \"Grassetto\",\n  \"Plenty\",\n  \"Frigorifico Recreo\",\n  \"Frigorifico Paladini\",\n  \"Generico\",\n  \"Cluselat\",\n];\n\nexport const passKey = \"passname\";\n\nexport const turnos = [\n  {\n    value: \"turno1\",\n    name: \"Turno 1 (19:30 - 22:30hs)\",\n  },\n  {\n    value: \"turno2\",\n    name: \"Turno 2 (22:30 - 03:00hs)\",\n  },\n];\n\nexport const mesasArray = [\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n  24,\n  25,\n  26,\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51,\n  52,\n  53,\n  54,\n  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  62,\n  63,\n  64,\n  65,\n  66,\n  67,\n  68,\n  69,\n  70,\n  71,\n  72,\n  73,\n  74,\n  75,\n  76,\n  77,\n  78,\n  79,\n  80,\n  81,\n  82,\n  83,\n  84,\n  85,\n  86,\n  87,\n  88,\n];\n\nexport const dias = [\n  {\n    value: 1,\n    name: \"Lunes\",\n  },\n  {\n    value: 2,\n    name: \"Martes\",\n  },\n  {\n    value: 3,\n    name: \"Miércoles\",\n  },\n  {\n    value: 4,\n    name: \"Jueves\",\n  },\n  {\n    value: 5,\n    name: \"Viernes\",\n  },\n  {\n    value: 6,\n    name: \"Sábado\",\n  },\n  {\n    value: 0,\n    name: \"Domingo\",\n  },\n];\n","import React, { Component } from \"react\";\nimport Datetime from \"react-datetime\";\nimport { Toast, Modal } from \"antd-mobile\";\nimport {\n  Paper,\n  InputLabel,\n  Select,\n  MenuItem,\n  Checkbox,\n  Button,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport moment from \"moment\";\nimport ReservationDataService from \"../../services/reservation.service\";\nimport { turnos } from \"../../utils/default\";\n\nconst alert = Modal.alert;\n\nexport default class ReservaList extends Component {\n  constructor(props) {\n    super(props);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.deleteReserva = this.deleteReserva.bind(this);\n\n    this.state = {\n      reservas: [],\n      date: \"\",\n    };\n  }\n\n  componentDidMount() {\n    ReservationDataService.getAll()\n      .orderByChild(\"id\")\n      .on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    ReservationDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let reservas = [];\n    items.forEach((item) => {\n      let data = item.val();\n      let key = item.key;\n      reservas.push({\n        key,\n        id: data.id,\n        name: data.name,\n        adentro: data.adentro,\n        mesa: data.mesa,\n        cantidad: data.cantidad,\n        turno: data.turno,\n        date: data.date,\n        asistio: data.asistio || false,\n      });\n    });\n\n    this.setState({\n      reservas: reservas,\n    });\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format(\"DD-MM-YYYY\");\n    this.setState({ date: dateFormat });\n  }\n\n  deleteReserva() {\n    const { date, reservas } = this.state;\n\n    const filerReserva = reservas.filter(\n      (reserv) => moment(reserv.date, \"DD-MM-YYYY\").isSame(moment(date, \"DD-MM-YYYY\"))\n    );\n    console.log(filerReserva);\n    filerReserva.forEach((resrv) => {\n      ReservationDataService.delete(resrv.key)\n        .then()\n        .catch((e) => {\n          Toast.fail(\"Ocurrió un error !!!\", 2);\n        });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <h4>Eliminar reservas</h4>\n          <div className=\"form-group\">\n            <label htmlFor=\"fecha\">Seleccione fecha de reserva</label>\n            <Datetime\n              className=\"post-input  post-input__event\"\n              dateFormat=\"DD-MM-YYYY\"\n              timeFormat={false}\n              name=\"eventDate\"\n              utc\n              closeOnSelect\n              initialValue={moment(new Date().getTime()).format(\"DD-MM-YYYY\")}\n              value={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n          <div>\n            <Button\n              aria-label=\"delete\"\n              type=\"button\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() =>\n                alert(\"Eliminar\", \"Estás seguro???\", [\n                  { text: \"Cancelar\" },\n                  {\n                    text: \"Ok\",\n                    onPress: () => this.deleteReserva(),\n                  },\n                ])\n              }\n            >\n              Eliminar\n              <DeleteIcon />\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/users\");\n\nclass UsersDataService {\n  getAll() {\n    return db;\n  }\n\n  getUser(email) {\n    db.orderByChild(\"email\")\n    .equalTo(email)\n    .once(\"child_added\")\n    .then((snapshot) => {\n      const data = snapshot.val();\n      return data;\n    })\n  }\n\n  create(user) {\n    return db.push(user);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new UsersDataService();\n","import React, { Component } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport { Toast } from \"antd-mobile\";\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Box,\n  Typography,\n  Link,\n  Grid,\n  Container,\n  Checkbox,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport LoginService from \"../../services/users.service\";\nimport { passKey } from \"../../utils/default\";\n\nexport default class SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: false,\n    };\n    this.getUser = this.getUser.bind(this);\n    this.verifyLogin = this.verifyLogin.bind(this);\n    this.onChangeValues = this.onChangeValues.bind(this);\n  }\n\n  componentDidMount() {\n    localStorage.removeItem('currentUser');\n  }\n\n  onChangeValues(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ \n      [name]: value,\n      error: false,\n    });\n  }\n\n  getUser() {\n    LoginService.getAll()\n      .orderByChild(\"email\")\n      .equalTo(this.state.email)\n      .once(\"child_added\", this.verifyLogin)\n      .catch(this.setState({error:true}))\n  }\n\n  verifyLogin(user) {\n    const pass = user.val().password;\n    const actualPass = this.state.password;\n    const bytes = CryptoJS.AES.decrypt(pass, passKey);\n    const originalText = bytes.toString(CryptoJS.enc.Utf8);\n    if (actualPass === originalText) {\n      this.setState({error:false})\n      const data = {\n        userName: user.val().userName,\n        email: user.val().email,\n        rol: user.val().rol,\n      }\n      localStorage.setItem('currentUser', JSON.stringify(data));\n      window.location = \"/\";\n    } else {\n      this.setState({ error: true });\n    }\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className=\"form-container\">\n          <Avatar className=\"avatar\">\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Iniciar Sesión\n          </Typography>\n          {this.state.error && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              El usuario o la contraseña son incorrectos\n            </div>\n          )}\n          <div className=\"login-container\">\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={this.onChangeValues}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  name=\"password\"\n                  label=\"Contraseña\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={this.onChangeValues}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\n                  label=\"Recordarme\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"button__save\"\n              onClick={this.getUser}\n            >\n              Iniciar Sesión\n            </Button>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <Link href=\"/register\" variant=\"body2\">\n                  No tienes una cuenta? Regístrate\n                </Link>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n        <Box mt={5}>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \"}\n            <Link color=\"inherit\">\n              TopTec\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n          </Typography>\n        </Box>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport { Toast } from \"antd-mobile\";\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Box,\n  Typography,\n  Link,\n  Grid,\n  Container,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport LoginService from \"../../services/users.service\";\nimport { passKey } from \"../../utils/default\";\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      email: \"\",\n      rol: \"gym\",\n    };\n    this.onSaveUser = this.onSaveUser.bind(this);\n    this.onChangeValues = this.onChangeValues.bind(this);\n  }\n\n  onChangeValues(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  onSaveUser() {\n    var ciphertext = CryptoJS.AES.encrypt(\n      this.state.password,\n      passKey\n    ).toString();\n    let data = {\n      userName: this.state.userName,\n      password: ciphertext,\n      email: this.state.email,\n      rol: this.state.rol,\n    };\n\n    LoginService.create(data)\n      .then(() => {\n        Toast.success(\"Cargado correctamente!!\", 1, () => {\n          window.location = \"/login\";\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className=\"form-container\">\n          <Avatar className=\"avatar\">\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Registro\n          </Typography>\n          <div className=\"login-container\">\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"userName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"userName\"\n                  label=\"Nombre de usuario\"\n                  autoFocus\n                  onChange={this.onChangeValues}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={this.onChangeValues}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Contraseña\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={this.onChangeValues}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"button__save\"\n              onClick={this.onSaveUser}\n            >\n              Registrar\n            </Button>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Ya tienes una cuenta? Iniciar sesión\n                </Link>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n        <Box mt={5}>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \"}\n            <Link color=\"inherit\">TopTec</Link> {new Date().getFullYear()}\n            {\".\"}\n          </Typography>\n        </Box>\n      </Container>\n    );\n  }\n}\n","import React, { Component, createContext } from \"react\";\nimport { auth, generateUserDocument } from \"../firebase\";\n\n\nexport const UserContext = createContext({ user: null });\n\nclass UserProvider extends Component {\n  state = {\n    user: null\n  };\n\n  \n  \n  componentDidMount = async () => {\n    auth.onAuthStateChanged(async userAuth => {\n      const user = await generateUserDocument(userAuth);\n      this.setState({ user });\n    });\n\n\n  };\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <UserContext.Provider value={user}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default UserProvider;\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport {auth} from \"../../firebase\";\nconst ProfilePage = () => {\n  const user = useContext(UserContext);\n  const {photoURL, displayName, email} = user;\n  console.log(user);\n  \n\n  return (\n    <div className = \"mx-auto w-11/12 md:w-2/4 py-8 px-4 md:px-8\">\n      <div className=\"flex border flex-col items-center md:flex-row md:items-start border-blue-400 px-3 py-4\">\n        <div\n          style={{\n            background: `url(${photoURL || 'https://res.cloudinary.com/dqcsk8rsc/image/upload/v1577268053/avatar-1-bitmoji_upgwhc.png'})  no-repeat center center`,\n            backgroundSize: \"cover\",\n            height: \"200px\",\n            width: \"200px\"\n          }}\n          className=\"border border-blue-300\"\n        ></div>\n        <div className = \"md:pl-4\">\n        <h2 className = \"text-2xl font-semibold\">{displayName}</h2>\n        <h3 className = \"italic\">{email}</h3>\n        </div>\n      </div>\n      <button className = \"w-full py-3 bg-red-600 mt-4 text-white\" onClick = {() => {auth.signOut()}}>Sign out</button>\n    </div>\n  ) \n};\n\nexport default ProfilePage;\n\n","import React, { Component } from 'react';\nimport Datetime from 'react-datetime';\nimport { Toast, Modal } from 'antd-mobile';\nimport {\n  Paper,\n  InputLabel,\n  Select,\n  MenuItem,\n  Checkbox,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport moment from 'moment';\nimport ReservationDataService from '../../services/reservation.service';\nimport { turnos } from '../../utils/default';\nimport { mesasArray } from '../../utils/default';\nconst queryString = require('query-string');\n\nconst alert = Modal.alert;\n\nexport default class ReservaList extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangeTurno = this.onChangeTurno.bind(this);\n    this.filterReservations = this.filterReservations.bind(this);\n    this.deleteReserva = this.deleteReserva.bind(this);\n    this.changeSelect = this.changeSelect.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.onChangeValueCant = this.onChangeValueCant.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.editCant = this.editCant.bind(this);\n    this.changeTotal = this.changeTotal.bind(this);\n    this.onGetTotales = this.onGetTotales.bind(this);\n\n    this.state = {\n      reservas: [],\n      currentIndex: -1,\n      date:\n        queryString.parse(this.props.location.search).date ||\n        moment(new Date().getTime()).format('DD-MM-YYYY'),\n      turno: queryString.parse(this.props.location.search).turno || 'turno1',\n      reservaFilter: [],\n      cantAdentro: 0,\n      cantAfuera: 0,\n      cantTotal: 0,\n      totalAsistentes: 0,\n      reservation: {\n        cantidad: '',\n      },\n      indexOpen: -1,\n      contadorTotal: 0,\n    };\n  }\n\n  componentDidMount() {\n    let dateFormat = moment(new Date().getTime()).format('DD-MM-YYYY');\n    if (!this.props.location.search) {\n      window.location.href = `/forest/reservas?date=${dateFormat}&turno=turno1`;\n    } else {\n      const params = queryString.parse(this.props.location.search);\n      dateFormat = params.date;\n    }\n    \n    ReservationDataService.getTotal()\n      .orderByChild('date')\n      .equalTo(dateFormat)\n      .on('child_added', this.onGetTotales);\n    ReservationDataService.getAll()\n      .orderByChild('date')\n      .equalTo(dateFormat)\n      .on('value', this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    ReservationDataService.getAll().off('value', this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let reservas = [];\n    items.forEach((item) => {\n      let data = item.val();\n      let key = item.key;\n      reservas.push({\n        key,\n        id: data.id,\n        name: data.name,\n        adentro: data.adentro,\n        mesa: data.mesa,\n        cantidad: data.cantidad,\n        turno: data.turno,\n        date: data.date,\n        asistio: data.asistio || false,\n      });\n    });\n\n    this.setState({\n      reservas: reservas,\n    });\n    if (!this.state.currentTotal) {\n      let data = {\n        date: this.state.date,\n        value: 0,\n      };\n      ReservationDataService.createTotal(data)\n        .then((log) => {\n          this.setState({\n            currentTotal: {\n              date: this.state.date,\n              value: 0,\n              key: log.key\n            },\n          });\n        })\n        .catch((e) => {\n          Toast.fail('Ocurrió un error !!!', 2);\n        });\n    }\n    this.filterReservations();\n  }\n\n  filterReservations(fecha, turnoParam) {\n    const { reservas, turno, date } = this.state;\n    // const dateEmpty = date === '' ? moment(new Date().getTime()).format(\"DD-MM-YYYY\") : date;\n    let reserva = [];\n    let cantAdentro = 0;\n    let cantAfuera = 0;\n    let totalPersonas = 0;\n    let totalAsistentes = 0;\n    const turnoComp = turnoParam || turno;\n    const fechaComp = fecha || date;\n    reservas.forEach((item) => {\n      if (item.date === fechaComp && item.turno === turnoComp) {\n        reserva.push(item);\n        cantAdentro = item.adentro ? cantAdentro + 1 : cantAdentro;\n        cantAfuera = !item.adentro ? cantAfuera + 1 : cantAfuera;\n        totalPersonas += parseInt(item.cantidad, 10);\n        if (item.asistio) {\n          totalAsistentes += parseInt(item.cantidad, 10);\n        }\n      }\n    });\n\n    // Order by mesa\n    reserva = reserva.sort((a, b) => a.mesa - b.mesa);\n\n    this.setState({\n      reservaFilter: reserva,\n      cantAdentro,\n      cantAfuera,\n      cantTotal: totalPersonas,\n      totalAsistentes,\n      date: fecha || date,\n    });\n  }\n\n  onGetTotales(item) {\n    let key = item.key;\n    let data = item.val();\n    const currentTotal = data;\n    currentTotal.key = key;\n    this.setState({ currentTotal, contadorTotal: data.value });\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format('DD-MM-YYYY');\n    window.location.href = `/forest/reservas?date=${dateFormat}&turno=${this.state.turno}`;\n  }\n\n  onChangeTurno(e) {\n    window.location.href = `/forest/reservas?date=${this.state.date}&turno=${e.target.value}`;\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  deleteReserva(key) {\n    ReservationDataService.delete(key)\n      .then(() => {\n        Toast.success('Eliminado correctamente!!', 1, () => {\n          window.location.reload(false);\n        });\n      })\n      .catch((e) => {\n        Toast.fail('Ocurrió un error !!!', 2);\n      });\n  }\n\n  changeSelect(reserva) {\n    const data = {\n      asistio: !reserva.asistio,\n    };\n\n    ReservationDataService.update(reserva.key, data)\n      .then(() => {\n        this.filterReservations();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  handleOpenModal(index, reserva) {\n    this.setState({\n      // editProd: true,\n      indexOpen: index,\n      reservation: {\n        cantidad: reserva.cantidad,\n      },\n    });\n  }\n\n  onChangeValueCant(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      reservation: {\n        cantidad: value,\n      },\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      indexOpen: -1,\n    });\n  }\n\n  editCant(reserva) {\n    const data = {\n      cantidad: parseInt(this.state.reservation.cantidad, 10),\n    };\n    ReservationDataService.update(reserva.key, data)\n      .then(() => {\n        Toast.success('Actualizado correctamente...', 1, () => {\n          window.location.reload();\n        });\n      })\n      .catch((e) => {\n        Toast.fail('Ocurrió un error !!!', 2);\n      });\n  }\n\n  changeTotal(value) {\n    const { currentTotal } = this.state;\n    let data = {\n      value:\n        value === 'sum'\n          ? this.state.contadorTotal + 1\n          : this.state.contadorTotal - 1,\n    };\n\n    if (currentTotal) {\n      ReservationDataService.updateTotal(this.state.currentTotal.key, data)\n        .then()\n        .catch((e) => {\n          Toast.fail('Ocurrió un error !!!', 2);\n        });\n        this.setState({\n          contadorTotal: data.value,\n        });\n    }\n  }\n\n  render() {\n    const {\n      reservaFilter,\n      cantAdentro,\n      contadorTotal,\n      cantTotal,\n      totalAsistentes,\n      indexOpen,\n      reservation,\n    } = this.state;\n    const totalMesas = mesasArray.length;\n    const totalAfuera = 54;\n    const totalAdentro = 19;\n    const colorTotal = cantTotal > 150 ? 'red' : '';\n    const colorMoment = totalAsistentes > 150 ? 'red' : '';\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <div className=\"new-reservation\">\n            <a\n              className=\"btn btn-primary\"\n              href=\"/forest/reservation\"\n              role=\"button\"\n            >\n              Nueva reserva\n            </a>\n            <a\n              className=\"btn btn-primary mesa__map\"\n              href={`/forest/mesas?date=${this.state.date}`}\n              role=\"button\"\n            >\n              Mapa mesas\n            </a>\n          </div>\n          <h4>Listado de reservas</h4>\n          <div className=\"form-group\">\n            <label htmlFor=\"fecha\">Seleccione fecha de reserva</label>\n            <Datetime\n              className=\"post-input  post-input__event\"\n              dateFormat=\"DD-MM-YYYY\"\n              timeFormat={false}\n              name=\"eventDate\"\n              utc\n              closeOnSelect\n              initialValue={moment(new Date().getTime()).format('DD-MM-YYYY')}\n              value={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n          <div className=\"form-group\">\n            <InputLabel>Turno</InputLabel>\n            <Select\n              onChange={this.onChangeTurno}\n              value={this.state.turno}\n              className=\"select__form\"\n              fullWidth\n            >\n              {turnos.map((turno) => (\n                <MenuItem key={turno.value} value={turno.value}>\n                  {turno.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </div>\n\n          <Paper className=\"info__pedidos\">\n            <div className=\"list__reservas\">\n              <span className=\"total__title\">\n                Total reservas: {reservaFilter.length}{' '}\n              </span>\n              {/* <span>Adentro: {cantAdentro} </span>\n              <span className=\"cant__afuera\">Afuera: {cantAfuera} </span> */}\n            </div>\n            <div className=\"list__libres\">\n              <span className=\"total__title free\">\n                Mesas libres: {totalMesas - reservaFilter.length}\n              </span>\n              {/* <span>Adentro: {totalAdentro - cantAdentro} </span>\n              <span className=\"cant__afuera\">\n                Afuera: {totalAfuera - cantAfuera}{\" \"}\n              </span> */}\n            </div>\n            <span className={`cant__total ${colorTotal}`}>\n              Personas previstas: {cantTotal}\n            </span>\n            <span className={`cant__total-asist ${colorMoment}`}>\n              Personas que asistieron: {totalAsistentes}\n            </span>\n            <div className=\"total-personas__container\">\n              <span className=\"total__label\">Contador de personas</span>\n              <IconButton\n                aria-label=\"delete\"\n                disabled={contadorTotal < 1}\n                onClick={(e) => {\n                  e.preventDefault();\n                  this.changeTotal('res');\n                }}\n              >\n                <RemoveIcon />\n              </IconButton>\n              <TextField\n                value={contadorTotal}\n                variant=\"outlined\"\n                className=\"total-personas\"\n                size=\"small\"\n                // onChange={}\n              />\n              <IconButton\n                aria-label=\"add\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  this.changeTotal('sum');\n                }}\n              >\n                <AddIcon />\n              </IconButton>\n            </div>\n          </Paper>\n          <div className=\"table-container\">\n            <table className=\"table\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\">Asistió</th>\n                  <th scope=\"col\">Mesa</th>\n                  <th scope=\"col\">Nombre</th>\n                  <th scope=\"col\">Cantidad</th>\n                  <th scope=\"col\">Ubicación</th>\n                  <th scope=\"col\">Acciones</th>\n                </tr>\n              </thead>\n              <tbody>\n                {reservaFilter &&\n                  reservaFilter.map((reserva, index) => (\n                    <tr key={index}>\n                      <td>\n                        <Checkbox\n                          checked={reserva.asistio}\n                          color=\"primary\"\n                          onChange={(e) => {\n                            e.preventDefault();\n                            this.changeSelect(reserva);\n                          }}\n                        />\n                      </td>\n                      <td>{reserva.mesa}</td>\n                      <td>\n                        <a href={`/forest/mesa/${reserva.id}`}>\n                          {reserva.name}\n                        </a>\n                      </td>\n                      {/* <td>\n                        {reserva.name}\n                      </td> */}\n                      <td>\n                        {reserva.cantidad}\n                        <IconButton\n                          className=\"action__link\"\n                          size=\"small\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            this.handleOpenModal(index, reserva);\n                          }}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                        <Dialog\n                          open={indexOpen === index}\n                          aria-labelledby=\"form-dialog-title\"\n                        >\n                          <DialogTitle\n                            id=\"form-dialog-title\"\n                            onClose={this.handleClose}\n                          >\n                            Editar cantidad de personas\n                          </DialogTitle>\n                          <DialogContent>\n                            <TextField\n                              className=\"prod-input\"\n                              autoFocus\n                              fullWidth\n                              margin=\"dense\"\n                              name=\"cantidad\"\n                              label=\"Cantidad pers.\"\n                              type=\"number\"\n                              value={reservation.cantidad}\n                              onChange={this.onChangeValueCant}\n                            />\n                          </DialogContent>\n                          <DialogActions>\n                            <Button color=\"primary\" onClick={this.handleClose}>\n                              Cancelar\n                            </Button>\n                            <Button\n                              color=\"primary\"\n                              disabled={reservation.cantidad === ''}\n                              onClick={(e) => {\n                                e.preventDefault();\n                                this.editCant(reserva);\n                              }}\n                            >\n                              Aceptar\n                            </Button>\n                          </DialogActions>\n                        </Dialog>\n                      </td>\n                      <td>{reserva.adentro ? 'Adentro' : 'Afuera'}</td>\n                      <td>\n                        <IconButton\n                          aria-label=\"delete\"\n                          className=\"action__link\"\n                          href={`/forest/reserva/${reserva.id}`}\n                          role=\"button\"\n                        >\n                          <EditIcon />\n                        </IconButton>\n                        <IconButton\n                          aria-label=\"delete\"\n                          type=\"button\"\n                          className=\"action__button\"\n                          onClick={() =>\n                            alert('Eliminar', 'Estás seguro???', [\n                              { text: 'Cancelar' },\n                              {\n                                text: 'Ok',\n                                onPress: () => this.deleteReserva(reserva.key),\n                              },\n                            ])\n                          }\n                        >\n                          <DeleteIcon color=\"secondary\" />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n            {reservaFilter.length === 0 && (\n              <div className=\"empty__container\">\n                <span className=\"message-empty\">No hay reservas aún</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Datetime from \"react-datetime\";\nimport { Toast } from \"antd-mobile\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  Container,\n  InputLabel,\n  MenuItem,\n  Select,\n  Checkbox,\n  FormControlLabel,\n  Tooltip,\n  IconButton,\n} from \"@material-ui/core\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport moment from \"moment\";\nimport ReservationDataService from \"../../services/reservation.service\";\nimport { turnos } from \"../../utils/default\";\n\nconst limitePorMesa = 6;\n\nexport default class AddReservation extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeCantidad = this.onChangeCantidad.bind(this);\n    this.onChangeAdentro = this.onChangeAdentro.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangeTurno = this.onChangeTurno.bind(this);\n    this.onChangeCumple = this.onChangeCumple.bind(this);\n    this.saveReserva = this.saveReserva.bind(this);\n    this.newReserva = this.newReserva.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.getMesas = this.getMesas.bind(this);\n    this.obtainLastMesa = this.obtainLastMesa.bind(this);\n\n    this.state = {\n      name: \"\",\n      adentro: false,\n      mesa: '',\n      cantidad: \"\",\n      date: moment(new Date().getTime()).format(\"DD-MM-YYYY\"),\n      turno: \"turno1\",\n      lastId: 0,\n      mesasAdentro: {},\n      mesasAfuera: {},\n      error: false,\n      isCumple: false,\n      cantidadMesas: \"\",\n\n      submitted: false,\n    };\n  }\n\n  componentDidMount() {\n    ReservationDataService.getAll()\n      .orderByChild(\"id\")\n      .limitToLast(1)\n      .once(\"child_added\", this.onDataChange);\n    ReservationDataService.getAll()\n      .orderByChild(\"mesa\")\n      .on(\"value\", this.getMesas);\n  }\n\n  componentWillUnmount() {\n    ReservationDataService.getAll().off(\"child_added\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    this.setState({\n      lastId: items.val().id || 0,\n    });\n  }\n\n  getMesas(items) {\n    let reservas = [];\n    items.forEach((item) => {\n      let data = item.val();\n      reservas.push({\n        name: data.name,\n        adentro: data.adentro,\n        mesa: data.mesa,\n        cantidad: data.cantidad,\n        turno: data.turno,\n        date: data.date,\n      });\n    });\n    this.setState({\n      reservas: reservas,\n    });\n    this.obtainLastMesa();\n  }\n\n  obtainLastMesa(fecha, turnoParam) {\n    const { reservas, turno, date } = this.state;\n    let lastMesaAdentro = 0;\n    let lastMesaAfuera = 10;\n    const turnoComp = turnoParam || turno;\n    const fechaComp = fecha || date;\n    reservas.forEach((item) => {\n      if (item.date === fechaComp && item.turno === turnoComp) {\n        lastMesaAdentro = item.adentro ? item.mesa : lastMesaAdentro;\n        lastMesaAfuera = !item.adentro ? item.mesa : lastMesaAfuera;\n      }\n    });\n    this.setState({ lastMesaAdentro, lastMesaAfuera });\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  onChangeCantidad(e) {\n    this.setState({\n      cantidad: e.target.value,\n    });\n  }\n\n  onChangeAdentro() {\n    this.setState({\n      adentro: !this.state.adentro,\n    });\n  }\n\n  onChangeCumple() {\n    this.setState({\n      isCumple: !this.state.isCumple,\n    });\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format(\"DD-MM-YYYY\");\n    this.setState({ date: dateFormat });\n    this.obtainLastMesa(dateFormat, \"\");\n  }\n\n  onChangeTurno(e) {\n    this.setState({ turno: e.target.value });\n    this.obtainLastMesa(\"\", e.target.value);\n  }\n\n  validationLugar(mesa) {\n    if (this.state.adentro && mesa > 10) {\n      return false;\n    }\n    if (!this.state.adentro && mesa > 55) {\n      return false;\n    }\n    return true;\n  }\n\n  saveReserva() {\n    const promises = [];\n    const cantMesasDiv = this.state.cantidad / limitePorMesa;\n    const cantMesas =\n      this.state.cantidad % limitePorMesa === 0\n        ? Math.trunc(cantMesasDiv)\n        : Math.trunc(cantMesasDiv) + 1;\n    let restoMesas = this.state.cantidad;\n    const nameCumple = this.state.isCumple\n      ? `${this.state.name} (Cumple)`\n      : this.state.name;\n    for (let i = 1; i < cantMesas + 1; i++) {\n      let quantity = restoMesas < limitePorMesa ? restoMesas : limitePorMesa;\n      let data = {\n        id: this.state.lastId + i,\n        name: nameCumple,\n        adentro: this.state.adentro,\n        // mesa: this.state.adentro\n        //   ? this.state.lastMesaAdentro + i\n        //   : this.state.lastMesaAfuera + i,\n        mesa: '',\n        cantidad: parseInt(quantity, 10),\n        date: this.state.date,\n        turno: this.state.turno,\n        asistio: false,\n        activa: false,\n      };\n      restoMesas = restoMesas - limitePorMesa;\n      // if (this.validationLugar(data.mesa)) {\n        promises.push(data);\n      // } else {\n      //   this.setState({ error: true });\n      // }\n    }\n\n    if (cantMesas === promises.length) {\n      promises.forEach((data) => {\n        ReservationDataService.create(data)\n          .then(() => {\n            Toast.loading(\"Loading...\", 1, () => {\n              this.setState({\n                submitted: true,\n              });\n            });\n          })\n          .catch((e) => {\n            Toast.fail(\"Ocurrió un error !!!\", 2);\n          });\n      });\n    }\n  }\n\n  newReserva() {\n    this.setState({\n      name: \"\",\n      adentro: false,\n      mesa: 0,\n      cantidad: 0,\n      date: moment(new Date().getTime()).format(\"DD-MM-YYYY\"),\n      turno: \"turno1\",\n      isCumple: false,\n\n      submitted: false,\n    });\n  }\n\n  render() {\n    const textUbicacion = this.state.adentro ? \"Adentro\" : \"Afuera\";\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Reserva creada correctamente!</h4>\n            <a\n              role=\"button\"\n              className=\"btn btn-success\"\n              href=\"/forest/reservation\"\n            >\n              Nueva\n            </a>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/forest/reservas\"\n              role=\"button\"\n            >\n              Listado\n            </a>\n          </div>\n        ) : (\n          <div className=\"form-container\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Nueva Reserva\n            </Typography>\n            <div className=\"login-container\">\n              {this.state.error && (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  Se superó la cantidad máxima de mesas para {textUbicacion}\n                  <Tooltip\n                    title=\"Mesas adentro: 1 - 10. Mesas afuera: 11 - 55\"\n                    open={this.state.open}\n                  >\n                    <IconButton\n                      aria-label=\"mesas\"\n                      onClick={this.changeTooltip}\n                      color=\"secondary\"\n                    >\n                      <HelpOutlineIcon />\n                    </IconButton>\n                  </Tooltip>\n                </div>\n              )}\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <InputLabel>Fecha</InputLabel>\n                  <Datetime\n                    className=\"post-input  post-input__event\"\n                    dateFormat=\"DD-MM-YYYY\"\n                    timeFormat={false}\n                    name=\"eventDate\"\n                    utc\n                    closeOnSelect\n                    value={this.state.date}\n                    onChange={this.onChangeDate}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputLabel>Turno</InputLabel>\n                  <Select\n                    onChange={this.onChangeTurno}\n                    value={this.state.turno}\n                    className=\"select__form\"\n                    fullWidth\n                  >\n                    {turnos.map((turno) => (\n                      <MenuItem key={turno.value} value={turno.value}>\n                        {turno.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"name\"\n                    label=\"Nombre\"\n                    value={this.state.name}\n                    name=\"name\"\n                    onChange={this.onChangeName}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        value={this.state.isCumple}\n                        onChange={this.onChangeCumple}\n                        name=\"iscumple\"\n                      />\n                    }\n                    labelPlacement=\"start\"\n                    label=\"Cumpleaños?\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    className=\"default__textfield\"\n                    fullWidth\n                    required\n                    id=\"cantidad\"\n                    label=\"Cantidad de personas\"\n                    value={this.state.cantidad}\n                    name=\"cantidad\"\n                    onChange={this.onChangeCantidad}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        value={this.state.adentro}\n                        onChange={this.onChangeAdentro}\n                        name=\"iscumple\"\n                      />\n                    }\n                    labelPlacement=\"start\"\n                    label=\"Adentro\"\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"button__save\"\n                onClick={this.saveReserva}\n                disabled={this.state.name === \"\" || this.state.cantidad === \"\"}\n              >\n                Aceptar\n              </Button>\n            </div>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Datetime from \"react-datetime\";\nimport { Toast } from \"antd-mobile\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  Container,\n  Checkbox,\n  FormControlLabel,\n  Tooltip,\n  IconButton,\n} from \"@material-ui/core\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport moment from \"moment\";\nimport ReservationDataService from \"../../services/reservation.service\";\n\nconst limitePorMesa = 6;\n\nexport default class AddReservation extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeMesa = this.onChangeMesa.bind(this);\n    this.onChangeCantidad = this.onChangeCantidad.bind(this);\n    this.onChangeAdentro = this.onChangeAdentro.bind(this);\n    this.updateReserva = this.updateReserva.bind(this);\n    this.changeTooltip = this.changeTooltip.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.getMesas = this.getMesas.bind(this);\n    this.obtainLastMesa = this.obtainLastMesa.bind(this);\n\n    this.state = {\n      currentReserva: {\n        key: null,\n        id: 0,\n        name: \"\",\n        adentro: false,\n        mesa: 0,\n        cantidad: \"\",\n        date: moment(new Date().getTime()).format(\"DD-MM-YYYY\"),\n        turno: \"turno1\",\n      },\n      mesasAdentro: {},\n      mesasAfuera: {},\n      error: {\n        value: false,\n        message: \"\",\n      },\n      open: false,\n\n      submitted: false,\n    };\n  }\n\n  componentDidMount() {\n    const id = parseInt(this.props.match.params.id, 10);\n    ReservationDataService.getAll()\n      .orderByChild(\"id\")\n      .equalTo(id)\n      .once(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    ReservationDataService.getAll().off(\"child_added\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let key = Object.keys(items.val());\n    let data = items.val();\n    const currentReserva = data[key];\n    currentReserva.key = key[0];\n    this.setState({ currentReserva });\n    ReservationDataService.getAll()\n      .orderByChild(\"mesa\")\n      .on(\"value\", this.getMesas);\n  }\n\n  getMesas(items) {\n    const { currentReserva } = this.state;\n    let reservas = [];\n    items.forEach((item) => {\n      let data = item.val();\n      if (\n        data.turno === currentReserva.turno &&\n        data.date === currentReserva.date\n      ) {\n        reservas.push({\n          id: data.id,\n          name: data.name,\n          adentro: data.adentro,\n          mesa: data.mesa,\n          cantidad: data.cantidad,\n          turno: data.turno,\n          date: data.date,\n        });\n      }\n    });\n    this.setState({\n      reservas,\n    });\n  }\n\n  obtainLastMesa(fecha, turnoParam) {\n    const { reservas, turno, date } = this.state;\n    // let reserva = [];\n    let lastMesaAdentro = 0;\n    let lastMesaAfuera = 11;\n    const turnoComp = turnoParam || turno;\n    const fechaComp = fecha || date;\n    reservas.forEach((item) => {\n      if (item.date === fechaComp && item.turno === turnoComp) {\n        lastMesaAdentro = item.adentro ? item.mesa : lastMesaAdentro;\n        lastMesaAfuera = !item.adentro ? item.mesa : lastMesaAfuera;\n      }\n    });\n    this.setState({ lastMesaAdentro, lastMesaAfuera });\n  }\n\n  onChangeName(e) {\n    this.setState({\n      currentReserva: {\n        ...this.state.currentReserva,\n        name: e.target.value,\n      },\n    });\n  }\n\n  onChangeMesa(e) {\n    this.setState({\n      currentReserva: {\n        ...this.state.currentReserva,\n        mesa: e.target.value,\n      },\n      error: {\n        value: false,\n        message: \"\",\n      },\n    });\n  }\n\n  onChangeCantidad(e) {\n    this.setState({\n      currentReserva: {\n        ...this.state.currentReserva,\n        cantidad: e.target.value,\n      },\n    });\n  }\n\n  onChangeAdentro(e) {\n    this.setState({\n      currentReserva: {\n        ...this.state.currentReserva,\n        adentro: !this.state.currentReserva.adentro,\n      },\n    });\n  }\n\n  validationLugar(mesa) {\n    // if (this.state.currentReserva.adentro && mesa > 10) {\n    //   this.setState({\n    //     error: {\n    //       value: true,\n    //       message: \"Número de mesa no corresponde para Adentro\",\n    //     },\n    //   });\n    //   return false;\n    // }\n    // if (!this.state.currentReserva.adentro && (mesa > 55 || mesa < 11)) {\n    //   this.setState({\n    //     error: {\n    //       value: true,\n    //       message: \"Número de mesa no corresponde para Afuera\",\n    //     },\n    //   });\n    //   return false;\n    // }\n    if (\n      this.state.reservas.filter(\n        (res) => res.mesa === mesa && res.id !== this.state.currentReserva.id\n      ).length > 0\n    ) {\n      this.setState({\n        error: {\n          value: true,\n          message: \"Ya existe otra reserva con ese Nº de mesa\",\n        },\n      });\n      return false;\n    }\n\n    if (this.state.currentReserva.cantidad > limitePorMesa) {\n      this.setState({\n        error: {\n          value: true,\n          message: `Cantidad máxima por mesas (${limitePorMesa}) superada`,\n        },\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  updateReserva() {\n    const data = {\n      id: this.state.currentReserva.id,\n      name: this.state.currentReserva.name,\n      mesa: parseInt(this.state.currentReserva.mesa, 10),\n      cantidad: parseInt(this.state.currentReserva.cantidad, 10),\n      date: this.state.currentReserva.date,\n      turno: this.state.currentReserva.turno,\n      adentro: this.state.currentReserva.adentro,\n    };\n\n    if (this.validationLugar(data.mesa)) {\n      ReservationDataService.update(this.state.currentReserva.key, data)\n        .then(() => {\n          this.setState({\n            submitted: true,\n            error: {\n              value: false,\n              message: \"\",\n            },\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  }\n\n  changeTooltip() {\n    this.setState({ open: !this.state.open });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Reserva editada correctamente!</h4>\n            <a\n              className=\"btn btn-success\"\n              href=\"/forest/reservation\"\n              role=\"button\"\n            >\n              Nueva Reserva\n            </a>\n            {/* <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/forest/reservas\"\n              role=\"button\"\n            >\n              Listado\n            </a> */}\n          </div>\n        ) : (\n          <div className=\"form-container\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Editar Reserva\n            </Typography>\n            <div className=\"login-container\">\n              {this.state.error.value && (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.error.message}\n                  <Tooltip\n                    title=\"Mesas adentro: 1 - 10. Mesas afuera: 11 - 55\"\n                    open={this.state.open}\n                  >\n                    <IconButton\n                      aria-label=\"mesas\"\n                      onClick={this.changeTooltip}\n                      color=\"secondary\"\n                    >\n                      <HelpOutlineIcon />\n                    </IconButton>\n                  </Tooltip>\n                </div>\n              )}\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"standard-basic\"\n                    label=\"Fecha\"\n                    value={this.state.currentReserva.date}\n                    disabled\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"standard-basic\"\n                    label=\"Turno\"\n                    value={this.state.currentReserva.turno}\n                    disabled\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"name\"\n                    label=\"Nombre\"\n                    value={this.state.currentReserva.name}\n                    name=\"name\"\n                    onChange={this.onChangeName}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    className=\"default__textfield\"\n                    fullWidth\n                    required\n                    id=\"cantidad\"\n                    label=\"Cantidad de personas\"\n                    value={this.state.currentReserva.cantidad}\n                    name=\"cantidad\"\n                    onChange={this.onChangeCantidad}\n                    error={this.state.currentReserva.cantidad > limitePorMesa}\n                    helperText={\n                      this.state.currentReserva.cantidad > limitePorMesa\n                        ? \"Cantidad máxima por mesa superada\"\n                        : \"\"\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        value={this.state.currentReserva.adentro}\n                        onChange={this.onChangeAdentro}\n                        name=\"iscumple\"\n                        checked={this.state.currentReserva.adentro}\n                      />\n                    }\n                    labelPlacement=\"start\"\n                    label=\"Adentro\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    className=\"default__textfield\"\n                    fullWidth\n                    required\n                    id=\"mesa\"\n                    label=\"Mesa\"\n                    name=\"mesa\"\n                    value={this.state.currentReserva.mesa}\n                    onChange={this.onChangeMesa}\n                    min={this.state.currentReserva.adentro ? 1 : 11}\n                    max={this.state.currentReserva.adentro ? 10 : 55}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"button__save\"\n                onClick={this.updateReserva}\n                disabled={\n                  this.state.currentReserva.name === \"\" ||\n                  this.state.currentReserva.cantidad === \"\"\n                }\n              >\n                Aceptar\n              </Button>\n            </div>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n//       <div className=\"submit-form\">\n//         {this.state.submitted ? (\n//           <div>\n//             <h4>Reserva editada correctamente!</h4>\n//             <a className=\"btn btn-success\"  href=\"/forest/reservation\" role=\"button\">\n//               Nueva Reserva\n//             </a>\n//             <a className=\"btn btn-primary go-listado\" href=\"/forest/reservas\" role=\"button\">\n//               Listado\n//             </a>\n//           </div>\n//         ) : (\n//           <div>\n//             <h4>Editar Reserva</h4>\n//             <div className=\"form-group\">\n//               <TextField\n//                 id=\"standard-basic\"\n//                 label=\"Fecha\"\n//                 value={this.state.currentReserva.date}\n//                 disabled\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <TextField\n//                 id=\"standard-basic\"\n//                 label=\"Turno\"\n//                 value={this.state.currentReserva.turno}\n//                 disabled\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label htmlFor=\"name\">Nombre</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 id=\"name\"\n//                 required\n//                 value={this.state.currentReserva.name}\n//                 onChange={this.onChangeName}\n//                 name=\"name\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label htmlFor=\"cantidad\">Cantidad</label>\n//               <input\n//                 type=\"number\"\n//                 className=\"form-control\"\n//                 id=\"cantidad\"\n//                 required\n//                 value={this.state.currentReserva.cantidad}\n//                 onChange={this.onChangeCantidad}\n//                 name=\"cantidad\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label htmlFor=\"adentro\">Adentro</label>\n//               <input\n//                 type=\"checkbox\"\n//                 className=\"form-control checkbox__adentro\"\n//                 id=\"adentro\"\n//                 required\n//                 value={this.state.currentReserva.adentro}\n//                 checked={this.state.currentReserva.adentro}\n//                 onChange={this.onChangeAdentro}\n//                 name=\"adentro\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label htmlFor=\"adentro\">Mesa</label>\n//               <input\n//                 type=\"number\"\n//                 className=\"form-control\"\n//                 id=\"mesa\"\n//                 required\n//                 value={this.state.currentReserva.mesa}\n//                 onChange={this.onChangeMesa}\n//                 min={this.state.currentReserva.adentro ? 1 : 11}\n//                 max={this.state.currentReserva.adentro ? 10 : 55}\n//                 name=\"mesa\"\n//               />\n//             </div>\n\n//             {this.state.error.value && (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                 {this.state.error.message}\n//               </div>\n//             )}\n\n//             <button\n//               onClick={this.updateReserva}\n//               className=\"btn btn-success\"\n//               disabled={this.state.name === \"\" || this.state.cantidad === \"\"}\n//             >\n//               Aceptar\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n","import React, { Component } from \"react\";\nimport Datetime from \"react-datetime\";\nimport { Toast, Modal } from \"antd-mobile\";\nimport {\n  Breadcrumbs,\n  TextField,\n  Typography,\n  Link,\n  Container,\n  Checkbox,\n  FormControlLabel,\n  Tooltip,\n  IconButton,\n} from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport moment from \"moment\";\nimport { mesasArray } from \"../../utils/default\";\nimport ReservationDataService from \"../../services/reservation.service\";\nconst alert = Modal.alert;\n\nconst limitePorMesa = 6;\n\nexport default class AddReservation extends Component {\n  constructor(props) {\n    super(props);\n    this.updateReserva = this.updateReserva.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.getMesas = this.getMesas.bind(this);\n\n    this.state = {\n      currentReserva: {\n        key: null,\n        id: 0,\n        name: \"\",\n        adentro: false,\n        mesa: 0,\n        cantidad: \"\",\n        date: moment(new Date().getTime()).format(\"DD-MM-YYYY\"),\n        turno: \"turno1\",\n      },\n      reservas: [],\n      open: false,\n\n      submitted: false,\n    };\n  }\n\n  componentDidMount() {\n    const id = parseInt(this.props.match.params.id, 10);\n    ReservationDataService.getAll()\n      .orderByChild(\"id\")\n      .equalTo(id)\n      .once(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    ReservationDataService.getAll().off(\"child_added\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let key = Object.keys(items.val());\n    let data = items.val();\n    const currentReserva = data[key];\n    currentReserva.key = key[0];\n    this.setState({ currentReserva });\n    ReservationDataService.getAll()\n      .orderByChild(\"mesa\")\n      .on(\"value\", this.getMesas);\n  }\n\n  getMesas(items) {\n    const { currentReserva } = this.state;\n    let reservas = [];\n    items.forEach((item) => {\n      let data = item.val();\n      let key = item.key;\n      if (data.date === currentReserva.date && data.activa) {\n        reservas.push({\n          key,\n          id: data.id,\n          mesa: data.mesa,\n          turno: data.turno,\n          date: data.date,\n          activa: data.activa || false,\n        });\n      }\n    });\n    this.setState({\n      reservas,\n    });\n  }\n\n  validationLugar(mesa) {\n    if (this.state.currentReserva.adentro && mesa > 10) {\n      this.setState({\n        error: {\n          value: true,\n          message: \"Número de mesa no corresponde para Adentro\",\n        },\n      });\n      return false;\n    }\n    if (!this.state.currentReserva.adentro && (mesa > 55 || mesa < 11)) {\n      this.setState({\n        error: {\n          value: true,\n          message: \"Número de mesa no corresponde para Afuera\",\n        },\n      });\n      return false;\n    }\n    if (\n      this.state.reservas.filter(\n        (res) => res.mesa === mesa && res.id !== this.state.currentReserva.id\n      ).length > 0\n    ) {\n      this.setState({\n        error: {\n          value: true,\n          message: \"Ya existe otra reserva con ese Nº de mesa\",\n        },\n      });\n      return false;\n    }\n\n    if (this.state.currentReserva.cantidad > limitePorMesa) {\n      this.setState({\n        error: {\n          value: true,\n          message: `Cantidad máxima por mesas (${limitePorMesa}) superada`,\n        },\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  updateReserva(e, nroMesa, reserva, type) {\n    const dataSet = {\n      mesa: nroMesa,\n      activa: true,\n    };\n\n    const dataActive = {\n      activa: false,\n      mesa: \"\",\n    };\n\n    const dataUpdate = {\n      activa: true,\n      mesa:\n        this.state.currentReserva.mesa !== \"\"\n          ? this.state.currentReserva.mesa\n          : \"\",\n    };\n\n    const mesaFilter =\n      reserva !== \"\" && reserva.length > 1\n        ? reserva.filter((res) => res.turno === this.state.currentReserva.turno)\n        : reserva;\n\n        console.log(reserva, mesaFilter, this.state.currentReserva.mesa);\n\n    if (reserva && type === \"free\") {\n      ReservationDataService.update(mesaFilter[0].key, dataActive)\n        .then(() => {\n          Toast.success(\"Mesa actualizada correctamente!!\", 1);\n        })\n        .catch((e) => {\n          Toast.fail(\"Ocurrió un error !!!\", 2);\n        });\n    } else {\n      if (\n        this.state.currentReserva.mesa === \"\" &&\n        type === \"assign\" &&\n        reserva.filter((res) => res.turno === this.state.currentReserva.turno).length > 0\n      ) {\n        Toast.fail(\"Ya hay una mesa asignada en este turno\", 2);\n      // } else if (\n      //   this.state.currentReserva.mesa !== \"\" &&\n      //   type === \"assign\" &&\n      //   reserva\n      // ) {\n      //   ReservationDataService.update(reserva[0].key, dataUpdate)\n      //     .then()\n      //     .catch((e) => {\n      //       Toast.fail(\"Ocurrió un error !!!\", 2);\n      //     });\n      //   ReservationDataService.update(this.state.currentReserva.key, dataSet)\n      //     .then(() => {\n      //       Toast.success(\"Mesa asignada correctamente!!\", 1);\n      //     })\n      //     .catch((e) => {\n      //       Toast.fail(\"Ocurrió un error !!!\", 2);\n      //     });\n      } else {\n        ReservationDataService.update(this.state.currentReserva.key, dataSet)\n          .then(() => {\n            Toast.success(\"Mesa asignada correctamente!!\", 1);\n          })\n          .catch((e) => {\n            Toast.fail(\"Ocurrió un error !!!\", 2);\n          });\n      }\n    }\n  }\n\n  render() {\n    const { currentReserva, reservas } = this.state;\n    const mesas = [];\n    mesasArray.forEach((mesa, i) => {\n      const mesaFilter = reservas.filter((res) => res.mesa === mesa);\n      let mesaColor = \"\";\n      if (mesaFilter.length > 1) {\n        mesaColor = \"button-mesa two-colors\";\n      }\n      if (mesaFilter.length === 1) {\n        mesaColor = `button-mesa ${mesaFilter[0].turno}`;\n      }\n      mesas.push(\n        <button\n          // disabled={reservas.filter((res) => res.mesa === i).length > 0}\n          key={mesa}\n          className={mesaFilter.length > 0 ? mesaColor : \"button-mesa\"}\n          onClick={(e) => {\n            if (mesaFilter.length > 0) {\n              alert(\"Actualizar mesas\", <div>Que desea hacer?</div>, [\n                {\n                  text: \"Asignar mesa\",\n                  onPress: () => this.updateReserva(e, mesa, mesaFilter, \"assign\"),\n                },\n                {\n                  text: \"Liberar mesa\",\n                  onPress: () => this.updateReserva(e, mesa, mesaFilter, \"free\"),\n                },\n                {\n                  text: \"Cancelar\",\n                },\n              ]);\n            } else {\n              e.preventDefault();\n              this.updateReserva(e, mesa, \"\", \"\");\n            }\n          }}\n        >\n          {mesa}\n        </button>\n     );\n    });\n\n    // for (let i = 601; i < 604; i += 1) {\n    //   const mesaFilter = reservas.filter((res) => res.mesa === i);\n    //   let mesaColor = \"\";\n    //   if (mesaFilter.length > 1) {\n    //     mesaColor = \"button-mesa digits two-colors\";\n    //   }\n    //   if (mesaFilter.length === 1) {\n    //     mesaColor = `button-mesa digits ${mesaFilter[0].turno}`;\n    //   }\n    //   mesas.push(\n    //     <button\n    //       disabled={reservas.filter((res) => res.mesa === i).length > 0}\n    //       key={i}\n    //       className={mesaFilter.length > 0 ? mesaColor : \"button-mesa digits\"}\n    //       onClick={(e) => {\n    //         if (mesaFilter.length > 0) {\n    //           alert(\"Actualizar mesas\", <div>Que desea hacer?</div>, [\n    //             {\n    //               text: \"Asignar mesa\",\n    //               onPress: () => this.updateReserva(e, i, mesaFilter, \"assign\"),\n    //             },\n    //             {\n    //               text: \"Liberar mesa\",\n    //               onPress: () => this.updateReserva(e, i, mesaFilter, \"free\"),\n    //             },\n    //             {\n    //               text: \"Cancelar\",\n    //             },\n    //           ]);\n    //         } else {\n    //           e.preventDefault();\n    //           this.updateReserva(e, i, \"\", \"\");\n    //         }\n    //       }}\n    //     >\n    //       {i}\n    //     </button>\n    //   );\n    // }\n\n    return (\n      <Container className=\"map__container\" component=\"main\" maxWidth=\"xs\">\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link color=\"primary\" href=\"/forest/reservas\">\n            Listado reservas\n          </Link>\n          <Typography color=\"textPrimary\">Seleccionar mesa</Typography>\n        </Breadcrumbs>\n        <Typography component=\"h1\" variant=\"h5\">\n          Reserva: {currentReserva.name.toUpperCase()}\n        </Typography>\n        <span>\n          <FiberManualRecordIcon color=\"secondary\" />\n          Turno 1\n        </span>\n        <span className=\"turno2-text\">\n          <FiberManualRecordIcon color=\"primary\" />\n          Turno 2\n        </span>\n        <div className=\"button-mesa__container\">{mesas}</div>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Datetime from \"react-datetime\";\nimport { Toast, Modal } from \"antd-mobile\";\nimport { Breadcrumbs, Typography, Link, Container } from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport moment from \"moment\";\nimport ReservationDataService from \"../../services/reservation.service\";\nimport { mesasArray } from \"../../utils/default\";\nconst queryString = require(\"query-string\");\nconst alert = Modal.alert;\n\nexport default class MesaMap extends Component {\n  constructor(props) {\n    super(props);\n    this.updateReserva = this.updateReserva.bind(this);\n    this.getMesas = this.getMesas.bind(this);\n    this.changeMesa = this.changeMesa.bind(this);\n    this.resetValues = this.resetValues.bind(this);\n    \n    this.state = {\n      currentReserva: {\n        key: null,\n        id: 0,\n        name: \"\",\n        adentro: false,\n        mesa: 0,\n        cantidad: \"\",\n        date: moment(new Date().getTime()).format(\"DD-MM-YYYY\"),\n        turno: \"turno1\",\n      },\n      type: \"\",\n      reservas: [],\n      open: false,\n      turno: \"\",\n\n      submitted: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.search) {\n      const params = queryString.parse(this.props.location.search);\n      ReservationDataService.getAll()\n        .orderByChild(\"date\")\n        .equalTo(params.date)\n        .once(\"value\", this.getMesas);\n    }\n  }\n\n  componentWillUnmount() {\n    ReservationDataService.getAll().off(\"child_added\", this.onDataChange);\n  }\n\n  getMesas(items) {\n    let reservas = [];\n    items.forEach((item) => {\n      let data = item.val();\n      let key = item.key;\n      reservas.push({\n        key,\n        name: data.name,\n        id: data.id,\n        mesa: data.mesa,\n        turno: data.turno,\n        date: data.date,\n        cantidad: data.cantidad,\n        activa: data.activa || false,\n      });\n    });\n    this.setState({\n      reservas,\n      date: queryString.parse(this.props.location.search).date,\n    });\n  }\n\n  changeMesa(e, nroMesa, reserva, type) {\n    const filterReserva =\n      this.state.turno !== \"\"\n        ? reserva.filter((reserv) => reserv.turno === this.state.turno)[0]\n        : reserva[0];\n    this.setState({\n      currentReserva: filterReserva,\n      type,\n    });\n  }\n\n  selectTurno(turno) {\n    this.setState({ turno });\n  }\n\n  resetValues() {\n    this.setState({\n      type: \"\",\n      open: false,\n      turno: \"\",\n    })\n  }\n\n  updateReserva(e, nroMesa, reserva, type) {\n    const dataSet = {\n      mesa: nroMesa,\n      activa: true,\n    };\n\n    const dataActive = {\n      activa: false,\n      mesa: \"\",\n    };\n\n    const dataUpdate = {\n      activa: true,\n      mesa: this.state.currentReserva.mesa,\n    };\n\n    const mesaFilter =\n      reserva !== \"\" && reserva.length > 1\n        ? reserva.filter((res) => res.turno === this.state.currentReserva.turno)\n        : reserva;\n\n    if (reserva && type === \"free\") {\n      ReservationDataService.update(mesaFilter[0].key, dataActive)\n        .then(() => {\n          Toast.success(\"Mesa liberada correctamente!!\", 1);\n          window.location.reload();\n        })\n        .catch((e) => {\n          Toast.fail(\"Ocurrió un error !!!\", 2);\n        });\n    }\n\n    if (this.state.type === \"assign\") {\n      ReservationDataService.update(this.state.currentReserva.key, dataSet)\n        .then(() => {\n          Toast.success(\"Mesa actualizada correctamente!!\", 1);\n          window.location.reload();\n        })\n        .catch((e) => {\n          Toast.fail(\"Ocurrió un error !!!\", 2);\n        });\n    }\n\n    if (this.state.type === \"transport\") {\n      ReservationDataService.update(mesaFilter[0].key, dataUpdate)\n        .then()\n        .catch((e) => {\n          Toast.fail(\"Ocurrió un error !!!\", 2);\n        });\n      ReservationDataService.update(this.state.currentReserva.key, dataSet)\n        .then(() => {\n          Toast.success(\"Mesa actualizada correctamente!!\", 1);\n          window.location.reload();\n        })\n        .catch((e) => {\n          Toast.fail(\"Ocurrió un error !!!\", 2);\n        });\n    }\n  }\n\n  render() {\n    const { currentReserva, reservas, type } = this.state;\n    const mesas = [];\n    mesasArray.forEach((mesa, i) => {\n      const mesaFilter = reservas.filter((res) => res.mesa === mesa);\n      const turnoFilter = mesaFilter.filter((filt) => filt.turno === currentReserva.turno);\n      let mesaColor = \"\";\n      if (mesaFilter.length > 1) {\n        mesaColor = \"button-mesa two-colors\";\n      }\n      if (mesaFilter.length === 1) {\n        mesaColor = `button-mesa ${mesaFilter[0].turno}`;\n      }\n      mesas.push(\n        <button\n          disabled={\n            (mesaFilter.length > 0 &&\n              type === \"assign\" &&\n              turnoFilter.length > 0) ||\n            (mesaFilter.length === 0 && type === \"\") ||\n            (type === \"transport\" && (mesaFilter.length === 0 || turnoFilter.length <= 0))\n          }\n          key={i}\n          className={mesaFilter.length > 0 ? mesaColor : \"button-mesa\"}\n          onClick={(e) => {\n            if (mesaFilter.length > 0 && type === \"\") {\n              const nombre = mesaFilter.length === 1 ? mesaFilter[0].name : turnoFilter[0].name\n              const turno = mesaFilter.length === 1 ? mesaFilter[0].turno : turnoFilter[0].turno\n              const cantidad = mesaFilter.length === 1 ? mesaFilter[0].cantidad : turnoFilter[0].cantidad\n              alert(\"Actualizar mesas\",\n              <div>\n                <span className=\"detail__reserva-modal\">Nombre: {nombre}</span>\n                <span className=\"detail__reserva-modal\">Turno: {turno}</span>\n                <span className=\"detail__reserva-modal\">Cant. Personas: {cantidad}</span>\n              </div>, [\n                {\n                  text: \"Asignar nueva mesa\",\n                  onPress: () => this.changeMesa(e, mesa, mesaFilter, \"assign\"),\n                },\n                {\n                  text: \"Intercambiar mesas\",\n                  onPress: () =>\n                    this.changeMesa(e, mesa, mesaFilter, \"transport\"),\n                },\n                {\n                  text: \"Liberar mesa\",\n                  onPress: () =>\n                    this.updateReserva(e, mesa, mesaFilter, \"free\"),\n                },\n                {\n                  text: \"Cancelar\",\n                  onPress: () => this.resetValues(),\n                },\n              ]);\n              if (mesaFilter.length > 1) {\n                alert(\"Actualizar mesas\", <div>Seleccionar turno</div>, [\n                  {\n                    text: \"Turno 1\",\n                    onPress: () => this.selectTurno(\"turno1\"),\n                  },\n                  {\n                    text: \"Turno 2\",\n                    onPress: () => this.selectTurno(\"turno2\"),\n                  },\n                  {\n                    text: \"Cancelar\",\n                    onPress: () => this.resetValues(),\n                  },\n                ]);\n              }\n            }\n            if (type === \"assign\") {\n              e.preventDefault();\n              this.updateReserva(e, mesa, currentReserva, \"\");\n            }\n            if (type === \"transport\") {\n              e.preventDefault();\n              this.updateReserva(e, mesa, mesaFilter, \"\");\n            }\n          }}\n        >\n          {mesa}\n        </button>\n      );\n    });\n\n    // for (let i = 601; i < 604; i += 1) {\n    //   const mesaFilter = reservas.filter((res) => res.mesa === i);\n    //   let mesaColor = \"\";\n    //   if (mesaFilter.length > 1) {\n    //     mesaColor = \"button-mesa digits two-colors\";\n    //   }\n    //   if (mesaFilter.length === 1) {\n    //     mesaColor = `button-mesa digits ${mesaFilter[0].turno}`;\n    //   }\n    //   mesas.push(\n    //     <button\n    //       disabled={reservas.filter((res) => res.mesa === i).length > 0}\n    //       key={i}\n    //       className={mesaFilter.length > 0 ? mesaColor : \"button-mesa digits\"}\n    //       onClick={(e) => {\n    //         if (mesaFilter.length > 0) {\n    //           alert(\"Actualizar mesas\", <div>Que desea hacer?</div>, [\n    //             {\n    //               text: \"Asignar mesa\",\n    //               onPress: () => this.updateReserva(e, i, mesaFilter, \"assign\"),\n    //             },\n    //             {\n    //               text: \"Liberar mesa\",\n    //               onPress: () => this.updateReserva(e, i, mesaFilter, \"free\"),\n    //             },\n    //             {\n    //               text: \"Cancelar\",\n    //             },\n    //           ]);\n    //         } else {\n    //           e.preventDefault();\n    //           this.updateReserva(e, i, \"\", \"\");\n    //         }\n    //       }}\n    //     >\n    //       {i}\n    //     </button>\n    //   );\n    // }\n\n    return (\n      <Container className=\"map__container\" component=\"main\" maxWidth=\"xs\">\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link color=\"primary\" href=\"/forest/reservas\">\n            Listado reservas\n          </Link>\n          <Typography color=\"textPrimary\">Seleccionar mesa</Typography>\n        </Breadcrumbs>\n        <Typography component=\"h1\" variant=\"h5\">\n          Reservas del {this.state.date}\n        </Typography>\n        <span>\n          <FiberManualRecordIcon color=\"secondary\" />\n          Turno 1\n        </span>\n        <span className=\"turno2-text\">\n          <FiberManualRecordIcon color=\"primary\" />\n          Turno 2\n        </span>\n        <div className=\"button-mesa__container\">{mesas}</div>\n      </Container>\n    );\n  }\n}\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/clients\");\n\nclass ClientsDataService {\n  getAll() {\n    return db;\n  }\n\n  create(clients) {\n    return db.push(clients);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new ClientsDataService();\n","import React, { Component } from \"react\";\nimport ClientsDataService from \"../../../services/clients.service\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  Container,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { dias } from \"../../../utils/default\";\n\nexport default class AddClient extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeValues = this.onChangeValues.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.saveClient = this.saveClient.bind(this);\n    this.newClient = this.newClient.bind(this);\n    this.onChangeDay = this.onChangeDay.bind(this);\n    \n    this.state = {\n      barrio: \"\",\n      domicilio: \"\",\n      dni: \"\",\n      formato_comercial: \"\",\n      razon_social: \"\",\n      telefono: \"\",\n      estado: \"no visitado\",\n      motivo: \"\",\n      lastId: 0,\n      dia: 1,\n      condicionIva: \"\",\n\n      submitted: false,\n    };\n  }\n\n  componentDidMount() {\n    ClientsDataService.getAll()\n      .orderByChild(\"id\")\n      .limitToLast(1)\n      .once(\"child_added\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    ClientsDataService.getAll().off(\"child_added\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    this.setState({\n      lastId: items.val().id || 0,\n    });\n  }\n\n  onChangeValues(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  onChangeDay(e) {\n    this.setState({ dia: e.target.value });\n  }\n\n  saveClient() {\n    let data = {\n      id: this.state.lastId + 1,\n      razon_social: this.state.razon_social,\n      domicilio: this.state.domicilio,\n      dni: this.state.dni,\n      barrio: this.state.barrio,\n      formato_comercial: this.state.formato_comercial,\n      telefono: this.state.telefono,\n      dia: this.state.dia,\n      motivo: this.state.motivo,\n      estado: this.state.estado,\n      condicionIva: this.state.condicionIva,\n    };\n\n    ClientsDataService.create(data)\n      .then(() => {\n        this.setState({\n          submitted: true,\n          lastId: this.state.lastId + 1,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newClient() {\n    this.setState({\n      barrio: \"\",\n      domicilio: \"\",\n      dni: \"\",\n      formato_comercial: \"\",\n      razon_social: \"\",\n      telefono: \"\",\n      estado: \"no visitado\",\n      motivo: \"\",\n      dia: 1,\n      condicionIva: \"\",\n\n      submitted: false,\n    });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Cliente creado correctamente!</h4>\n            <button className=\"btn btn-success\" onClick={this.newClient}>\n              Nuevo\n            </button>\n            <a className=\"btn btn-primary go-listado\" href=\"/list-client\" role=\"button\">\n              Listado\n            </a>\n          </div>\n        ) : (\n          <div className=\"form-container\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Nuevo Cliente\n            </Typography>\n            <div className=\"login-container\">\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"razon_social\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    autoFocus\n                    id=\"razon_social\"\n                    label=\"Razón social\"\n                    value={this.state.razon_social}\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"dni\"\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"dni\"\n                    value={this.state.dni}\n                    label=\"DNI/CUIT\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"domicilio\"\n                    label=\"Domicilio\"\n                    value={this.state.domicilio}\n                    name=\"domicilio\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"barrio\"\n                    label=\"Barrio\"\n                    value={this.state.barrio}\n                    name=\"barrio\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"formato_comercial\"\n                    label=\"Formato comercial\"\n                    value={this.state.formato_comercial}\n                    name=\"formato_comercial\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"telefono\"\n                    label=\"Teléfono\"\n                    name=\"telefono\"\n                    value={this.state.telefono}\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputLabel>Día</InputLabel>\n                  <Select\n                    onChange={this.onChangeDay}\n                    value={this.state.dia}\n                    className=\"select__form\"\n                    fullWidth\n                  >\n                    {dias.map((dia) => (\n                      <MenuItem key={dia.value} value={dia.value} name=\"dia\">\n                        {dia.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"condicionIva\"\n                    label=\"Condición IVA\"\n                    name=\"condicionIva\"\n                    value={this.state.condicionIva}\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"button__save\"\n                onClick={this.saveClient}\n              >\n                Aceptar\n              </Button>\n            </div>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Toast } from \"antd-mobile\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  Container,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport ClientService from \"../../../services/clients.service\";\nimport { dias } from \"../../../utils/default\";\n\nexport default class editClient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentClient: {\n        key: null,\n        id: 0,\n        barrio: \"\",\n        domicilio: \"\",\n        dni: \"\",\n        formato_comercial: \"\",\n        razon_social: \"\",\n        telefono: \"\",\n        dia: 1,\n        motivo: \"\",\n        estado: \"\",\n        condicionIva: \"\"\n      },\n\n      submitted: false,\n    };\n    this.updateClient = this.updateClient.bind(this);\n    this.onChangeValues = this.onChangeValues.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.onChangeDay = this.onChangeDay.bind(this);\n  }\n\n  componentDidMount() {\n    const id = parseInt(this.props.match.params.id, 10);\n    ClientService.getAll()\n      .orderByChild(\"id\")\n      .equalTo(id)\n      .once(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let key = Object.keys(items.val());\n    let data = items.val();\n    const currentClient = data[key];\n    currentClient.key = key[0];\n    this.setState({ currentClient });\n  }\n\n  onChangeValues(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      currentClient: {\n        ...this.state.currentClient,\n        [name]: value,\n      },\n    });\n  }\n\n  onChangeDay(e) {\n    this.setState({\n      currentClient: { ...this.state.currentClient, dia: e.target.value },\n    });\n  }\n\n  updateClient() {\n    const data = {\n      id: this.state.currentClient.id,\n      barrio: this.state.currentClient.barrio,\n      domicilio: this.state.currentClient.domicilio,\n      dni: this.state.currentClient.dni,\n      formato_comercial: this.state.currentClient.formato_comercial,\n      razon_social: this.state.currentClient.razon_social,\n      telefono: this.state.currentClient.telefono,\n      dia: this.state.currentClient.dia,\n      motivo: this.state.currentClient.motivo,\n      estado: this.state.currentClient.estado,\n      condicionIva: this.state.currentClient.condicionIva,\n    };\n\n    ClientService.update(this.state.currentClient.key, data)\n      .then(() => {\n        this.setState({\n          submitted: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Cliente editado correctamente!</h4>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/client\"\n              role=\"button\"\n            >\n              Nuevo\n            </a>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/list-client\"\n              role=\"button\"\n            >\n              Listado\n            </a>\n          </div>\n        ) : (\n          <div className=\"form-container\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Editar Cliente\n            </Typography>\n            <div className=\"login-container\">\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"id\"\n                    variant=\"outlined\"\n                    disabled\n                    fullWidth\n                    id=\"id\"\n                    label=\"ID\"\n                    value={this.state.currentClient.id}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"razon_social\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"razon_social\"\n                    label=\"Razón social\"\n                    value={this.state.currentClient.razon_social}\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"dni\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"dni\"\n                    value={this.state.currentClient.dni}\n                    label=\"DNI/CUIT\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"domicilio\"\n                    label=\"Domicilio\"\n                    value={this.state.currentClient.domicilio}\n                    name=\"domicilio\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"barrio\"\n                    label=\"Barrio\"\n                    value={this.state.currentClient.barrio}\n                    name=\"barrio\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"formato_comercial\"\n                    label=\"Formato comercial\"\n                    value={this.state.currentClient.formato_comercial}\n                    name=\"formato_comercial\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"telefono\"\n                    label=\"Teléfono\"\n                    name=\"telefono\"\n                    value={this.state.currentClient.telefono}\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputLabel>Día</InputLabel>\n                  <Select\n                    onChange={this.onChangeDay}\n                    value={this.state.currentClient.dia}\n                    className=\"select__form\"\n                    fullWidth\n                  >\n                    {dias.map((dia) => (\n                      <MenuItem key={dia.value} value={dia.value}>\n                        {dia.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"condicionIva\"\n                    label=\"Condición IVA\"\n                    name=\"condicionIva\"\n                    value={this.state.currentClient.condicionIva}\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"button__save\"\n                onClick={this.updateClient}\n              >\n                Aceptar\n              </Button>\n            </div>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Toast } from \"antd-mobile\";\nimport ClientsDataService from \"../../../services/clients.service\";\nimport { Modal } from \"antd-mobile\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst alert = Modal.alert;\n\nexport default class listClient extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.deleteClient = this.deleteClient.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangeTurno = this.onChangeTurno.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n\n    this.state = {\n      clients: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      nombre: \"\",\n      domicilio: \"\",\n      dni: 0,\n      clientFilter: [],\n      searchTitle: \"\",\n    };\n  }\n\n  componentDidMount() {\n    ClientsDataService.getAll()\n      .orderByChild(\"id\")\n      .on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    ClientsDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let clients = [];\n    items.forEach((item) => {\n      let data = item.val();\n      let key = item.key;\n      clients.push({\n        key,\n        id: data.id,\n        razonSocial: data.razon_social,\n        domicilio: data.domicilio,\n        dni: data.dni,\n        telefono: data.telefono,\n      });\n    });\n\n    this.setState({ clients });\n  }\n\n  searchTitle(e) {\n    const { clients } = this.state;\n    clearTimeout(this.timer);\n    const value = e.target.value;\n    this.timer = setTimeout(() => {\n      if (value) {\n        clients.forEach((a) => a.domicilio.toLowerCase());\n        const filter = clients.filter(\n          (client) =>\n            client.razonSocial.toLowerCase().match(value.toLowerCase()) ||\n            client.domicilio.toLowerCase().match(value.toLowerCase())\n        );\n        this.setState({ clientFilter: filter, searchTitle: value });\n      } else {\n        this.setState({ searchTitle: \"\" });\n      }\n    }, 500);\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format(\"DD-MM-YYYY\");\n    this.setState({ date: dateFormat });\n    // this.filterReservations(dateFormat, \"\");\n  }\n\n  onChangeTurno(e) {\n    this.setState({ turno: e.target.value });\n\n    // this.filterReservations(\"\", e.target.value);\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  deleteClient(key) {\n    ClientsDataService.delete(key)\n      .then(() => {\n        Toast.success(\"Eliminado correctamente!!\", 1);\n      })\n      .catch((e) => {\n        Toast.fail(\"Ocurrió un error\", 1);\n      });\n  }\n\n  render() {\n    const { clients, searchTitle, clientFilter } = this.state;\n    const displayTable = searchTitle !== \"\" ? clientFilter : clients;\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <div className=\"new-reservation\">\n            <a className=\"btn btn-primary\" href=\"/client\" role=\"button\">\n              Nuevo cliente\n            </a>\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Buscar\"\n                onChange={this.searchTitle}\n              />\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-outline-secondary\" type=\"button\">\n                  <SearchIcon color=\"action\" />\n                </button>\n              </div>\n            </div>\n          </div>\n          <h4>Listado de clientes</h4>\n          <div className=\"table-container\">\n            <table className=\"table\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\">ID</th>\n                  <th scope=\"col\">Razón Social</th>\n                  <th scope=\"col\">Dirección</th>\n                  <th scope=\"col\">DNI/CUIT</th>\n                  <th scope=\"col\">Teléfono</th>\n                  <th scope=\"col\">Acciones</th>\n                </tr>\n              </thead>\n              <tbody>\n                {clients &&\n                  displayTable.map((cliente, index) => {\n                    return (\n                      <tr key={index}>\n                        <td>{cliente.id}</td>\n                        <td>\n                          <a href={`/pedido/${cliente.id}`}>\n                            {cliente.razonSocial}\n                          </a>\n                        </td>\n                        <td>{cliente.domicilio}</td>\n                        <td>{cliente.dni}</td>\n                        <td>{cliente.telefono}</td>\n                        <td className=\"column-actions\">\n                          <a\n                            className=\"btn btn-light\"\n                            href={`/client/${cliente.id}`}\n                            role=\"button\"\n                          >\n                            Editar\n                          </a>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-danger\"\n                            onClick={() =>\n                              alert(\"Eliminar\", \"Estás seguro???\", [\n                                { text: \"Cancelar\" },\n                                {\n                                  text: \"Ok\",\n                                  onPress: () =>\n                                    this.deleteClient(cliente.key),\n                                },\n                              ])\n                            }\n                          >\n                            Eliminar\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/productos\");\n\nclass ProductosDataService {\n  getAll() {\n    return db;\n  }\n\n  create(producto) {\n    return db.push(producto);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new ProductosDataService();\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  Container,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport ProductosDataService from \"../../../services/productos.service\";\nimport marcas from \"../../../utils/default\";\n\nexport default class AddProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeCodigo = this.onChangeCodigo.bind(this);\n    this.onChangeDescripcion = this.onChangeDescripcion.bind(this);\n    this.onChangeMarca = this.onChangeMarca.bind(this);\n    this.onChangeStock = this.onChangeStock.bind(this);\n    this.onChangePrecio = this.onChangePrecio.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.saveProduct = this.saveProduct.bind(this);\n    this.newProduct = this.newProduct.bind(this);\n    this.onChangeValues = this.onChangeValues.bind(this);\n\n    this.state = {\n      codigo: \"\",\n      descripcion: \"\",\n      marca: \"Windy\",\n      precio: \"\",\n      stock: 0,\n      lastId: 0,\n      peso: 1,\n\n      submitted: false,\n    };\n  }\n\n  componentDidMount() {\n    ProductosDataService.getAll()\n      .orderByChild(\"id\")\n      .limitToLast(1)\n      .once(\"child_added\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    ProductosDataService.getAll().off(\"child_added\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    this.setState({\n      lastId: items.val().id || 0,\n    });\n    console.log(items.val().id);\n  }\n\n  onChangeCodigo(e) {\n    this.setState({\n      codigo: e.target.value,\n    });\n  }\n\n  onChangeDescripcion(e) {\n    this.setState({\n      descripcion: e.target.value,\n    });\n  }\n\n  onChangeMarca(e) {\n    this.setState({ marca: e.target.value });\n  }\n\n  onChangePrecio(e) {\n    this.setState({ precio: e.target.value });\n  }\n\n  onChangeStock(e) {\n    this.setState({\n      stock: e.target.value,\n    });\n  }\n\n  onChangeValues(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  saveProduct() {\n    let data = {\n      id: this.state.lastId + 1,\n      codigo: this.state.codigo,\n      descripcion: this.state.descripcion,\n      stock: parseInt(this.state.stock, 10),\n      marca: this.state.marca,\n      precio: this.state.precio,\n      peso: this.state.peso,\n    };\n\n    ProductosDataService.create(data)\n      .then(() => {\n        this.setState({\n          submitted: true,\n          lastId: this.state.lastId + 1,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newProduct() {\n    this.setState({\n      codigo: \"\",\n      descripcion: \"\",\n      stock: 0,\n      marca: \"Windy\",\n      precio: \"\",\n      lastId: this.state.lastId,\n\n      submitted: false,\n    });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Producto creado correctamente!</h4>\n            <button className=\"btn btn-success\" onClick={this.newProduct}>\n              Nuevo\n            </button>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/list-products\"\n              role=\"button\"\n            >\n              Listado\n            </a>\n          </div>\n        ) : (\n          <div className=\"form-container\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Nuevo Producto\n            </Typography>\n            <div className=\"login-container\">\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"codigo\"\n                    label=\"Código\"\n                    value={this.state.codigo}\n                    name=\"codigo\"\n                    onChange={this.onChangeCodigo}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"descripcion\"\n                    label=\"Descripción\"\n                    value={this.state.descripcion}\n                    name=\"descripcion\"\n                    onChange={this.onChangeDescripcion}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputLabel>Marca</InputLabel>\n                  <Select\n                    onChange={this.onChangeMarca}\n                    value={this.state.marca}\n                    className=\"select__form\"\n                    fullWidth\n                  >\n                    {marcas.map((marca) => (\n                      <MenuItem key={marca} value={marca}>\n                        {marca}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"peso\"\n                    label=\"Peso\"\n                    value={this.state.peso}\n                    name=\"peso\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"precio\"\n                    label=\"Precio\"\n                    value={this.state.precio}\n                    name=\"precio\"\n                    onChange={this.onChangePrecio}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"stock\"\n                    label=\"Stock\"\n                    value={this.state.stock}\n                    name=\"stock\"\n                    onChange={this.onChangeStock}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"button__save\"\n                onClick={this.saveProduct}\n              >\n                Aceptar\n              </Button>\n            </div>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProductosDataService from \"../../../services/productos.service\";\nimport { Toast, Modal } from \"antd-mobile\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst alert = Modal.alert;\n\nexport default class listProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveProduct = this.setActiveProduct.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangeTurno = this.onChangeTurno.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n\n    this.state = {\n      products: [],\n      currentProduct: null,\n      currentIndex: -1,\n      productoFilter: [],\n      searchTitle: \"\",\n    };\n  }\n\n  componentDidMount() {\n    ProductosDataService.getAll()\n      .orderByChild(\"id\")\n      .on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    ProductosDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    const products = [];\n    items.forEach((item) => {\n      let key = item.key;\n      let data = item.val();\n      products.push({\n        key,\n        id: data.id,\n        codigo: data.codigo,\n        descripcion: data.descripcion,\n        peso: data.peso,\n        marca: data.marca,\n        stock: data.stock,\n        precio: data.precio,\n      });\n    });\n\n    this.setState({ products });\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle,\n    });\n  }\n\n  searchTitle(e) {\n    const { products } = this.state;\n    clearTimeout(this.timer);\n    const value = e.target.value;\n    this.timer = setTimeout(() => {\n      if (value) {\n        const filter = products.filter(\n          (prod) =>\n            prod.descripcion.toLowerCase().match(value.toLowerCase()) ||\n            prod.codigo.toLowerCase().match(value.toLowerCase()) ||\n            prod.marca.toLowerCase().match(value.toLowerCase())\n        );\n        this.setState({ productoFilter: filter, searchTitle: value });\n      } else {\n        this.setState({ searchTitle: \"\" });\n      }\n    }, 500);\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format(\"DD-MM-YYYY\");\n    this.setState({ date: dateFormat });\n    // this.filterReservations(dateFormat, \"\");\n  }\n\n  onChangeTurno(e) {\n    this.setState({ turno: e.target.value });\n\n    // this.filterReservations(\"\", e.target.value);\n  }\n\n  refreshList() {\n    this.setState({\n      currentProduct: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveProduct(product, index) {\n    this.setState({\n      currentProduct: product,\n      currentIndex: index,\n    });\n  }\n\n  deleteProduct(key) {\n    ProductosDataService.delete(key)\n      .then(() => {\n        Toast.success(\"Eliminado correctamente!!\", 1);\n      })\n      .catch((e) => {\n        Toast.fail(\"Ocurrió un error\", 1);\n      });\n  }\n\n  render() {\n    const { products, searchTitle, productoFilter } = this.state;\n    const displayTable = searchTitle !== \"\" ? productoFilter : products;\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <div className=\"new-reservation\">\n            <a className=\"btn btn-primary\" href=\"/products\" role=\"button\">\n              Nuevo producto\n            </a>\n            <a className=\"btn btn-primary change-price-button\" href=\"/change-price\" role=\"button\">\n              Cambiar precios masivamente\n            </a>\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Buscar\"\n                onChange={this.searchTitle}\n              />\n              <div className=\"input-group-append\">\n                <button\n                  className=\"btn btn-outline-secondary search-button\"\n                  type=\"button\"\n                >\n                  <SearchIcon color=\"action\" />\n                </button>\n              </div>\n            </div>\n          </div>\n          <h4>Listado de productos</h4>\n          <div className=\"table-container\">\n            <table className=\"table\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\">Código</th>\n                  <th scope=\"col\">Descripción</th>\n                  <th scope=\"col\">Peso</th>\n                  <th scope=\"col\">Marca</th>\n                  <th scope=\"col\">Stock</th>\n                  <th scope=\"col\">Precio</th>\n                  <th scope=\"col\">Acciones</th>\n                </tr>\n              </thead>\n              <tbody>\n                {products &&\n                  displayTable.map((producto, index) => {\n                    return (\n                      <tr key={index}>\n                        <td>{producto.codigo}</td>\n                        <td>{producto.descripcion}</td>\n                        <td>{producto.peso}</td>\n                        <td>{producto.marca}</td>\n                        <td>{producto.stock}</td>\n                        <td>${producto.precio}</td>\n                        <td className=\"column-actions\">\n                          <a\n                            className=\"btn btn-light\"\n                            href={`/product/${producto.id}`}\n                            role=\"button\"\n                          >\n                            Editar\n                          </a>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-danger\"\n                            onClick={() =>\n                              alert(\"Eliminar\", \"Estás seguro???\", [\n                                { text: \"Cancelar\" },\n                                {\n                                  text: \"Ok\",\n                                  onPress: () =>\n                                    this.deleteProduct(producto.key),\n                                },\n                              ])\n                            }\n                          >\n                            Eliminar\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProductosDataService from \"../../../services/productos.service\";\nimport marcas from \"../../../utils/default\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  Container,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nexport default class EditProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeCodigo = this.onChangeCodigo.bind(this);\n    this.onChangeDescripcion = this.onChangeDescripcion.bind(this);\n    this.onChangeMarca = this.onChangeMarca.bind(this);\n    this.onChangeStock = this.onChangeStock.bind(this);\n    this.onChangePrecio = this.onChangePrecio.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.updateProduct = this.updateProduct.bind(this);\n    this.onChangeValues = this.onChangeValues.bind(this);\n    \n    this.state = {\n      currentProduct: {\n        key: null,\n        id: 0,\n        codigo: \"\",\n        descripcion: \"\",\n        marca: \"\",\n        precio: \"\",\n        stock: 0,\n        peso: 1,\n      },\n\n      submitted: false,\n    };\n  }\n\n  componentDidMount() {\n    const id = parseInt(this.props.match.params.id, 10);\n    ProductosDataService.getAll()\n      .orderByChild(\"id\")\n      .equalTo(id)\n      .once(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let key = Object.keys(items.val());\n    let data = items.val();\n    const currentProduct = data[key];\n    currentProduct.key = key[0];\n    this.setState({ currentProduct });\n  }\n\n  onChangeCodigo(e) {\n    this.setState({\n      currentProduct: {\n        ...this.state.currentProduct,\n        codigo: e.target.value,\n      },\n    });\n  }\n\n  onChangeDescripcion(e) {\n    this.setState({\n      currentProduct: {\n        ...this.state.currentProduct,\n        descripcion: e.target.value,\n      },\n    });\n  }\n\n  onChangeMarca(e) {\n    this.setState({\n      currentProduct: {\n        ...this.state.currentProduct,\n        marca: e.target.value,\n      },\n    });\n  }\n\n  onChangePrecio(e) {\n    this.setState({\n      currentProduct: {\n        ...this.state.currentProduct,\n        precio: e.target.value,\n      },\n    });\n  }\n\n  onChangeStock(e) {\n    this.setState({\n      currentProduct: {\n        ...this.state.currentProduct,\n        stock: e.target.value,\n      },\n    });\n  }\n\n  onChangeValues(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      currentProduct: {\n        ...this.state.currentProduct,\n        [name]: value,\n      },\n    });\n  }\n\n  updateProduct() {\n    const data = {\n      id: this.state.currentProduct.id,\n      codigo: this.state.currentProduct.codigo,\n      descripcion: this.state.currentProduct.descripcion,\n      stock: parseInt(this.state.currentProduct.stock, 10),\n      marca: this.state.currentProduct.marca,\n      precio: this.state.currentProduct.precio,\n      peso: this.state.currentProduct.peso,\n    };\n\n    ProductosDataService.update(this.state.currentProduct.key, data)\n      .then(() => {\n        this.setState({\n          submitted: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Producto editado correctamente!</h4>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/list-products\"\n              role=\"button\"\n            >\n              Listado\n            </a>\n          </div>\n        ) : (\n          <div className=\"form-container\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Editar producto\n            </Typography>\n            <div className=\"login-container\">\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"codigo\"\n                    label=\"Código\"\n                    value={this.state.currentProduct.codigo}\n                    name=\"codigo\"\n                    onChange={this.onChangeCodigo}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"descripcion\"\n                    label=\"Descripción\"\n                    value={this.state.currentProduct.descripcion}\n                    name=\"descripcion\"\n                    onChange={this.onChangeDescripcion}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputLabel>Marca</InputLabel>\n                  <Select\n                    onChange={this.onChangeMarca}\n                    value={this.state.currentProduct.marca}\n                    className=\"select__form\"\n                    fullWidth\n                  >\n                    {marcas.map((marca) => (\n                      <MenuItem key={marca} value={marca}>\n                        {marca}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"peso\"\n                    label=\"Peso\"\n                    value={this.state.currentProduct.peso}\n                    name=\"peso\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"precio\"\n                    label=\"Precio\"\n                    value={this.state.currentProduct.precio}\n                    name=\"precio\"\n                    onChange={this.onChangePrecio}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"stock\"\n                    label=\"Stock\"\n                    value={this.state.currentProduct.stock}\n                    name=\"stock\"\n                    onChange={this.onChangeStock}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"button__save\"\n                onClick={this.updateProduct}\n              >\n                Aceptar\n              </Button>\n            </div>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProductosDataService from \"../../../services/productos.service\";\nimport marcas from \"../../../utils/default\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  Container,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputAdornment,\n} from \"@material-ui/core\";\n\nexport default class EditProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePorcentaje = this.onChangePorcentaje.bind(this);\n    this.onChangeMarca = this.onChangeMarca.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.updateProduct = this.updateProduct.bind(this);\n    \n    this.state = {\n      products: [],\n      submitted: false,\n      porcentaje: 0,\n      marca: '',\n    };\n  }\n\n  componentDidMount() {\n    ProductosDataService.getAll()\n      .orderByChild(\"id\")\n      .once(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    const products = [];\n    items.forEach((item) => {\n      let key = item.key;\n      let data = item.val();\n      products.push({\n        key,\n        id: data.id,\n        codigo: data.codigo,\n        descripcion: data.descripcion,\n        marca: data.marca,\n        stock: data.stock,\n        precio: data.precio,\n      });\n    });\n\n    this.setState({ products });\n  }\n\n  onChangePorcentaje(e) {\n    this.setState({\n      porcentaje: e.target.value\n    });\n  }\n\n  onChangeMarca(e) {\n    this.setState({\n        marca: e.target.value,\n    });\n  }\n\n  updateProduct() {\n    const { products, porcentaje, marca } = this.state\n\n    const promises = [];\n    const prodFilter = products.filter(prod => prod.marca === marca);\n    prodFilter.forEach(product => {\n      let data = {\n        key: product.key,\n        precio:  parseInt(product.precio, 10) + (porcentaje * parseInt(product.precio, 10)) / 100\n      }\n      promises.push(data)\n    })\n    if (porcentaje > 0) {\n      promises.forEach(promise => {\n        const data = { precio: promise.precio }\n        ProductosDataService.update(promise.key, data)\n        .then(() => {\n          this.setState({\n            submitted: true,\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Precios editados correctamente!</h4>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/list-products\"\n              role=\"button\"\n            >\n              Listado\n            </a>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/change-price\"\n              role=\"button\"\n            >\n              Editar nuevamente\n            </a>\n          </div>\n        ) : (\n          <div className=\"form-container\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Editar precio\n            </Typography>\n            <div className=\"login-container\">\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"porcentaje\"\n                    label=\"Porcentaje\"\n                    value={this.state.porcentaje}\n                    name=\"porcentaje\"\n                    onChange={this.onChangePorcentaje}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          %\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputLabel>Marca</InputLabel>\n                  <Select\n                    onChange={this.onChangeMarca}\n                    value={this.state.marca}\n                    className=\"select__form\"\n                    fullWidth\n                  >\n                    {marcas.map((marca) => (\n                      <MenuItem key={marca} value={marca}>\n                        {marca}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n              </Grid>\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"button__save\"\n                onClick={this.updateProduct}\n                disabled={this.state.porcentaje <= 0}\n              >\n                Aceptar\n              </Button>\n            </div>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/pedidos\");\n\nclass PedidosDataService {\n  getAll() {\n    return db;\n  }\n\n  create(pedidos) {\n    return db.push(pedidos);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new PedidosDataService();\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { List, Toast, Modal } from \"antd-mobile\";\nimport {\n  TextField,\n  InputAdornment,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableContainer,\n  TableCell,\n  Paper,\n  TableHead,\n  TableRow,\n  IconButton,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport Datetime from \"react-datetime\";\nimport ProductosDataService from \"../../../services/productos.service\";\nimport PedidosDataService from \"../../../services/pedidos.service\";\nimport ClientesDataService from \"../../../services/clients.service\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst alert = Modal.alert;\nconst Item = List.Item;\nconst Brief = Item.Brief;\nconst currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n\nexport default class Pedido extends Component {\n  constructor(props) {\n    super(props);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.setActive = this.setActive.bind(this);\n    this.onChangeCantidad = this.onChangeCantidad.bind(this);\n    this.onChangePeso = this.onChangePeso.bind(this);\n    this.onChangeDto = this.onChangeDto.bind(this);\n    this.onChangeIva = this.onChangeIva.bind(this);\n    this.addPedido = this.addPedido.bind(this);\n    this.setInitialProduct = this.setInitialProduct.bind(this);\n    this.getLastId = this.getLastId.bind(this);\n    this.createPedido = this.createPedido.bind(this);\n    this.getClient = this.getClient.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.setOpen = this.setOpen.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    \n    this.state = {\n      products: [],\n      currentProduct: null,\n      lastId: 0,\n      peso: \"1\",\n      cantidad: \"\",\n      descuento: \"\",\n      indexActive: -1,\n      pedido: {\n        id: 0,\n        idCliente: 0,\n        clienteName: \"\",\n        clienteDomicilio: \"\",\n        productos: [],\n        fecha: moment(new Date().getTime()).format(\"DD-MM-YYYY hh:mm\"),\n        total: 0,\n        status: \"Creado\",\n        fechaEntrega: moment(new Date().getTime()).add(1, 'days').format(\"DD-MM-YYYY\"),\n        user: currentUser.userName\n      },\n      searchTitle: \"\",\n      productoFilter: [],\n      iva: false,\n      medioIva: false,\n      submitted: false,\n      keyClient: '',\n      open: false,\n      editProd: false,\n      indexProdOpen: -1,\n    };\n  }\n\n  componentDidMount() {\n    const id = parseInt(this.props.match.params.id, 10);\n    PedidosDataService.getAll()\n      .orderByChild(\"id\")\n      .limitToLast(1)\n      .once(\"child_added\", this.getLastId);\n    ProductosDataService.getAll()\n      .orderByChild(\"id\")\n      .once(\"value\", this.onDataChange);\n    ClientesDataService.getAll()\n      .orderByChild(\"id\")\n      .equalTo(id)\n      .once(\"child_added\", this.getClient);\n  }\n\n  componentWillUnmount() {\n    ProductosDataService.getAll().off(\"value\", this.onDataChange);\n    PedidosDataService.getAll().off(\"child_added\", this.getLastId);\n    ClientesDataService.getAll().off(\"child_added\", this.getClient);\n  }\n\n  onDataChange(items) {\n    const products = [];\n    items.forEach((item) => {\n      let data = item.val();\n      products.push({\n        id: data.id,\n        codigo: data.codigo,\n        descripcion: data.descripcion,\n        marca: data.marca,\n        stock: data.stock,\n        precio: data.precio,\n        peso: data.peso,\n      });\n    });\n    this.setState({ products });\n  }\n\n  getLastId(items) {\n    this.setState({ lastId: items.val().id || 0 });\n    this.setInitialProduct();\n  }\n\n  setInitialProduct() {\n    const lastId = this.state.lastId;\n    const idCliente = parseInt(this.props.match.params.id, 10);\n    this.setState({\n      pedido: {\n        id: lastId + 1,\n        idCliente,\n        clienteName: \"\",\n        clienteDomicilio: \"\",\n        status: \"Creado\",\n        productos: [],\n        fecha: moment(new Date().getTime()).format(\"DD-MM-YYYY hh:mm\"),\n        total: 0,\n        fechaEntrega: moment(new Date().getTime()).add(1, 'days').format(\"DD-MM-YYYY\"),\n        user: currentUser.userName,\n      },\n    });\n  }\n\n  getClient(item) {\n    this.setState({\n      pedido: {\n        ...this.state.pedido,\n        clienteName: item.val().razon_social || \"\",\n        clienteDomicilio: item.val().domicilio || \"\",\n      },\n      keyClient: item.key,\n    });\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle,\n    });\n  }\n\n  searchTitle(e) {\n    const { products } = this.state;\n    clearTimeout(this.timer);\n    const value = e.target.value;\n    this.timer = setTimeout(() => {\n      if (value) {\n        const filter = products.filter(\n          (prod) =>\n            prod.descripcion.toLowerCase().match(value.toLowerCase()) ||\n            prod.codigo.toLowerCase().match(value.toLowerCase())\n        );\n        this.setState({ productoFilter: filter, searchTitle: value });\n      } else {\n        this.setState({ searchTitle: \"\" });\n      }\n    }, 500);\n  }\n\n  setActive(peso, index) {\n    this.setState({ indexActive: index, peso });\n  }\n\n  onChangeCantidad(e) {\n    this.setState({ cantidad: e.target.value });\n  }\n\n  onChangeDto(e) {\n    this.setState({ descuento: e.target.value });\n  }\n\n  onChangePeso(e) {\n    this.setState({ peso: e.target.value });\n  }\n\n  onChangeIva(e) {\n    const valor = e.target.value;\n    this.setState({ [valor]: !this.state[valor] });\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format(\"DD-MM-YYYY\");\n    this.setState({\n      pedido: {\n        ...this.state.pedido,\n        fechaEntrega: dateFormat,\n      },\n    });\n  }\n\n  addPedido(subtotal, idProducto) {\n    const { products, cantidad, peso, descuento, iva, medioIva } = this.state;\n    const produc = products.filter((prod) => prod.id === idProducto);\n    let isIva = \"No\";\n    if (iva) {\n      isIva = \"iva\";\n    }\n    if (medioIva) {\n      isIva = \"medioIva\";\n    }\n    const prodPedido = {\n      codigo: produc[0].codigo,\n      descripcion: produc[0].descripcion,\n      marca: produc[0].marca,\n      precio: produc[0].precio,\n      peso,\n      cantidad,\n      descuento,\n      iva: isIva,\n      subtotal,\n    };\n    this.state.pedido.productos.push(prodPedido);\n    const total = this.state.pedido.total + subtotal;\n\n    this.setState({\n      pedido: {\n        ...this.state.pedido,\n        total,\n      },\n      cantidad: \"\",\n      descuento: \"\",\n      // peso: \"\",\n      indexActive: -1,\n      iva: false,\n      medioIva: false,\n    });\n    Toast.success(\"Cargado correctamente!!\", 1);\n  }\n\n  createPedido(condPago) {\n    let data = {\n      id: this.state.pedido.id,\n      idCliente: this.state.pedido.idCliente,\n      clienteName: this.state.pedido.clienteName,\n      clienteDomicilio: this.state.pedido.clienteDomicilio,\n      productos: this.state.pedido.productos,\n      fecha: this.state.pedido.fecha,\n      status: this.state.pedido.status,\n      fechaEntrega: this.state.pedido.fechaEntrega,\n      user: currentUser.userName,\n      condPago,\n      total: this.state.pedido.total,\n    };\n    const estado = { estado: \"visitado\" }\n    ClientesDataService.update(this.state.keyClient, estado)\n    .then(() => {})\n    .catch((e) => {\n      Toast.fail(\"Ocurrió un error !!!\", 2);\n    });\n    PedidosDataService.create(data)\n      .then(() => {\n        Toast.loading(\"Loading...\", 1, () => {\n          this.setState({\n            submitted: true,\n          });\n        });\n      })\n      .catch((e) => {\n        Toast.fail(\"Ocurrió un error !!!\", 2);\n      });\n  }\n\n  setOpen() {\n    this.setState({ open: !this.state.open });\n  }\n\n\n  deleteProduct(codigo) {\n    const { pedido } = this.state;\n    var index = pedido.productos.findIndex((prd) => prd.codigo === codigo);\n    pedido.productos.splice(index, 1);\n    let newTotal = 0;\n    pedido.productos.forEach((prd) => {\n      newTotal += prd.subtotal;\n    });\n    this.setState({\n      pedido: {\n        ...this.state.pedido,\n        total: newTotal,\n      },\n    });\n  }\n\n  render() {\n    const {\n      submitted,\n      products,\n      searchTitle,\n      indexActive,\n      descuento,\n      cantidad,\n      productoFilter,\n      iva,\n      medioIva,\n      peso,\n      pedido,\n      open,\n      editProd,\n      indexProdOpen,\n    } = this.state;\n    const displayTable = searchTitle !== \"\" ? productoFilter : products;\n    let subtotalDto = 0.0;\n    const valorIva = iva ? 0.21 : 0.105;\n    return (\n      <div className=\"list row\">\n        {submitted ? (\n          <div>\n            <h4>Pedido creado correctamente!</h4>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/new-visit\"\n              role=\"button\"\n            >\n              Nuevo Pedido\n            </a>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/list-pedidos\"\n              role=\"button\"\n            >\n              Listado\n            </a>\n          </div>\n        ) : (\n          <div className=\"col-md-6\">\n            <div className=\"col-md-8\">\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Buscar\"\n                  onChange={this.searchTitle}\n                />\n                <div className=\"input-group-append\">\n                  <button\n                    className=\"btn btn-outline-secondary search-button\"\n                    type=\"button\"\n                    onClick={this.searchTitle}\n                  >\n                    <SearchIcon color=\"action\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n            <h4>Pedido - {pedido.clienteName}</h4>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"fecha\">Fecha de entrega de pedido</label>\n              <Datetime\n                className=\"post-input  post-input__event\"\n                dateFormat=\"DD-MM-YYYY\"\n                timeFormat={false}\n                name=\"eventDate\"\n                utc\n                closeOnSelect\n                value={pedido.fechaEntrega}\n                onChange={this.onChangeDate}\n              />\n            </div>\n\n            <Link\n              component=\"button\"\n              variant=\"body2\"\n              className=\"open-products\"\n              onClick={this.setOpen}\n            >\n              Mostrar productos del pedido\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </Link>\n            {open && (\n              <TableContainer\n                className=\"table-products__container\"\n                component={Paper}\n              >\n                <Table size=\"small\" aria-label=\"a dense table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell></TableCell>\n                      <TableCell>Código</TableCell>\n                      <TableCell>Precio</TableCell>\n                      <TableCell>Peso</TableCell>\n                      <TableCell>Cant.</TableCell>\n                      <TableCell>Descripción</TableCell>\n                      <TableCell>Marca</TableCell>\n                      <TableCell>Descuento</TableCell>\n                      <TableCell>IVA</TableCell>\n                      <TableCell align=\"right\">Subtotal</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {pedido.productos && pedido.productos.map((row, index) => (\n                      <TableRow key={row.codigo}>\n                        <TableCell>\n                          <IconButton\n                            color=\"secondary\"\n                            aria-label=\"eliminar\"\n                            component=\"span\"\n                            size=\"small\"\n                            onClick={() =>\n                              alert(\"Eliminar\", \"Eliminar producto?\", [\n                                { text: \"Cancelar\" },\n                                {\n                                  text: \"Ok\",\n                                  onPress: () => this.deleteProduct(row.codigo),\n                                },\n                              ])\n                            }\n                          >\n                            <HighlightOffIcon />\n                          </IconButton>\n                          {/* <IconButton\n                            className=\"action__link\"\n                            size=\"small\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.handleOpenModal(index);\n                            }}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                          <Dialog\n                            open={editProd && indexProdOpen === index}\n                            aria-labelledby=\"form-dialog-title\"\n                          >\n                            <DialogTitle\n                              id=\"form-dialog-title\"\n                              onClose={this.handleClose}\n                            >\n                              Editar producto\n                            </DialogTitle>\n                            <DialogContent>\n                              <TextField\n                                className=\"prod-input\"\n                                autoFocus\n                                fullWidth\n                                margin=\"dense\"\n                                name=\"peso\"\n                                label=\"Peso\"\n                                value={producto.peso}\n                                onChange={this.onChangeValueProduct}\n                              />\n                              <TextField\n                                className=\"prod-input\"\n                                fullWidth\n                                margin=\"dense\"\n                                name=\"cantidad\"\n                                label=\"Cant.\"\n                                value={producto.cantidad}\n                                onChange={this.onChangeValueProduct}\n                              />\n                              <TextField\n                                className=\"prod-input\"\n                                // margin=\"dense\"\n                                fullWidth\n                                name=\"descuento\"\n                                label=\"Desc.\"\n                                value={producto.descuento}\n                                onChange={this.onChangeValueProduct}\n                              /> */}\n                              {/* <div>\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      color=\"default\"\n                                      checked={iva}\n                                      onChange={this.onChangeIvaProd}\n                                      value=\"iva\"\n                                    />\n                                  }\n                                  label=\"IVA\"\n                                />\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      color=\"default\"\n                                      checked={medioIva}\n                                      onChange={this.onChangeIvaProd}\n                                      value=\"medioIva\"\n                                    />\n                                  }\n                                  label=\"1/2 IVA\"\n                                />\n                              </div>\n                            </DialogContent>\n                            <DialogActions>\n                              <Button\n                                color=\"primary\"\n                                onClick={this.handleClose}\n                              >\n                                Cancelar\n                              </Button>\n                              <Button\n                                color=\"primary\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.editProduct(row);\n                                }}\n                              >\n                                Aceptar\n                              </Button>\n                            </DialogActions>\n                          </Dialog> */}\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {row.codigo}\n                        </TableCell>\n                        <TableCell>${row.precio}</TableCell>\n                        <TableCell>{row.peso}</TableCell>\n                        <TableCell>{row.cantidad}</TableCell>\n                        <TableCell>{row.descripcion}</TableCell>\n                        <TableCell>{row.marca}</TableCell>\n                        <TableCell>{row.descuento}</TableCell>\n                        <TableCell>{row.iva}</TableCell>\n                        <TableCell align=\"right\">\n                          ${row.subtotal.toFixed(2)}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            )}\n\n            <div className=\"table-container pedido\">\n              {products &&\n                displayTable.map((producto, index) => {\n                  const isActive = indexActive === index;\n                  if (isActive) {\n                    const subtotal = producto.precio * peso * cantidad;\n                    subtotalDto =\n                      subtotal -\n                      (subtotal * descuento) / 100 +\n                      (iva || medioIva ? subtotal * valorIva : 0);\n                  }\n                  return (\n                    <List className=\"my-list\" key={index}>\n                      <Item\n                        multipleLine\n                        onClick={(e) => {\n                          e.preventDefault();\n                          if (!isActive) {\n                            this.setActive(producto.peso, index);\n                          }\n                        }}\n                        wrap\n                      >\n                        <div className=\"prod__description-container\">\n                          <span className=\"prod__description\">\n                            {producto.descripcion}{\" \"}\n                          </span>\n                          <Brief>{producto.marca}</Brief>\n                          <span className=\"prod__codigo-text\">\n                            #{producto.codigo}\n                          </span>\n                          <span className=\"am-list-extra precio\">\n                            ${producto.precio}\n                          </span>\n                          <span className=\"prod__stock-text\">\n                            S: {producto.stock}\n                          </span>\n                          {isActive && (\n                            <div>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    color=\"default\"\n                                    checked={iva}\n                                    onChange={this.onChangeIva}\n                                    value=\"iva\"\n                                  />\n                                }\n                                label=\"IVA\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    color=\"default\"\n                                    checked={medioIva}\n                                    onChange={this.onChangeIva}\n                                    value=\"medioIva\"\n                                  />\n                                }\n                                label=\"1/2 IVA\"\n                              />\n                              <TextField\n                                id=\"standard-read-only-input\"\n                                className=\"prod__subtotal\"\n                                label=\"Subtotal\"\n                                value={subtotalDto.toFixed(2)}\n                                InputProps={{\n                                  readOnly: true,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      $\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n                            </div>\n                          )}\n                        </div>\n                        {isActive && (\n                          <div className=\"prod__codigo-container\">\n                            <TextField\n                              id=\"standard-start-adornment\"\n                              type=\"number\"\n                              onChange={this.onChangePeso}\n                              value={isActive ? peso : \"\"}\n                              InputProps={{\n                                endAdornment: (\n                                  <InputAdornment position=\"end\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                            />\n                            <TextField\n                              id=\"standard-basic\"\n                              label=\"Cantidad\"\n                              type=\"number\"\n                              value={isActive ? cantidad : \"\"}\n                              onChange={this.onChangeCantidad}\n                            />\n                            <TextField\n                              id=\"standard-basic\"\n                              label=\"Dto\"\n                              type=\"number\"\n                              className=\"input-dto\"\n                              value={isActive ? descuento : \"\"}\n                              onChange={this.onChangeDto}\n                              InputProps={{\n                                endAdornment: (\n                                  <InputAdornment position=\"end\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            />\n                          </div>\n                        )}\n                        <div className=\"prod__button-container\">\n                          <Button\n                            className=\"prod__button-add\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.addPedido(subtotalDto, producto.id);\n                            }}\n                            disabled={\n                              !isActive || cantidad === \"\" || peso === \"\"\n                            }\n                          >\n                            Agregar\n                          </Button>\n                        </div>\n                      </Item>\n                    </List>\n                  );\n                })}\n            </div>\n            <div role=\"region\" className=\"total-banner\">\n              <p className=\"total__text\">\n                Total: $ {pedido.total.toFixed(2)}\n              </p>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"total__button\"\n                // onClick={this.createPedido}\n                onClick={() =>\n                  alert(\n                    \"Tipo cobro\",\n                    <div></div>,\n                    [\n                      {\n                        text: \"Contado\",\n                        onPress: () =>\n                          this.createPedido('contado'),\n                      },\n                      {\n                        text: \"Contado 7 dias\",\n                        onPress: () =>\n                          this.createPedido('a 7 dias'),\n                      },\n                      {\n                        text: \"Contado 14 dias\",\n                        onPress: () =>\n                          this.createPedido('a 14 dias'),\n                      },\n                      {\n                        text: \"Contado 21 dias\",\n                        onPress: () =>\n                          this.createPedido('a 21 dias'),\n                      },\n                      {\n                        text: \"Cancelar\",\n                      },\n                    ]\n                  )\n                }\n                disabled={pedido.total === 0}\n              >\n                Finalizar pedido\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport { Toast, Modal } from \"antd-mobile\";\nimport {\n  Button,\n  Tooltip,\n  IconButton,\n  Checkbox,\n  Paper,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { esES } from \"@material-ui/core/locale\";\nimport { green, purple } from \"@material-ui/core/colors\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport DoneOutlineRoundedIcon from \"@material-ui/icons/DoneOutlineRounded\";\nimport PedidoService from \"../../services/pedidos.service\";\nconst alert = Modal.alert;\n\nfunction createData(codigo, peso, cantidad, descripcion, marca, subtotal) {\n  return { codigo, peso, cantidad, descripcion, marca, subtotal };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"codigo\", numeric: false, disablePadding: true, label: \"Código\" },\n  { id: \"peso\", numeric: false, disablePadding: true, label: \"Peso\" },\n  { id: \"cantidad\", numeric: false, disablePadding: false, label: \"Cantidad\" },\n  {\n    id: \"descripcion\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Descripción\",\n  },\n  { id: \"marca\", numeric: false, disablePadding: false, label: \"Marca\" },\n  { id: \"subtotal\", numeric: true, disablePadding: false, label: \"Subtotal\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n    pedido,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n            disabled={pedido.status === \"Confirmado\"}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(\n  (theme) => ({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.type === \"light\"\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: \"1 1 100%\",\n    },\n    button: {\n      color: \"#fff\",\n      backgroundColor: \"#388e3c\",\n      \"&:hover\": {\n        backgroundColor: \"#008000\",\n      },\n    },\n  }),\n  esES\n);\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, onChangeClick, updatePedido, pedido } = props;\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} seleccionado\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Detalle de pedido\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <IconButton\n          aria-label=\"delete\"\n          onClick={onChangeClick}\n          disabled={pedido.status === \"Confirmado\"}\n        >\n          <DeleteIcon />\n        </IconButton>\n      ) : (\n        <Button\n          variant=\"contained\"\n          // color=\"primary\"\n          // size=\"small\"\n          disabled={pedido.status === \"Confirmado\"}\n          onClick={() =>\n            alert(\n              \"Asentar visita\",\n              <div>Registrar pedido</div>,\n              [\n                {\n                  text: \"Pagado / Entregado\",\n                  onPress: () =>\n                    updatePedido(\"Pagado / Entregado\"),\n                },\n                {\n                  text: \"Cta Corriente / Entregado\",\n                  onPress: () =>\n                    updatePedido(\"Cta Corriente / Entregado\"),\n                },\n                {\n                  text: \"Rechazado\",\n                  onPress: () =>\n                    updatePedido(\"Rechazado\"),\n                },\n                {\n                  text: \"Cancelar\",\n                },\n              ]\n            )\n          }\n          className={classes.button}\n          endIcon={<DoneOutlineRoundedIcon />}\n        >\n          Confirmar\n        </Button>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(\n  (theme) => ({\n    root: {\n      width: \"100%\",\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: 1,\n      margin: -1,\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      top: 20,\n      width: 1,\n    },\n  }),\n  esES\n);\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [products, setProducts] = React.useState(props.productos);\n  const [pedido, setPedido] = React.useState(props.pedido);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.productos.length);\n\n  const rows = [];\n  products.forEach((prd) =>\n    rows.push(\n      createData(\n        prd.codigo,\n        prd.peso,\n        prd.cantidad,\n        prd.descripcion,\n        prd.marca,\n        prd.subtotal\n      )\n    )\n  );\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.codigo);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    let newSelected = [];\n    const selectedIndex = selected.indexOf(name);\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const deleteProduct = () => {\n    selected.forEach((cod) => {\n      var index = products.findIndex((prd) => prd.codigo === cod);\n      products.splice(index, 1);\n    });\n\n    setProducts(products);\n    setSelected([]);\n  };\n\n  const updatePedido = (status) => {\n    let newTotal = 0;\n    let statusPrd = status;\n    products.forEach((prd) => {\n      newTotal += prd.subtotal;\n    });\n    const data = {\n      id: pedido.id,\n      clienteName: pedido.clienteName,\n      idCliente: pedido.idCliente,\n      fecha: pedido.fecha,\n      status: statusPrd,\n      productos: products,\n      fechaConfirm: moment(new Date().getTime()).format(\"DD-MM-YYYY hh:mm\"),\n      total: newTotal,\n    };\n\n    PedidoService.update(pedido.key, data)\n      .then(() => {\n        Toast.success(\"Actualizado correctamente!!\", 1, () => {\n          window.location.reload(false);\n        });\n      })\n      .catch((e) => {\n        Toast.fail(\"Ocurrió un error !!!\", 1);\n      });\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          onChangeClick={deleteProduct}\n          numSelected={selected.length}\n          updatePedido={updatePedido}\n          pedido={pedido}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              pedido={pedido}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.codigo);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.codigo)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.codigo}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                          disabled={pedido.status === \"Confirmado\"}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.codigo}\n                      </TableCell>\n                      <TableCell>{row.peso}</TableCell>\n                      <TableCell>{row.cantidad}</TableCell>\n                      <TableCell>{row.descripcion}</TableCell>\n                      <TableCell>{row.marca}</TableCell>\n                      <TableCell align=\"right\">\n                        ${row.subtotal.toFixed(2)}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {/* <TablePagination\n          rowsPerPageOptions={[1, 2, 3, 4, 5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        /> */}\n      </Paper>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Datetime from \"react-datetime\";\nimport { Toast, Modal } from \"antd-mobile\";\nimport {\n  Box,\n  Collapse,\n  Table,\n  TableBody,\n  TableContainer,\n  TableCell,\n  IconButton,\n  Button,\n  Paper,\n  TableHead,\n  TableRow,\n  Tooltip,\n  FormControlLabel,\n  Switch,\n  Dialog,\n  DialogActions,\n  DialogContent,\n} from \"@material-ui/core\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport moment from \"moment\";\nimport ListCheckbox from \"../../../components/ListCheckbox\";\nimport PrintOutlinedIcon from \"@material-ui/icons/PrintOutlined\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport PedidosDataService from \"../../../services/pedidos.service\";\nimport ClientsDataService from \"../../../services/clients.service\";\nconst queryString = require(\"query-string\");\n\nconst alert = Modal.alert;\n\nexport default class PedidoList extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.filterPedidos = this.filterPedidos.bind(this);\n    this.setOpen = this.setOpen.bind(this);\n    this.expandAll = this.expandAll.bind(this);\n    this.deletePedido = this.deletePedido.bind(this);\n    this.changeEntrega = this.changeEntrega.bind(this);\n    this.getClients = this.getClients.bind(this);\n    this.getClientsByDay = this.getClientsByDay.bind(this);\n    this.getQuantity = this.getQuantity.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      pedidos: [],\n      date:\n        queryString.parse(this.props.location.search).date ||\n        moment(new Date().getTime()).format(\"DD-MM-YYYY\"),\n      pedidoFilter: [],\n      open: false,\n      indexOpen: 0,\n      expandAll: false,\n      entregaPedido:\n        queryString.parse(this.props.location.search).entrega || false,\n      clients: [],\n      cantVisitas: 0,\n      quantityProd: {},\n      openModal: false,\n      prodDesc: [],\n    };\n  }\n\n  componentDidMount() {\n    const today = moment(new Date().getTime()).get(\"day\");\n    const dateFormat = moment(new Date().getTime()).format(\"DD-MM-YYYY\");\n    if (!this.props.location.search) {\n      window.location.href = `/list-pedidos?date=${dateFormat}`;\n      this.getClients(today);\n    } else {\n      const params = queryString.parse(this.props.location.search);\n      const day = moment(params.date, \"DD-MM-AAAA\").get(\"day\");\n      this.getClients(day);\n    }\n\n    PedidosDataService.getAll()\n      .orderByChild(\"id\")\n      .on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    PedidosDataService.getAll().off(\"value\", this.onDataChange);\n    ClientsDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let pedidos = [];\n    items.forEach((item) => {\n      let data = item.val();\n      let key = item.key;\n      pedidos.push({\n        key,\n        id: data.id,\n        fecha: data.fecha,\n        fechaEntrega: data.fechaEntrega,\n        idCliente: data.idCliente,\n        clienteName: data.clienteName,\n        clienteDomicilio: data.clienteDomicilio,\n        productos: data.productos,\n        status: data.status,\n        condPago: data.condPago || \"\",\n        total: data.total,\n      });\n    });\n\n    this.setState({ pedidos });\n    this.filterPedidos();\n  }\n\n  filterPedidos(fecha, entrega) {\n    const { pedidos, date, entregaPedido } = this.state;\n    let pedido = [];\n    const fechaComp = fecha || date;\n    pedidos.forEach((item) => {\n      const fechaFormat = entregaPedido\n        ? item.fechaEntrega\n        : item.fecha.slice(0, 10);\n      if (fechaFormat === fechaComp) {\n        pedido.push(item);\n      }\n    });\n    this.setState({ pedidoFilter: pedido });\n  }\n\n  getClients(dia) {\n    ClientsDataService.getAll()\n      .orderByChild(\"dia\")\n      .equalTo(dia)\n      .on(\"value\", this.getClientsByDay);\n  }\n\n  getClientsByDay(items) {\n    let clients = [];\n    let cantVisitas = 0;\n    if (items) {\n      items.forEach((item) => {\n        let data = item.val();\n        clients.push(data);\n      });\n      clients.forEach((cli) => {\n        if (cli.estado === \"visitado\") {\n          cantVisitas += 1;\n        }\n      });\n    }\n    this.setState({ clients, cantVisitas });\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format(\"DD-MM-YYYY\");\n    window.location.href = this.state.entregaPedido\n      ? `/list-pedidos?date=${dateFormat}&entrega=true`\n      : `/list-pedidos?date=${dateFormat}`;\n  }\n\n  setOpen(index) {\n    this.setState({ open: !this.state.open, indexOpen: index });\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  deletePedido(key) {\n    PedidosDataService.delete(key)\n      .then(() => {\n        Toast.success(\"Eliminado correctamente!!\", 1, () => {\n          window.location.reload(false);\n        });\n      })\n      .catch((e) => {\n        Toast.fail(\"Ocurrió un error !!!\", 2);\n      });\n  }\n\n  expandAll() {\n    this.setState({\n      expandAll: !this.state.expandAll,\n      open: true,\n      indexOpen: -1,\n    });\n  }\n\n  changeEntrega() {\n    if (this.state.entregaPedido) {\n      window.location.href = `/list-pedidos?date=${this.state.date}`;\n    } else {\n      window.location.href = `/list-pedidos?date=${this.state.date}&entrega=true`;\n    }\n  }\n\n  getQuantity() {\n    const { pedidoFilter } = this.state;\n    let cantByProd = {};\n    const arrayProd = [];\n    pedidoFilter.forEach((pedido) => {\n      if (pedido.productos) {\n        pedido.productos.forEach((prod) => {\n          const quantity = parseInt(prod.cantidad, 10);\n          const prodDesc = {\n            codigo: prod.codigo,\n            desc: prod.descripcion,\n          };\n          if (cantByProd[prod.codigo] === undefined) {\n            cantByProd[prod.codigo] = quantity;\n          } else {\n            cantByProd[prod.codigo] += quantity;\n          }\n          if (arrayProd.filter((pr) => pr.codigo === prod.codigo).length < 1) {\n            arrayProd.push(prodDesc);\n          }\n        });\n      }\n    });\n    this.setState({\n      openModal: true,\n      quantityProd: cantByProd,\n      prodDesc: arrayProd,\n    });\n  }\n\n  handleClose() {\n    this.setState({ openModal: false });\n  }\n\n  render() {\n    const {\n      pedidoFilter,\n      open,\n      indexOpen,\n      expandAll,\n      entregaPedido,\n      clients,\n      cantVisitas,\n      openModal,\n      quantityProd,\n      prodDesc,\n    } = this.state;\n    let totalPorDia = 0;\n\n    pedidoFilter.forEach((prd) => (totalPorDia += prd.total));\n    const keyCodigos = Object.keys(quantityProd);\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <div className=\"new-reservation\">\n            <a className=\"btn btn-primary\" href=\"/new-visit\" role=\"button\">\n              Nuevo pedido\n            </a>\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              className=\"inform-button\"\n              endIcon={<ReceiptIcon />}\n              onClick={this.getQuantity}\n            >\n              Cant. x prod.\n            </Button>\n          </div>\n          <Dialog\n            onClose={this.handleClose}\n            aria-labelledby=\"customized-dialog-title\"\n            open={openModal}\n          >\n            <DialogContent dividers>\n              <TableContainer component={Paper}>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Código</TableCell>\n                      <TableCell>Descripción</TableCell>\n                      <TableCell>Cantidad</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {keyCodigos.map((row) => {\n                      return (\n                        <TableRow key={row}>\n                          <TableCell>{row}</TableCell>\n                          <TableCell>\n                            {prodDesc.filter((pr) => pr.codigo === row)[0].desc}\n                          </TableCell>\n                          <TableCell>{quantityProd[row]}</TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cerrar\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <h4>Listado de pedidos</h4>\n          <Paper className=\"info__pedidos\">\n            <div className=\"container__info\">\n              <span className=\"text__info\">\n                Cant. pedidos:{\" \"}\n                <p className=\"text__dato\">{pedidoFilter.length}</p>\n              </span>\n              <span className=\"text__info-right\">\n                Cant. no venta:{\" \"}\n                <p className=\"text__dato\">\n                  {cantVisitas - pedidoFilter.length}\n                </p>\n              </span>\n              <span className=\"text__info-right\">\n                Total del día: ${\" \"}\n                <p className=\"text__dato\">{totalPorDia.toFixed(2)}</p>\n              </span>\n            </div>\n            <div className=\"container__info\">\n              <span className=\"text__info\">\n                Visitas: <p className=\"text__dato\">{cantVisitas}</p>\n              </span>\n              <span className=\"text__info-right\">\n                Cant. clientes: <p className=\"text__dato\">{clients.length}</p>\n              </span>\n            </div>\n          </Paper>\n          <div className=\"form-group\">\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={entregaPedido}\n                  onChange={this.changeEntrega}\n                  size=\"small\"\n                  name=\"checkedB\"\n                  color=\"primary\"\n                />\n              }\n              labelPlacement=\"start\"\n              label={\n                entregaPedido\n                  ? \"Cambiar a fecha creación pedido\"\n                  : \"Cambiar a fecha entrega pedido\"\n              }\n            />\n            <label className=\"fecha-text\">\n              {entregaPedido ? \"Fecha entrega pedido\" : \"Fecha creación pedido\"}\n            </label>\n            <Datetime\n              className=\"post-input  post-input__event\"\n              dateFormat=\"DD-MM-YYYY\"\n              timeFormat={false}\n              name=\"eventDate\"\n              utc\n              closeOnSelect\n              value={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n          <div className=\"table-container\">\n            <TableContainer component={Paper}>\n              <Table aria-label=\"collapsible table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Tooltip title=\"Expandir todos\">\n                        <IconButton\n                          color=\"primary\"\n                          aria-label=\"expandir todos\"\n                          onClick={this.expandAll}\n                          size=\"small\"\n                        >\n                          {!expandAll ? (\n                            <ArrowDropDownIcon />\n                          ) : (\n                            <ArrowDropUpIcon />\n                          )}\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                    <TableCell>Cliente</TableCell>\n                    <TableCell>Domicilio</TableCell>\n                    <TableCell>Tipo pago</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Estado</TableCell>\n                    <TableCell>Acciones</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {pedidoFilter &&\n                    pedidoFilter.map((pedido, index) => (\n                      <React.Fragment key={index}>\n                        <TableRow>\n                          <TableCell\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.setOpen(index);\n                            }}\n                          >\n                            {pedido.productos && (\n                              <IconButton\n                                aria-label=\"expand row\"\n                                size=\"small\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setOpen(index);\n                                }}\n                              >\n                                {open && indexOpen === index ? (\n                                  <KeyboardArrowUpIcon />\n                                ) : (\n                                  <KeyboardArrowDownIcon />\n                                )}\n                              </IconButton>\n                            )}\n                          </TableCell>\n                          <TableCell\n                            component=\"th\"\n                            scope=\"row\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.setOpen(index);\n                            }}\n                          >\n                            {pedido.clienteName}\n                          </TableCell>\n                          <TableCell\n                            component=\"th\"\n                            scope=\"row\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.setOpen(index);\n                            }}\n                          >\n                            {pedido.clienteDomicilio}\n                          </TableCell>\n                          <TableCell\n                            component=\"th\"\n                            scope=\"row\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.setOpen(index);\n                            }}\n                          >\n                            {pedido.condPago}\n                          </TableCell>\n                          <TableCell\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.setOpen(index);\n                            }}\n                          >\n                            ${pedido.total.toFixed(2)}\n                          </TableCell>\n                          <TableCell\n                            className={`color__status ${pedido.status.toLowerCase().split(\" \")[0]}`}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.setOpen(index);\n                            }}\n                          >\n                            {pedido.status}\n                          </TableCell>\n                          <TableCell>\n                            <IconButton\n                              aria-label=\"delete\"\n                              className=\"action__link\"\n                              href={`/edit-pedido/${pedido.id}`}\n                              role=\"button\"\n                            >\n                              <EditIcon />\n                            </IconButton>\n                            <IconButton\n                              aria-label=\"delete\"\n                              type=\"button\"\n                              className=\"action__button\"\n                              onClick={() =>\n                                alert(\"Eliminar\", \"Estás seguro???\", [\n                                  { text: \"Cancelar\" },\n                                  {\n                                    text: \"Ok\",\n                                    onPress: () =>\n                                      this.deletePedido(pedido.key),\n                                  },\n                                ])\n                              }\n                            >\n                              <DeleteIcon color=\"secondary\" />\n                            </IconButton>\n                            <IconButton\n                              href={`/imprimir/${pedido.id}`}\n                              role=\"button\"\n                              aria-label=\"imprimir\"\n                              className=\"action__link\"\n                            >\n                              <PrintOutlinedIcon />\n                            </IconButton>\n                          </TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell\n                            style={{ paddingBottom: 0, paddingTop: 0 }}\n                            colSpan={6}\n                          >\n                            {open && indexOpen === index && pedido.productos && (\n                              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                                <Box margin={1}>\n                                  <ListCheckbox\n                                    productos={pedido.productos}\n                                    pedido={pedido}\n                                  />\n                                </Box>\n                              </Collapse>\n                            )}\n                            {expandAll && pedido.productos && (\n                              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                                <Box margin={1}>\n                                  <ListCheckbox\n                                    productos={pedido.productos}\n                                    pedido={pedido}\n                                  />\n                                </Box>\n                              </Collapse>\n                            )}\n                          </TableCell>\n                        </TableRow>\n                      </React.Fragment>\n                    ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            {pedidoFilter.length === 0 && (\n              <div className=\"empty__container\">\n                <span className=\"message-empty\">No hay pedidos aún</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { List, Toast } from \"antd-mobile\";\nimport {\n  TextField,\n  InputAdornment,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableContainer,\n  TableCell,\n  Paper,\n  TableHead,\n  TableRow,\n  IconButton,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { Modal } from \"antd-mobile\";\nimport Datetime from \"react-datetime\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport ProductosDataService from \"../../../services/productos.service\";\nimport PedidosDataService from \"../../../services/pedidos.service\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst alert = Modal.alert;\nconst prompt = Modal.prompt;\nconst currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\nexport default class EditPedido extends Component {\n  constructor(props) {\n    super(props);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.setActive = this.setActive.bind(this);\n    this.onChangeCantidad = this.onChangeCantidad.bind(this);\n    this.onChangePeso = this.onChangePeso.bind(this);\n    this.onChangeDto = this.onChangeDto.bind(this);\n    this.onChangeIva = this.onChangeIva.bind(this);\n    this.onChangeIvaProd = this.onChangeIvaProd.bind(this);\n    this.addPedido = this.addPedido.bind(this);\n    this.updatePedido = this.updatePedido.bind(this);\n    this.getCurrentPedido = this.getCurrentPedido.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.setOpen = this.setOpen.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.editProduct = this.editProduct.bind(this);\n    this.onChangeValueProduct = this.onChangeValueProduct.bind(this);\n\n    this.state = {\n      products: [],\n      peso: \"1\",\n      cantidad: \"\",\n      descuento: \"\",\n      indexActive: -1,\n      pedido: {\n        key: null,\n        id: 0,\n        idCliente: 0,\n        clienteName: \"\",\n        productos: [],\n        fecha: moment(new Date().getTime()).format(\"DD-MM-YYYY hh:mm\"),\n        total: 0,\n        status: \"Creado\",\n        fechaEntrega: \"\",\n      },\n      producto: {\n        peso: \"\",\n        cantidad: \"\",\n        descuento: \"\",\n        // iva: \"\",\n      },\n      searchTitle: \"\",\n      productoFilter: [],\n      iva: false,\n      medioIva: false,\n      submitted: false,\n      open: false,\n      editProd: false,\n      indexProdOpen: -1,\n    };\n  }\n\n  componentDidMount() {\n    const id = parseInt(this.props.match.params.id, 10);\n    PedidosDataService.getAll()\n      .orderByChild(\"id\")\n      .equalTo(id)\n      .once(\"value\", this.getCurrentPedido);\n    ProductosDataService.getAll()\n      .orderByChild(\"id\")\n      .once(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    PedidosDataService.getAll().off(\"value\", this.getCurrentPedido);\n  }\n\n  onDataChange(items) {\n    const products = [];\n    items.forEach((item) => {\n      let data = item.val();\n      products.push({\n        id: data.id,\n        codigo: data.codigo,\n        descripcion: data.descripcion,\n        marca: data.marca,\n        stock: data.stock,\n        peso: data.peso,\n        precio: data.precio,\n      });\n    });\n    this.setState({ products });\n  }\n\n  getCurrentPedido(item) {\n    let key = Object.keys(item.val());\n    let data = item.val();\n    const pedido = data[key];\n    pedido.key = key[0];\n    this.setState({ pedido });\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle,\n    });\n  }\n\n  searchTitle(e) {\n    const { products } = this.state;\n    clearTimeout(this.timer);\n    const value = e.target.value;\n    this.timer = setTimeout(() => {\n      if (value) {\n        const filter = products.filter(\n          (prod) =>\n            prod.descripcion.toLowerCase().match(value.toLowerCase()) ||\n            prod.codigo.toLowerCase().match(value.toLowerCase())\n        );\n        this.setState({ productoFilter: filter, searchTitle: value });\n      } else {\n        this.setState({ searchTitle: \"\" });\n      }\n    }, 500);\n  }\n\n  setActive(peso, index) {\n    this.setState({ indexActive: index, peso });\n  }\n\n  onChangeCantidad(e) {\n    this.setState({ cantidad: e.target.value });\n  }\n\n  onChangeDto(e) {\n    this.setState({ descuento: e.target.value });\n  }\n\n  onChangePeso(e) {\n    this.setState({ peso: e.target.value });\n  }\n\n  onChangeIva(e) {\n    const valor = e.target.value;\n    this.setState({ [valor]: !this.state[valor] });\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format(\"DD-MM-YYYY\");\n    this.setState({\n      pedido: {\n        ...this.state.pedido,\n        fechaEntrega: dateFormat,\n      },\n    });\n  }\n\n  addPedido(subtotal, idProducto) {\n    const { products, peso, cantidad, descuento, iva, medioIva } = this.state;\n    const produc = products.filter((prod) => prod.id === idProducto);\n    let isIva = \"No\";\n    if (iva) {\n      isIva = \"iva\";\n    }\n    if (medioIva) {\n      isIva = \"medioIva\";\n    }\n    const prodPedido = {\n      codigo: produc[0].codigo,\n      descripcion: produc[0].descripcion,\n      marca: produc[0].marca,\n      precio: produc[0].precio,\n      peso,\n      cantidad,\n      descuento,\n      iva: isIva,\n      subtotal,\n    };\n    this.state.pedido.productos.push(prodPedido);\n    const total = this.state.pedido.total + subtotal;\n\n    this.setState({\n      pedido: {\n        ...this.state.pedido,\n        total,\n      },\n      // peso: \"1\",\n      cantidad: \"\",\n      descuento: \"\",\n      iva: false,\n      indexActive: -1,\n      medioIva: false,\n    });\n    Toast.success(\"Cargado correctamente!!\", 1);\n  }\n\n  deleteProduct(codigo) {\n    const { pedido } = this.state;\n    var index = pedido.productos.findIndex((prd) => prd.codigo === codigo);\n    pedido.productos.splice(index, 1);\n    let newTotal = 0;\n    pedido.productos.forEach((prd) => {\n      newTotal += prd.subtotal;\n    });\n    this.setState({\n      pedido: {\n        ...this.state.pedido,\n        total: newTotal,\n      },\n    });\n  }\n\n  handleOpenModal(index, product) {\n    this.setState({\n      editProd: true,\n      indexProdOpen: index,\n      producto: {\n        peso: product.peso,\n        cantidad: product.cantidad,\n        descuento: product.descuento,\n      },\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      editProd: false,\n      indexProdOpen: -1,\n    });\n  }\n\n  onChangeValueProduct(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      producto: {\n        ...this.state.producto,\n        [name]: value,\n      },\n    });\n  }\n\n  onChangeIvaProd(e) {\n    const valor = e.target.value;\n    this.setState({ [valor]: !this.state[valor] });\n  }\n\n  editProduct(product) {\n    const { pedido, producto } = this.state\n    const subtotal = product.precio * producto.peso * producto.cantidad;\n    const subtotalDto = subtotal - (subtotal * producto.descuento) / 100;\n    product.peso = producto.peso;\n    product.cantidad = producto.cantidad;\n    product.descuento = producto.descuento;\n    product.subtotal = subtotalDto;\n\n    let newTotal = 0;\n    pedido.productos.forEach((prd) => {\n      newTotal += prd.subtotal;\n    });\n    this.setState({\n      pedido: {\n        ...this.state.pedido,\n        total: newTotal,\n      },\n      editProd: false,\n      indexProdOpen: -1,\n      producto: {\n        // peso: \"1\",\n        cantidad: \"\",\n        descuento: \"\",\n        iva: \"\",\n      },\n    });\n  }\n\n  updatePedido() {\n    let data = {\n      id: this.state.pedido.id,\n      idCliente: this.state.pedido.idCliente,\n      clienteName: this.state.pedido.clienteName,\n      productos: this.state.pedido.productos,\n      fecha: this.state.pedido.fecha,\n      status: this.state.pedido.status,\n      fechaEntrega: this.state.pedido.fechaEntrega,\n      total: this.state.pedido.total,\n    };\n\n    PedidosDataService.update(this.state.pedido.key, data)\n      .then(() => {\n        Toast.loading(\"Loading...\", 1, () => {\n          this.setState({\n            submitted: true,\n          });\n        });\n      })\n      .catch((e) => {\n        Toast.fail(\"Ocurrió un error !!!\", 2);\n      });\n  }\n\n  setOpen() {\n    this.setState({ open: !this.state.open });\n  }\n\n  render() {\n    const {\n      submitted,\n      products,\n      searchTitle,\n      indexActive,\n      peso,\n      descuento,\n      cantidad,\n      productoFilter,\n      iva,\n      medioIva,\n      pedido,\n      open,\n      editProd,\n      indexProdOpen,\n      producto,\n    } = this.state;\n    const displayTable = searchTitle !== \"\" ? productoFilter : products;\n    let subtotalDto = 0.0;\n    const valorIva = iva ? 0.21 : 0.105;\n    return (\n      <div className=\"list row\">\n        {submitted ? (\n          <div>\n            <h4>Pedido editado correctamente!</h4>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/new-visit\"\n              role=\"button\"\n            >\n              Nuevo Pedido\n            </a>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/list-pedidos\"\n              role=\"button\"\n            >\n              Listado\n            </a>\n          </div>\n        ) : (\n          <div className=\"col-md-6\">\n            <div className=\"col-md-8\">\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Buscar\"\n                  onChange={this.searchTitle}\n                />\n                <div className=\"input-group-append\">\n                  <button\n                    className=\"btn btn-outline-secondary search-button\"\n                    type=\"button\"\n                    onClick={this.searchTitle}\n                  >\n                    <SearchIcon color=\"action\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n            <h4>Editar Pedido - {pedido.clienteName}</h4>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"fecha\">Fecha de entrega de pedido</label>\n              <Datetime\n                className=\"post-input  post-input__event\"\n                dateFormat=\"DD-MM-YYYY\"\n                timeFormat={false}\n                name=\"eventDate\"\n                utc\n                closeOnSelect\n                value={pedido.fechaEntrega}\n                onChange={this.onChangeDate}\n              />\n            </div>\n\n            <Link\n              component=\"button\"\n              variant=\"body2\"\n              className=\"open-products\"\n              onClick={this.setOpen}\n            >\n              Mostrar productos del pedido\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </Link>\n            {open && (\n              <TableContainer\n                className=\"table-products__container\"\n                component={Paper}\n              >\n                <Table size=\"small\" aria-label=\"a dense table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell></TableCell>\n                      <TableCell>Código</TableCell>\n                      <TableCell>Precio</TableCell>\n                      <TableCell>Peso</TableCell>\n                      <TableCell>Cant.</TableCell>\n                      <TableCell>Descripción</TableCell>\n                      <TableCell>Marca</TableCell>\n                      <TableCell>Descuento</TableCell>\n                      <TableCell>IVA</TableCell>\n                      <TableCell align=\"right\">Subtotal</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {pedido.productos.map((row, index) => (\n                      <TableRow key={row.codigo}>\n                        <TableCell>\n                          <IconButton\n                            color=\"secondary\"\n                            aria-label=\"eliminar\"\n                            component=\"span\"\n                            size=\"small\"\n                            onClick={() =>\n                              alert(\"Eliminar\", \"Eliminar producto?\", [\n                                { text: \"Cancelar\" },\n                                {\n                                  text: \"Ok\",\n                                  onPress: () => this.deleteProduct(row.codigo),\n                                },\n                              ])\n                            }\n                          >\n                            <HighlightOffIcon />\n                          </IconButton>\n                          <IconButton\n                            className=\"action__link\"\n                            size=\"small\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.handleOpenModal(index, row);\n                            }}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                          <Dialog\n                            open={editProd && indexProdOpen === index}\n                            aria-labelledby=\"form-dialog-title\"\n                          >\n                            <DialogTitle\n                              id=\"form-dialog-title\"\n                              onClose={this.handleClose}\n                            >\n                              Editar producto\n                            </DialogTitle>\n                            <DialogContent>\n                              <TextField\n                                className=\"prod-input\"\n                                autoFocus\n                                fullWidth\n                                margin=\"dense\"\n                                name=\"peso\"\n                                label=\"Peso\"\n                                // disabled={currentUser.userName !== 'NicoV01'}\n                                value={producto.peso}\n                                onChange={this.onChangeValueProduct}\n                              />\n                              <TextField\n                                className=\"prod-input\"\n                                fullWidth\n                                margin=\"dense\"\n                                name=\"cantidad\"\n                                label=\"Cant.\"\n                                value={producto.cantidad}\n                                onChange={this.onChangeValueProduct}\n                              />\n                              <TextField\n                                className=\"prod-input\"\n                                // margin=\"dense\"\n                                fullWidth\n                                name=\"descuento\"\n                                label=\"Desc.\"\n                                value={producto.descuento}\n                                onChange={this.onChangeValueProduct}\n                              />\n                              {/* <div>\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      color=\"default\"\n                                      checked={iva}\n                                      onChange={this.onChangeIvaProd}\n                                      value=\"iva\"\n                                    />\n                                  }\n                                  label=\"IVA\"\n                                />\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      color=\"default\"\n                                      checked={medioIva}\n                                      onChange={this.onChangeIvaProd}\n                                      value=\"medioIva\"\n                                    />\n                                  }\n                                  label=\"1/2 IVA\"\n                                />\n                              </div> */}\n                            </DialogContent>\n                            <DialogActions>\n                              <Button\n                                color=\"primary\"\n                                onClick={this.handleClose}\n                              >\n                                Cancelar\n                              </Button>\n                              <Button\n                                color=\"primary\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.editProduct(row);\n                                }}\n                                disabled={producto.cantidad === '' || producto.peso === ''}\n                              >\n                                Aceptar\n                              </Button>\n                            </DialogActions>\n                          </Dialog>\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {row.codigo}\n                        </TableCell>\n                        <TableCell>${row.precio}</TableCell>\n                        <TableCell>{row.peso}</TableCell>\n                        <TableCell>{row.cantidad}</TableCell>\n                        <TableCell>{row.descripcion}</TableCell>\n                        <TableCell>{row.marca}</TableCell>\n                        <TableCell>{row.descuento}</TableCell>\n                        <TableCell>{row.iva}</TableCell>\n                        <TableCell align=\"right\">\n                          ${row.subtotal.toFixed(2)}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            )}\n            <div className=\"table-container pedido\">\n              {products &&\n                displayTable.map((producto, index) => {\n                  const isActive = indexActive === index;\n                  if (isActive) {\n                    const subtotal = producto.precio * peso * cantidad;\n                    subtotalDto =\n                      subtotal -\n                      (subtotal * descuento) / 100 +\n                      (iva || medioIva ? subtotal * valorIva : 0);\n                  }\n                  return (\n                    <List className=\"my-list\" key={index}>\n                      <Item\n                        multipleLine\n                        onClick={(e) => {\n                          e.preventDefault();\n                          if (!isActive) {\n                            this.setActive(producto.peso, index);\n                          }\n                        }}\n                        wrap\n                      >\n                        <div className=\"prod__description-container\">\n                          <span className=\"prod__description\">\n                            {producto.descripcion}{\" \"}\n                          </span>\n                          <Brief>{producto.marca}</Brief>\n                          <span className=\"prod__codigo-text\">\n                            #{producto.codigo}\n                          </span>\n                          <span className=\"am-list-extra precio\">\n                            ${producto.precio}\n                          </span>\n                          <span className=\"prod__stock-text\">\n                            S: {producto.stock}\n                          </span>\n                          {isActive && (\n                            <div>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    color=\"default\"\n                                    checked={iva}\n                                    onChange={this.onChangeIva}\n                                    value=\"iva\"\n                                  />\n                                }\n                                label=\"IVA\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    color=\"default\"\n                                    checked={medioIva}\n                                    onChange={this.onChangeIva}\n                                    value=\"medioIva\"\n                                  />\n                                }\n                                label=\"1/2 IVA\"\n                              />\n                              <TextField\n                                id=\"standard-read-only-input\"\n                                className=\"prod__subtotal\"\n                                label=\"Subtotal\"\n                                value={subtotalDto.toFixed(2)}\n                                InputProps={{\n                                  readOnly: true,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      $\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n                            </div>\n                          )}\n                        </div>\n                        {isActive && (\n                          <div className=\"prod__codigo-container\">\n                            <TextField\n                              id=\"standard-start-adornment\"\n                              type=\"number\"\n                              onChange={this.onChangePeso}\n                              value={isActive ? peso : \"\"}\n                              // disabled={currentUser.userName !== 'NicoV01'}\n                              InputProps={{\n                                endAdornment: (\n                                  <InputAdornment position=\"end\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                            />\n                            <TextField\n                              id=\"standard-basic\"\n                              label=\"Cantidad\"\n                              type=\"number\"\n                              value={isActive ? cantidad : \"\"}\n                              onChange={this.onChangeCantidad}\n                            />\n                            <TextField\n                              id=\"standard-basic\"\n                              label=\"Dto\"\n                              type=\"number\"\n                              className=\"input-dto\"\n                              value={isActive ? descuento : \"\"}\n                              onChange={this.onChangeDto}\n                              InputProps={{\n                                endAdornment: (\n                                  <InputAdornment position=\"end\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            />\n                          </div>\n                        )}\n                        <div className=\"prod__button-container\">\n                          <Button\n                            className=\"prod__button-add\"\n                            variant=\"contained\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              this.addPedido(subtotalDto, producto.id);\n                            }}\n                            disabled={\n                              !isActive || peso === \"\" || cantidad === \"\"\n                            }\n                          >\n                            Agregar\n                          </Button>\n                        </div>\n                      </Item>\n                    </List>\n                  );\n                })}\n            </div>\n            <div role=\"region\" className=\"total-banner\">\n              <p className=\"total__text\">Total: $ {pedido.total.toFixed(2)}</p>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"total__button\"\n                onClick={this.updatePedido}\n              >\n                Actualizar pedido\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Button } from '@material-ui/core';\nimport PrintOutlinedIcon from '@material-ui/icons/PrintOutlined';\nimport PedidosDataService from '../../../services/pedidos.service';\nimport ClientesDataService from '../../../services/clients.service';\n\nexport default class Pedido extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pedido: {\n        id: 0,\n        idCliente: 0,\n        clienteName: '',\n        clienteDomicilio: '',\n        productos: [],\n        fecha: moment(new Date().getTime()).format('DD-MM-YYYY hh:mm'),\n        total: 0,\n        status: 'Creado',\n        fechaEntrega: moment(new Date().getTime())\n          .add(1, 'days')\n          .format('DD-MM-YYYY'),\n      },\n      currentClient: [],\n    };\n    this.getPedido = this.getPedido.bind(this);\n    this.print = this.print.bind(this);\n    this.getClient = this.getClient.bind(this);\n  }\n\n  componentDidMount() {\n    const id = parseInt(this.props.match.params.id, 10);\n    PedidosDataService.getAll()\n      .orderByChild('id')\n      .equalTo(id)\n      .once('child_added', this.getPedido);\n  }\n\n  componentWillUnmount() {\n    PedidosDataService.getAll().off('child_added', this.getPedido);\n    ClientesDataService.getAll().off('value', this.getClient);\n  }\n\n  getPedido(item) {\n    this.setState({\n      pedido: item.val(),\n    });\n    ClientesDataService.getAll()\n      .orderByChild('id')\n      .equalTo(item.val().idCliente)\n      .once('value', this.getClient);\n  }\n\n  getClient(items) {\n    let key = Object.keys(items.val());\n    let data = items.val();\n    const currentClient = data[key];\n    currentClient.key = key[0];\n    this.setState({ currentClient });\n  }\n\n  print() {\n    var printContents = document.getElementById('printContent').innerHTML;\n    var originalContents = document.body.innerHTML;\n    document.body.innerHTML = printContents;\n\n    window.print();\n\n    document.body.innerHTML = originalContents;\n  }\n\n  render() {\n    const { pedido, currentClient } = this.state;\n    // console.log(pedido)\n    let totalSinDto = 0;\n    return (\n      <div id=\"printContent\">\n        {/* <div className=\"control-bar\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-2-4\">\n                <div className=\"slogan\">Facturación </div>\n\n                <label for=\"config_tax\">\n                  IVA:\n                  <input type=\"checkbox\" id=\"config_tax\" />\n                </label>\n                <label for=\"config_tax_rate\" className=\"taxrelated\">\n                  Tasa:\n                  <input type=\"text\" id=\"config_tax_rate\" value=\"13\" />%\n                </label>\n                <label for=\"config_note\">\n                  Nota:\n                  <input type=\"checkbox\" id=\"config_note\" />\n                </label>\n              </div>\n            </div>\n          </div>\n        </div> */}\n        <div className=\"col-12 text-center\">\n          {/* <a href=\"javascript:window.print()\">Imprimir</a> */}\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            onClick={this.print}\n            endIcon={<PrintOutlinedIcon />}\n            className=\"button-print\"\n          >\n            Imprimir\n          </Button>\n        </div>\n\n        <div className=\"factura__container\">\n          {/* <header className=\"row\">\n            <div className=\"me\">\n              <p>\n                <strong>Sistema Web S.A. de C.V.</strong>\n                <br />\n                234/90, New York Street\n                <br />\n                United States.\n                <br />\n              </p>\n            </div>\n\n            <div className=\"info\">\n              <p>\n                Web: <a href=\"http://volkerotto.net\">www.sistemasweb.la</a>\n                <br />\n                E-mail:{\" \"}\n                <a href=\"mailto:info@obedalvarado.pw\">info@obedalvarado.pw</a>\n                <br /> \n                Tel: +456-345-908-559\n                 <br />\n                Twitter: @alvarado_obed *\n              </p>\n            </div>\n             <div className=\"bank\">\n            <p contenteditable>\n              Datos bacarios: <br />\n              Titular de la cuenta: <br />\n              IBAN: <br />\n              BIC:\n            </p>\n          </div> \n          </header> */}\n\n          <div className=\"row section\">\n            {/* <div className=\"col-6\">\n              <h1 contenteditable>Factura</h1>\n            </div> */}\n            <div className=\"col-6\">\n              <span className=\"client\">\n                <strong>\n                  Cliente: {pedido.idCliente.toString().padStart(5, '0')} -{' '}\n                  {pedido.clienteName}\n                </strong>\n                <br />\n                <p className=\"client-detail\">\n                  Domicilio: {pedido.clienteDomicilio}\n                </p>\n                <br />\n                <p className=\"client-cuit\">CUIT: {currentClient.dni}</p>\n                <p className=\"client-detail right\">\n                  Condición IVA: {currentClient.condicionIva || '-'}\n                </p>\n              </span>\n              <p className=\"vendedor\">\n                <strong>Vendedor</strong>\n                <br />\n                {pedido.user}\n              </p>\n            </div>\n\n            <div className=\"col-4 details\">\n              <p>\n                Fecha:{' '}\n                {moment(pedido.fecha, 'DD-MM-YYYY hh:mm').format('DD/MM/YYYY')}\n                <br />\n                Factura #: 001 - {pedido.id.toString().padStart(5, '0')}\n                <br />\n                {pedido.condPago ? `Cond. de pago: ${pedido.condPago}` : ''}\n              </p>\n            </div>\n\n            {/* <div className=\"col-2\">\n            <p contenteditable className=\"client\">\n              <strong>Enviar a</strong>\n              <br />\n              [Nombre cliente]\n              <br />\n              [Nombre emmpresa]\n              <br />\n              [Dirección empresa]\n              <br />\n              [Tel empresa]\n            </p>\n          </div> */}\n          </div>\n\n          {/* <div className=\"row section\">\n          <div className=\"col-1\">\n            <table>\n              <thead contenteditable>\n                <tr className=\"invoice_detail\">\n                  <th width=\"25%\">Vendedor</th>\n                  <th width=\"25%\">Orden de compra </th>\n                  <th width=\"20%\">Enviar por</th>\n                  <th width=\"30%\">Términos y condiciones</th>\n                </tr>\n              </thead>\n              <tbody contenteditable>\n                <tr className=\"invoice_detail\">\n                  <td width=\"25%\">John Doe</td>\n                  <td width=\"25%\">#PO-2020 </td>\n                  <td width=\"20%\">DHL</td>\n                  <td width=\"30%\">Pago al contado</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div> */}\n\n          <div className=\"invoicelist-body\">\n            <table className=\"table-container\">\n              <thead>\n                <tr>\n                  <th width=\"5%\">Código</th>\n                  <th width=\"60%\">Descripción</th>\n\n                  <th width=\"10%\">Cant.</th>\n                  <th width=\"10%\">Peso</th>\n                  <th width=\"15%\">Precio</th>\n                  <th>Bonif.</th>\n                  <th width=\"10%\">Importe</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pedido.productos.map((prod, index) => {\n                  totalSinDto += prod.cantidad * prod.peso * prod.precio;\n                  return (\n                    <tr key={index}>\n                      <td width=\"5%\">\n                        <span>{prod.codigo}</span>\n                      </td>\n                      <td width=\"60%\">\n                        <span>{prod.descripcion}</span>\n                      </td>\n                      <td className=\"amount\">\n                        <span>{prod.cantidad}</span>\n                      </td>\n                      <td className=\"amount\">\n                        <span>{prod.peso}</span>\n                      </td>\n                      <td className=\"rate\">\n                        <span>{prod.precio}</span>\n                      </td>\n                      <td>\n                        <span>\n                          {prod.descuento !== ''\n                            ? `${parseInt(prod.descuento, 10).toFixed(2)}%`\n                            : '0.00%'}\n                        </span>\n                      </td>\n                      <td className=\"rate\">\n                        <span>{prod.subtotal.toFixed(2)}</span>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n\n          <div className=\"invoicelist-footer\">\n            <table>\n              {/* <tr className=\"taxrelated\">\n              <td>IVA:</td>\n              <td id=\"total_tax\"></td>\n            </tr> */}\n              <tbody>\n                <tr>\n                  <td>\n                    <span>Subtotal:</span>\n                  </td>\n                  <td className=\"subtotal_price\">{totalSinDto.toFixed(2)}</td>\n                </tr>\n                <tr>\n                  <td>\n                    <span>Descuentos:</span>\n                  </td>\n                  <td className=\"subtotal_price\">\n                    {(totalSinDto - pedido.total).toFixed(2)}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <strong>Total:</strong>\n                  </td>\n                  <td className=\"total_price\" id=\"total_price\">\n                    {pedido.total.toFixed(2)}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* <div className=\"note\" contenteditable>\n          <h2>Nota:</h2>\n        </div> */}\n\n          {/* <footer className=\"row\">\n          <div className=\"col-1 text-center\">\n            <p className=\"notaxrelated\" contenteditable>\n              El monto de la factura no incluye el impuesto sobre las ventas.\n            </p>\n          </div>\n        </footer> */}\n        </div>\n\n        <div className=\"factura__container\">\n          <div className=\"row section\">\n            <div className=\"col-6\">\n              <span className=\"client\">\n                <strong>\n                  Cliente: {pedido.idCliente.toString().padStart(5, '0')} -{' '}\n                  {pedido.clienteName}\n                </strong>\n                <br />\n                <p className=\"client-detail\">\n                  Domicilio: {pedido.clienteDomicilio}\n                </p>\n                <br />\n                <p className=\"client-cuit\">CUIT: {currentClient.dni}</p>\n                <p className=\"client-detail right\">\n                  Condición IVA: {currentClient.condicionIva || '-'}\n                </p>\n              </span>\n              <p className=\"vendedor\">\n                <strong>Vendedor</strong>\n                <br />\n                {pedido.user}\n              </p>\n            </div>\n\n            <div className=\"col-4 details\">\n              <p>\n                Fecha:{' '}\n                {moment(pedido.fecha, 'DD-MM-YYYY hh:mm').format('DD/MM/YYYY')}\n                <br />\n                Factura #: 001 - {pedido.id.toString().padStart(5, '0')}\n                <br />\n                {pedido.condPago ? `Cond. de pago: ${pedido.condPago}` : ''}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"invoicelist-body\">\n            <table className=\"table-container\">\n              <thead>\n                <tr>\n                  <th width=\"5%\">Código</th>\n                  <th width=\"60%\">Descripción</th>\n\n                  <th width=\"10%\">Cant.</th>\n                  <th width=\"10%\">Peso</th>\n                  <th width=\"15%\">Precio</th>\n                  <th>Bonif.</th>\n                  <th width=\"10%\">Importe</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pedido.productos.map((prod, index) => (\n                  <tr key={index}>\n                    <td width=\"5%\">\n                      <span>{prod.codigo}</span>\n                    </td>\n                    <td width=\"60%\">\n                      <span>{prod.descripcion}</span>\n                    </td>\n                    <td className=\"amount\">\n                      <span>{prod.cantidad}</span>\n                    </td>\n                    <td className=\"amount\">\n                      <span>{prod.peso}</span>\n                    </td>\n                    <td className=\"rate\">\n                      <span>{prod.precio}</span>\n                    </td>\n                    <td>\n                      <span>\n                        {prod.descuento !== ''\n                          ? `${parseInt(prod.descuento, 10).toFixed(2)}%`\n                          : '0.00%'}\n                      </span>\n                    </td>\n                    <td className=\"rate\">\n                      <span>{prod.subtotal.toFixed(2)}</span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          <div className=\"invoicelist-footer\">\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <span>Subtotal:</span>\n                  </td>\n                  <td className=\"subtotal_price\">{totalSinDto.toFixed(2)}</td>\n                </tr>\n                <tr>\n                  <td>\n                    <span>Descuentos:</span>\n                  </td>\n                  <td className=\"subtotal_price\">\n                    {(totalSinDto - pedido.total).toFixed(2)}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <strong>Total:</strong>\n                  </td>\n                  <td className=\"total_price\" id=\"total_price\">\n                    {pedido.total.toFixed(2)}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Toast, Modal } from \"antd-mobile\";\nimport ClientsDataService from \"../../../services/clients.service\";\nimport { MenuItem, Select, Button, FormControl } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport moment from \"moment\";\nimport { dias } from \"../../../utils/default\";\n\nconst alert = Modal.alert;\n\nexport default class Visita extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.onChangeDay = this.onChangeDay.bind(this);\n    this.filterClients = this.filterClients.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n    this.setMotivo = this.setMotivo.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n\n    this.state = {\n      clients: [],\n      estado: \"\",\n      dia: moment(new Date().getTime()).get(\"day\"),\n      motivo: \"\",\n      clientFilter: [],\n      clientesPorDia: [],\n      searchTitle: \"\",\n    };\n  }\n\n  componentDidMount() {\n    ClientsDataService.getAll()\n      .orderByChild(\"id\")\n      .on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    ClientsDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let clients = [];\n    const dateFormat = moment(new Date().getTime()).get(\"day\");\n    items.forEach((item) => {\n      let data = item.val();\n      let key = item.key;\n      clients.push({\n        key,\n        id: data.id,\n        razonSocial: data.razon_social,\n        domicilio: data.domicilio,\n        dni: data.dni,\n        telefono: data.telefono,\n        estado: data.estado,\n        dia: data.dia,\n        motivo: data.motivo,\n      });\n    });\n\n    this.setState({ clients });\n    this.filterClients(dateFormat);\n  }\n\n  filterClients(fecha) {\n    const { clients, dia } = this.state;\n    let cliente = [];\n    const fechaComp = fecha || dia;\n    clients.forEach((item) => {\n      const fechaFormat = item.dia;\n      if (fechaFormat === fechaComp) {\n        cliente.push(item);\n      }\n    });\n    this.setState({ clientesPorDia: cliente });\n  }\n\n  searchTitle(e) {\n    const { clientesPorDia } = this.state;\n    clearTimeout(this.timer);\n    const value = e.target.value;\n    this.timer = setTimeout(() => {\n      if (value) {\n        clientesPorDia.forEach((a) => a.domicilio.toLowerCase());\n        const filter = clientesPorDia.filter(\n          (client) =>\n            client.razonSocial.toLowerCase().match(value.toLowerCase()) ||\n            client.domicilio.toLowerCase().match(value.toLowerCase())\n        );\n        this.setState({ clientFilter: filter, searchTitle: value });\n      } else {\n        this.setState({ searchTitle: \"\" });\n      }\n    }, 500);\n  }\n\n  onChangeDay(e) {\n    const dateFormat = e.target.value;\n\n    this.setState({ dia: dateFormat });\n    this.filterClients(dateFormat);\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  setMotivo(key, text) {\n    const data = {\n      motivo: text,\n      estado: \"visitado\",\n    };\n\n    ClientsDataService.update(key, data)\n      .then(() => {\n        Toast.success(\"Visita actualizada!\", 1, () => {\n          window.location.reload(false);\n        });\n      })\n      .catch((e) => {\n        Toast.fail(\"Ocurrió un error !!!\", 2);\n      });\n  }\n\n  resetAll() {\n    const data = {\n      motivo: \"\",\n      estado: \"no visitado\",\n    };\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      this.state.clientesPorDia.forEach((client) => {\n        ClientsDataService.update(client.key, data)\n          .then(() => {})\n          .catch((e) => {\n            Toast.fail(\"Ocurrió un error al resetear algun estado!\", 2);\n          });\n      });\n      Toast.success(\"Estados actualizados!\", 1, () => {\n        window.location.reload(false);\n      });\n    }, 500);\n  }\n\n  render() {\n    const { clients, searchTitle, clientFilter, clientesPorDia } = this.state;\n    const displayTable = searchTitle !== \"\" ? clientFilter : clientesPorDia;\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <div className=\"col-md-8\">\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Buscar\"\n                onChange={this.searchTitle}\n              />\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-outline-secondary\" type=\"button\">\n                  <SearchIcon color=\"action\" />\n                </button>\n              </div>\n            </div>\n          </div>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={this.resetAll}\n            className=\"button-reset\"\n          >\n            Resetear estados y motivos de clientes\n          </Button>\n          <h4 className=\"title-list\">Listado de clientes</h4>\n          <FormControl>\n            <Select\n              onChange={this.onChangeDay}\n              value={this.state.dia}\n              className=\"select__day\"\n            >\n              {dias.map((dia) => (\n                <MenuItem key={dia.value} value={dia.value}>\n                  {dia.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <div className=\"table-container\">\n            <table className=\"table\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\">ID</th>\n                  <th scope=\"col\">Razón Social</th>\n                  <th scope=\"col\">Dirección</th>\n                  <th scope=\"col\">DNI/CUIT</th>\n                  <th scope=\"col\">Teléfono</th>\n                  <th scope=\"col\">Estado</th>\n                  <th scope=\"col\">Acciones</th>\n                </tr>\n              </thead>\n              <tbody>\n                {clients &&\n                  displayTable.map((cliente, index) => {\n                    return (\n                      <tr key={index}>\n                        <td>{cliente.id}</td>\n                        <td>\n                          <a href={`/pedido/${cliente.id}`}>\n                            {cliente.razonSocial}\n                          </a>\n                        </td>\n                        <td>{cliente.domicilio}</td>\n                        <td>{cliente.dni}</td>\n                        <td>{cliente.telefono}</td>\n                        <td className=\"status-client\">{cliente.estado}</td>\n                        <td className=\"column-actions\">\n                          <Button\n                            // variant=\"outlined\"\n                            color=\"primary\"\n                            size=\"small\"\n                            className=\"button-register\"\n                            disabled={cliente.estado === \"visitado\"}\n                            onClick={() =>\n                              alert(\n                                \"Asentar visita\",\n                                <div>Motivo de no visita</div>,\n                                [\n                                  {\n                                    text: \"Ya tiene stock\",\n                                    onPress: () =>\n                                      this.setMotivo(cliente.key, \"stock\"),\n                                  },\n                                  {\n                                    text: \"Está cerrado\",\n                                    onPress: () =>\n                                      this.setMotivo(cliente.key, \"cerrado\"),\n                                  },\n                                  {\n                                    text: \"No tiene dinero\",\n                                    onPress: () =>\n                                      this.setMotivo(cliente.key, \"dinero\"),\n                                  },\n                                  {\n                                    text: \"Ausente responsable\",\n                                    onPress: () =>\n                                      this.setMotivo(cliente.key, \"ausente\"),\n                                  },\n                                  {\n                                    text: \"Cancelar\",\n                                  },\n                                ]\n                              )\n                            }\n                          >\n                            Registrar no venta\n                          </Button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/pronosticos\");\nconst equipos = firebase.ref(\"/equipos\");\nconst fechas = firebase.ref(\"/fechas\");\n\nclass PronosticDataService {\n  getPronos() {\n    return db;\n  }\n\n  getEquipos() {\n    return equipos;\n  }\n\n  getFechas() {\n    return fechas;\n  }\n\n  create(pronos) {\n    return db.push(pronos);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new PronosticDataService();\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  RadioGroup,\n  Container,\n  Paper,\n  Radio,\n  Select,\n} from \"@material-ui/core\";\nimport PronosticDataService from \"../../services/pronostic.service\";\n// import marcas from \"../../../utils/default\";\n\nconst currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n\nexport default class Pronostic extends Component {\n  constructor(props) {\n    super(props);\n    this.getFechas = this.getFechas.bind(this);\n    // this.onChangeDescripcion = this.onChangeDescripcion.bind(this);\n    // this.onChangeMarca = this.onChangeMarca.bind(this);\n    // this.onChangeStock = this.onChangeStock.bind(this);\n    // this.onChangePrecio = this.onChangePrecio.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.saveProduct = this.saveProduct.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      pronostico: {\n        userId: \"\",\n        fecha: \"\",\n        pronosticos: {},\n      },\n      competencia: 'lpf',\n      lastId: 0,\n      equipos: [],\n      fechas: [],\n\n      submitted: false,\n    };\n  }\n\n  componentDidMount() {\n    PronosticDataService.getEquipos()\n      .orderByChild(\"id\")\n      .once(\"value\", this.onDataChange);\n    PronosticDataService.getFechas()\n      // .orderByChild(\"id\")\n      .once(\"child_added\", this.getFechas);\n  }\n\n  componentWillUnmount() {\n    PronosticDataService.getEquipos().off(\"child_added\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let equipos = [];\n    items.forEach((item) => {\n      let data = item.val();\n      equipos.push({\n        id: data.id,\n        equipo: data.equipo,\n      });\n    });\n\n    this.setState({ equipos });\n  }\n\n  getFechas(items) {\n    let fechas = [];\n    let data = items.val().cruces;\n    data.forEach((item) => {\n      //   let data = item.val().cruces;\n      fechas.push({\n        cruce: item.cruce,\n      });\n    });\n\n    this.setState({ fechas });\n  }\n\n  handleChange(e, index) {\n    const { pronostico } = this.state;\n    console.log(e.target.value);\n    const value = e.target.value;\n    const numberCruce = `cruce${index}`;\n    pronostico.pronosticos[numberCruce] = value;\n    const pronos = pronostico.pronosticos;\n    console.log(\"pronosss\", pronos);\n    this.setState({\n      pronostico: {\n        ...pronostico,\n        pronosticos: pronos,\n      },\n    });\n  }\n\n  saveProduct() {\n    let data = {\n      id: 1,\n      fecha: \"fecha1\",\n      userName: currentUser.userName,\n      pronosticos: this.state.pronostico.pronosticos,\n    };\n    console.log(data);\n    // let data = {\n    //   id: this.state.lastId + 1,\n    //   codigo: this.state.codigo,\n    //   descripcion: this.state.descripcion,\n    //   stock: parseInt(this.state.stock, 10),\n    //   marca: this.state.marca,\n    //   precio: this.state.precio,\n    // };\n\n    PronosticDataService.create(data)\n      .then(() => {\n        this.setState({\n          submitted: true,\n          lastId: this.state.lastId + 1,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { fechas, equipos } = this.state;\n\n    // console.log('fechas', this.state.fechas);\n    // console.log('equipos', this.state.equipos);\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Pronóstico creado correctamente!</h4>\n            <a\n              className=\"btn btn-primary go-listado\"\n              href=\"/positions\"\n              role=\"button\"\n            >\n              Tabla de posiciones\n            </a>\n          </div>\n        ) : (\n          <div className=\"form-container\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Pronóstico\n            </Typography>\n            {fechas.map((cruce, index) => {\n              const splitCruce = cruce.cruce.split(\",\");\n              const cruce1 = parseInt(splitCruce[0], 10);\n              const cruce2 = parseInt(splitCruce[1], 10);\n              return (\n                <Paper className=\"container__cruce\" key={index}>\n                  <div>\n                    <span className=\"title-results\">\n                      L\n                    </span>\n                    <span className=\"title-results\">\n                      E\n                    </span>\n                    <span className=\"title-results\">\n                      V\n                    </span>\n                  </div>\n                  {/* <img className=\"image-logo\" alt=\"logo\" src={process.env.PUBLIC_URL + `/${cruce1}.png`} /> */}\n                  <div className=\"first-cruce\">\n                    {/* <img src=\"https://2.bp.blogspot.com/-q4h7P57sRxQ/WkAcvKMJqJI/AAAAAAAAHK0/iOPrHux6szwq3OtOmatPWWD314tUUd0CQCLcBGAs/s1600/escudo_Talleres.png\" /> */}\n                    <span>\n                      {equipos.filter((a) => a.id === cruce1)[0].equipo}\n                    </span>\n                  </div>\n                  <div className=\"buttons-select\">\n                    <RadioGroup\n                      row\n                      aria-label=\"position\"\n                      name=\"position\"\n                      defaultValue=\"top\"\n                    >\n                      <Radio\n                        // checked={selectedValue === 'a'}\n                        onChange={(e) => this.handleChange(e, index)}\n                        className=\"radio-option\"\n                        color=\"primary\"\n                        value=\"L\"\n                        name=\"radio-button-demo\"\n                        inputProps={{ \"aria-label\": \"A\" }}\n                      />\n                      <Radio\n                        // checked={selectedValue === 'b'}\n                        onChange={(e) => this.handleChange(e, index)}\n                        color=\"primary\"\n                        value=\"E\"\n                        className=\"radio-option\"\n                        name=\"radio-button-demo\"\n                        inputProps={{ \"aria-label\": \"B\" }}\n                      />\n                      <Radio\n                        // checked={selectedValue === 'd'}\n                        onChange={(e) => this.handleChange(e, index)}\n                        value=\"V\"\n                        color=\"primary\"\n                        className=\"radio-option\"\n                        name=\"radio-button-demo\"\n                        inputProps={{ \"aria-label\": \"D\" }}\n                      />\n                    </RadioGroup>\n                  </div>\n                  {/* <img className=\"image-logo\" alt=\"logo\" src={process.env.PUBLIC_URL + `/${cruce2}.png`} /> */}\n                  <div className=\"second-cruce\">\n                    <span>\n                      {equipos.filter((a) => a.id === cruce2)[0].equipo}\n                    </span>\n                  </div>\n                </Paper>\n              );\n            })}\n            <div className=\"login-container\">\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"button__save\"\n                onClick={this.saveProduct}\n              >\n                Aceptar\n              </Button>\n            </div>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PronosticDataService from \"../../services/pronostic.service\";\n\nexport default class listProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.onDataChange = this.onDataChange.bind(this);\n\n    this.state = {\n      products: [],\n      currentProduct: null,\n      currentIndex: -1,\n      productoFilter: [],\n      searchTitle: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // PronosticDataService.getAll()\n    //   .orderByChild(\"id\")\n    //   .on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    // PronosticDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    const products = [];\n    items.forEach((item) => {\n      let key = item.key;\n      let data = item.val();\n      products.push({\n        key,\n        id: data.id,\n        codigo: data.codigo,\n        descripcion: data.descripcion,\n        marca: data.marca,\n        stock: data.stock,\n        precio: data.precio,\n      });\n    });\n\n    this.setState({ products });\n  }\n\n  render() {\n    // const { products, searchTitle, productoFilter } = this.state;\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <h4>Tabla de posiciones</h4>\n          <div className=\"table-container\">\n            <table className=\"table\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\">Nombre</th>\n                  <th scope=\"col\">Puntaje</th>\n                 \n                </tr>\n              </thead>\n              <tbody>\n                {/* {products &&\n                  displayTable.map((producto, index) => {\n                    return ( */}\n                      <tr key={1}>\n                        <td>{'jcabrera'}</td>\n                        <td>{15}</td>\n                      </tr>\n                    {/* ); */}\n                  {/* })} */}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/member\");\n\nclass MemberDataService {\n  getAll() {\n    return db;\n  }\n\n  create(member) {\n    return db.push(member);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new MemberDataService();\n","import React, { Component } from \"react\";\nimport MemberDataService from \"../../services/member.service\";\nimport Datetime from \"react-datetime\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  Container,\n  InputLabel,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\n\nexport default class AddMember extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeValues = this.onChangeValues.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.saveClient = this.saveClient.bind(this);\n    this.newClient = this.newClient.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangeDateVenc = this.onChangeDateVenc.bind(this);\n    \n    this.state = {\n      nombre: \"\",\n      dni: \"\",\n      contacto: \"\",\n      telefono: \"\",\n      actividad: \"\",\n      date: moment(new Date().getTime()).format(\"DD-MM-YYYY\"),\n      dateVenc: moment(new Date().getTime()).add(1, 'month').format(\"DD-MM-YYYY\"),\n      lastId: 0,\n\n      submitted: false,\n    };\n  }\n\n  componentDidMount() {\n    MemberDataService.getAll()\n      .orderByChild(\"id\")\n      .limitToLast(1)\n      .once(\"child_added\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    MemberDataService.getAll().off(\"child_added\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    this.setState({\n      lastId: items.val().id || 0,\n    });\n  }\n\n  onChangeValues(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format(\"DD-MM-YYYY\");\n    this.setState({ date: dateFormat });\n  }\n\n  onChangeDateVenc(e) {\n    const dateFormat = e.format(\"DD-MM-YYYY\");\n    this.setState({ dateVenc: dateFormat });\n  }\n\n  saveClient() {\n    let data = {\n      id: this.state.lastId + 1,\n      nombre: this.state.nombre,\n      dni: this.state.dni,\n      contacto: this.state.contacto,\n      telefono: this.state.telefono,\n      date: this.state.date,\n      dateVenc: this.state.dateVenc,\n      actividad: this.state.actividad,\n    };\n\n    MemberDataService.create(data)\n      .then(() => {\n        this.setState({\n          submitted: true,\n          lastId: this.state.lastId + 1,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newClient() {\n    this.setState({\n      nombre: '',\n      dni: '',\n      contacto: '',\n      telefono: '',\n      actividad: '',\n      date: moment(new Date().getTime()).format(\"DD-MM-YYYY\"),\n      dateVenc: moment(new Date().getTime()).add(1, 'month').format(\"DD-MM-YYYY\"),\n\n      submitted: false,\n    });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Socio creado correctamente!</h4>\n            <button className=\"btn btn-success\" onClick={this.newClient}>\n              Nuevo\n            </button>\n            <a className=\"btn btn-primary go-listado\" href=\"/member-list\" role=\"button\">\n              Listado\n            </a>\n          </div>\n        ) : (\n          <div className=\"form-container\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Nuevo Socio\n            </Typography>\n            <div className=\"login-container\">\n              <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      className=\"default__textfield\"\n                      id=\"nombre\"\n                      label=\"Nombre y Apellido\"\n                      value={this.state.nombre}\n                      name=\"nombre\"\n                      onChange={this.onChangeValues}\n                    />\n                  </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"dni\"\n                    required\n                    className=\"default__textfield\"\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"dni\"\n                    value={this.state.dni}\n                    label=\"DNI\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputLabel>Fecha inicio</InputLabel>\n                  <Datetime\n                    className=\"post-input  post-input__event\"\n                    dateFormat=\"DD-MM-YYYY\"\n                    timeFormat={false}\n                    name=\"date\"\n                    utc\n                    closeOnSelect\n                    value={this.state.date}\n                    onChange={this.onChangeDate}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputLabel>Fecha Vencimiento</InputLabel>\n                  <Datetime\n                    className=\"post-input  post-input__event\"\n                    dateFormat=\"DD-MM-YYYY\"\n                    timeFormat={false}\n                    name=\"datevenc\"\n                    utc\n                    closeOnSelect\n                    value={this.state.dateVenc}\n                    onChange={this.onChangeDateVenc}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    className=\"default__textfield\"\n                    id=\"telefono\"\n                    label=\"Teléfono\"\n                    name=\"telefono\"\n                    value={this.state.telefono}\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    className=\"default__textfield\"\n                    fullWidth\n                    id=\"actividad\"\n                    label=\"Actividad\"\n                    value={this.state.actividad}\n                    name=\"actividad\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    className=\"default__textfield\"\n                    fullWidth\n                    id=\"contacto\"\n                    label=\"Contacto de emergencia\"\n                    value={this.state.contacto}\n                    name=\"contacto\"\n                    onChange={this.onChangeValues}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"button__save\"\n                onClick={this.saveClient}\n              >\n                Aceptar\n              </Button>\n            </div>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport MemberDataService from '../../services/member.service';\nimport { Toast, Modal } from 'antd-mobile';\nimport { IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from 'moment';\n\nconst alert = Modal.alert;\n\nexport default class listMember extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveProduct = this.setActiveProduct.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangeTurno = this.onChangeTurno.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.deleteMember = this.deleteMember.bind(this);\n\n    this.state = {\n      members: [],\n      currentMember: null,\n      currentIndex: -1,\n      memberFilter: [],\n      searchTitle: '',\n    };\n  }\n\n  componentDidMount() {\n    MemberDataService.getAll()\n      .orderByChild('id')\n      .on('value', this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    MemberDataService.getAll().off('value', this.onDataChange);\n  }\n\n  onDataChange(items) {\n    const members = [];\n    items.forEach((item) => {\n      let key = item.key;\n      let data = item.val();\n\n      members.push({\n        key,\n        id: data.id,\n        nombre: data.nombre,\n        telefono: data.telefono,\n        dni: data.dni,\n        date: data.date,\n        dateVenc: data.dateVenc,\n        contacto: data.contacto,\n        actividad: data.actividad,\n      });\n    });\n\n    this.setState({ members });\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle,\n    });\n  }\n\n  searchTitle(e) {\n    const { members } = this.state;\n    clearTimeout(this.timer);\n    const value = e.target.value;\n    this.timer = setTimeout(() => {\n      if (value) {\n        const filter = members.filter(\n          (data) =>\n            data.nombre.toLowerCase().match(value.toLowerCase()) ||\n            data.dni.toLowerCase().match(value.toLowerCase())\n        );\n        this.setState({ memberFilter: filter, searchTitle: value });\n      } else {\n        this.setState({ searchTitle: '' });\n      }\n    }, 500);\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format('DD-MM-YYYY');\n    this.setState({ date: dateFormat });\n    // this.filterReservations(dateFormat, \"\");\n  }\n\n  onChangeTurno(e) {\n    this.setState({ turno: e.target.value });\n\n    // this.filterReservations(\"\", e.target.value);\n  }\n\n  refreshList() {\n    this.setState({\n      currentMember: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveProduct(product, index) {\n    this.setState({\n      currentMember: product,\n      currentIndex: index,\n    });\n  }\n\n  deleteMember(key) {\n    MemberDataService.delete(key)\n      .then(() => {\n        Toast.success('Eliminado correctamente!!', 1);\n      })\n      .catch((e) => {\n        Toast.fail('Ocurrió un error', 1);\n      });\n  }\n\n  render() {\n    const { members, searchTitle, memberFilter } = this.state;\n    const displayTable = searchTitle !== '' ? memberFilter : members;\n    const isNotEmptySearch = searchTitle !== '' && memberFilter.length > 0;\n    const statusMember =\n      isNotEmptySearch &&\n      moment(memberFilter[0].dateVenc, 'DD-MM-YYYY').format('DD-MM-YYYY') <\n        moment(new Date().getTime()).format('DD-MM-YYYY')\n        ? 'Vencido'\n        : 'Habilitado';\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <div className=\"new-reservation\">\n            <a className=\"btn btn-primary\" href=\"/add-member\" role=\"button\">\n              Nuevo socio\n            </a>\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Buscar por DNI o Nombre\"\n                onChange={this.searchTitle}\n              />\n\n              <div className=\"input-group-append\">\n                <button\n                  className=\"btn btn-outline-secondary search-button\"\n                  type=\"button\"\n                >\n                  <SearchIcon color=\"action\" />\n                </button>\n                {/* <button\n                  className=\"btn btn-primary\"\n                  type=\"button\"\n                  onClick={() =>\n                    alert(`Validar Socio ${searchTitle}`, statusMember, [\n                      { text: 'Aceptar' },\n                    ])\n                  }\n                >\n                  Validar\n                </button> */}\n              </div>\n            </div>\n          </div>\n          <h4>Listado de Socios</h4>\n          <div className=\"table-container\">\n            <table className=\"table\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\">Nombre</th>\n                  <th scope=\"col\">DNI</th>\n                  <th scope=\"col\">Actividad</th>\n                  <th scope=\"col\">Teléfono</th>\n                  <th scope=\"col\">Fecha inicio</th>\n                  <th scope=\"col\">Vencimiento</th>\n                  <th scope=\"col\">Contacto</th>\n                  <th scope=\"col\">Estado</th>\n                  <th scope=\"col\">Acciones</th>\n                </tr>\n              </thead>\n              <tbody>\n                {members &&\n                  displayTable.map((member, index) => {\n                    const actualDate = new Date();\n                    const dateMember = new Date(\n                      moment(member.dateVenc, 'DD-MM-YYYY')\n                    );\n                    const isVencido =\n                      dateMember.getTime() < actualDate.getTime();\n                    return (\n                      <tr key={index}>\n                        <td>{member.nombre}</td>\n                        <td>{member.dni}</td>\n                        <td>{member.actividad || ''}</td>\n                        <td>{member.telefono}</td>\n                        <td>{member.date}</td>\n                        <td>{member.dateVenc}</td>\n                        <td>{member.contacto}</td>\n                        <td\n                          className={`color__status ${\n                            isVencido ? 'vencido' : 'habilitado'\n                          }`}\n                        >\n                          {isVencido ? 'Vencido' : 'Habilitado'}\n                        </td>\n                        <td>\n                          {currentUser &&\n                            (currentUser.rol === 'admin' ||\n                              currentUser.userName === 'lucasnovach') && (\n                              <IconButton\n                                aria-label=\"delete\"\n                                className=\"action__link\"\n                                href={`/members/${member.id}`}\n                                role=\"button\"\n                              >\n                                <EditIcon />\n                              </IconButton>\n                            )}\n                          <IconButton\n                            aria-label=\"delete\"\n                            type=\"button\"\n                            className=\"action__button\"\n                            onClick={() =>\n                              alert('Eliminar', 'Estás seguro???', [\n                                { text: 'Cancelar' },\n                                {\n                                  text: 'Ok',\n                                  onPress: () => this.deleteMember(member.key),\n                                },\n                              ])\n                            }\n                          >\n                            <DeleteIcon color=\"secondary\" />\n                          </IconButton>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport MemberDataService from '../../services/member.service';\nimport { Modal } from 'antd-mobile';\nimport {\n  Container,\n  Breadcrumbs,\n  Link,\n  Button,\n  TextField,\n  IconButton,\n  Input,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport moment from 'moment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst alert = Modal.alert;\n\nexport default class validateMember extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      members: [],\n      currentMember: null,\n      currentIndex: -1,\n      memberFilter: [],\n      searchTitle: '',\n      statusMember: '',\n      submitted: false,\n      memberSearch: '',\n    };\n  }\n\n  componentDidMount() {\n    MemberDataService.getAll()\n      .orderByChild('id')\n      .on('value', this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    MemberDataService.getAll().off('value', this.onDataChange);\n  }\n\n  onDataChange(items) {\n    const members = [];\n    items.forEach((item) => {\n      let key = item.key;\n      let data = item.val();\n\n      members.push({\n        key,\n        id: data.id,\n        nombre: data.nombre,\n        telefono: data.telefono,\n        dni: data.dni,\n        date: data.date,\n        dateVenc: data.dateVenc,\n        contacto: data.contacto,\n        actividad: data.actividad,\n      });\n    });\n\n    this.setState({ members });\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle,\n    });\n  }\n\n  searchTitle(e) {\n    // clearTimeout(this.timer);\n    const value = e.target.value;\n    this.setState({\n      memberSearch: value,\n    });\n\n    // this.timer = setTimeout(() => {\n    //   if (value) {\n    //     const filter = members.filter(\n    //       (data) =>\n    //         data.nombre.toLowerCase().match(value.toLowerCase()) ||\n    //         data.dni.toLowerCase().match(value.toLowerCase())\n    //     );\n    //     this.setState({\n    //       memberFilter: filter,\n    //       searchTitle: value,\n    //     });\n    //   } else {\n    //     this.setState({ searchTitle: '' });\n    //   }\n    // }, 500);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { memberFilter, searchTitle, memberSearch, members } = this.state;\n    if (memberSearch) {\n      const filter = members.filter(\n        (data) =>\n          data.nombre.toLowerCase().match(memberSearch.toLowerCase()) ||\n          data.dni.toLowerCase().match(memberSearch.toLowerCase())\n      );\n      this.setState({\n        memberFilter: filter,\n        searchTitle: memberSearch,\n      });\n    } else {\n      this.setState({ searchTitle: '' });\n    }\n    const isNotEmptySearch = searchTitle !== '' && memberFilter.length > 0;\n    var actualDate = new Date();\n    var dateMember =\n      isNotEmptySearch &&\n      new Date(moment(memberFilter[0].dateVenc, 'DD-MM-YYYY'));\n    const statusMember =\n      isNotEmptySearch && dateMember.getTime() < actualDate.getTime()\n        ? 'Vencido'\n        : 'Habilitado';\n    this.setState({\n      statusMember,\n      submitted: true,\n    });\n  }\n\n  refreshList() {\n    this.setState({\n      currentMember: null,\n      currentIndex: -1,\n      memberFilter: [],\n      statusMember: '',\n      submitted: false,\n    });\n  }\n\n  render() {\n    const { members, searchTitle, memberFilter, submitted, statusMember } =\n      this.state;\n    const displayTable = searchTitle !== '' ? memberFilter : members;\n\n    return (\n      <Container component=\"main\" maxWidth=\"md\">\n        {submitted ? (\n          <div className=\"col-md-12\">\n            <Breadcrumbs aria-label=\"breadcrumb\">\n              <Link color=\"inherit\" href=\"#\" onClick={this.refreshList}>\n                <HomeIcon fontSize=\"small\" />\n                Inicio\n              </Link>\n            </Breadcrumbs>\n            <div className=\"col-md-6 medium-width\">\n              <form className=\"form\">\n                <TextField\n                  label=\"Ingrese DNI\"\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"dni\"\n                  onChange={this.searchTitle}\n                  // type=\"text\"\n                  className=\"text__search\"\n                  autocomplete=\"off\"\n                  spellcheck=\"false\"\n                />\n                <IconButton\n                  type=\"submit\"\n                  color=\"primary\"\n                  fullWidth\n                  variant=\"contained\"\n                  className=\"button__search\"\n                  onClick={this.onSubmit}\n                >\n                  <SearchIcon />\n                </IconButton>\n              </form>\n              <ul className=\"cards\">\n                <li\n                  className={\n                    memberFilter.length !== 0\n                      ? `card ${statusMember.toLowerCase()}`\n                      : 'card'\n                  }\n                >\n                  {memberFilter.length !== 0 ? (\n                    <>\n                      <h1 className=\"card__name\">\n                        {displayTable[0].nombre.toUpperCase()}\n                      </h1>\n                      <p className=\"card__dni\">DNI: {displayTable[0].dni}</p>\n                      <p className=\"status\">{statusMember}</p>\n                      <p className=\"card__vigencia\">\n                        Actividad: {displayTable[0].actividad || ''}\n                      </p>\n                      <p className=\"card__vigencia\">\n                        Vencimiento: {displayTable[0].dateVenc}\n                      </p>\n                    </>\n                  ) : (\n                    <p className=\"empty-message\">\n                      No se encontraron resultados\n                    </p>\n                  )}\n                </li>\n              </ul>\n            </div>\n          </div>\n        ) : (\n          <div className=\"col-md-12\">\n            <div className=\"image-container\">\n              <img className=\"img-logo\" src={require('./factory.jpg')} />\n            </div>\n            <div className=\"col-md-6 medium-width\">\n              <form className=\"form\">\n                <TextField\n                  label=\"Ingrese DNI\"\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"dni\"\n                  onChange={this.searchTitle}\n                  type=\"text\"\n                  className=\"text__search\"\n                />\n                <IconButton\n                  type=\"submit\"\n                  color=\"primary\"\n                  fullWidth\n                  variant=\"contained\"\n                  className=\"button__search\"\n                  onClick={this.onSubmit}\n                >\n                  <SearchIcon />\n                </IconButton>\n              </form>\n            </div>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport CryptoJS from 'crypto-js';\nimport {\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  Container,\n  InputLabel,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\nimport Datetime from 'react-datetime';\nimport MemberService from '../../services/member.service';\nimport LoginService from '../../services/users.service';\nimport moment from 'moment';\nimport { passKey } from '../../utils/default';\n\nexport default class editMember extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentMember: {\n        key: null,\n        id: 0,\n        nombre: '',\n        dni: '',\n        actividad: '',\n        contacto: '',\n        telefono: '',\n        date: moment(new Date().getTime()).format('DD-MM-YYYY'),\n        dateVenc: moment(new Date().getTime())\n          .add(1, 'month')\n          .format('DD-MM-YYYY'),\n      },\n      password: '',\n      submitted: false,\n      allowUser: false,\n      error: false,\n    };\n    this.updateClient = this.updateClient.bind(this);\n    this.onChangeValues = this.onChangeValues.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.changePass = this.changePass.bind(this);\n    this.getUser = this.getUser.bind(this);\n  }\n\n  componentDidMount() {\n    const id = parseInt(this.props.match.params.id, 10);\n    MemberService.getAll()\n      .orderByChild('id')\n      .equalTo(id)\n      .once('value', this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let key = Object.keys(items.val());\n    let data = items.val();\n    const currentMember = data[key];\n    currentMember.key = key[0];\n    this.setState({ currentMember });\n  }\n\n  onChangeValues(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      currentMember: {\n        ...this.state.currentMember,\n        [name]: value,\n      },\n    });\n  }\n\n  onChangeDate(e) {\n    const dateFormat = e.format('DD-MM-YYYY');\n    this.setState({\n      currentMember: { ...this.state.currentMember, dateVenc: dateFormat },\n    });\n  }\n\n  changePass(e) {\n    this.setState({ password: e.target.value });\n  }\n\n  // getUser() {\n  //   LoginService.getAll()\n  //     .orderByChild('email')\n  //     .equalTo('lucasn_t@hotmail.com')\n  //     .once('child_added', this.verifyLogin)\n  //     .catch(this.setState({ error: true }));\n  // }\n\n  // verifyLogin(user) {\n  //   const pass = user.val().password;\n  //   const actualPass = this.state.password;\n  //   const bytes = CryptoJS.AES.decrypt(pass, passKey);\n  //   const originalText = bytes.toString(CryptoJS.enc.Utf8);\n  //   if (actualPass === originalText) {\n  //     this.setState({ error: false, allowUser: true });\n  //   } else {\n  //     this.setState({ error: true });\n  //   }\n  // }\n\n  getUser() {\n    if (this.state.password === 'factorygym') {\n      this.setState({ allowUser: true });\n    } else {\n      this.setState({ error: true });\n    }\n  }\n\n  updateClient() {\n    const data = {\n      id: this.state.currentMember.id,\n      nombre: this.state.currentMember.nombre,\n      telefono: this.state.currentMember.telefono,\n      dni: this.state.currentMember.dni,\n      date: this.state.currentMember.date,\n      dateVenc: this.state.currentMember.dateVenc,\n      contacto: this.state.currentMember.contacto,\n      actividad: this.state.currentMember.actividad,\n    };\n\n    MemberService.update(this.state.currentMember.key, data)\n      .then(() => {\n        this.setState({\n          submitted: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.allowUser ? (\n          <Container component=\"main\" maxWidth=\"xs\">\n            {this.state.submitted ? (\n              <div>\n                <h4>Socio editado correctamente!</h4>\n                <a\n                  className=\"btn btn-primary go-listado\"\n                  href=\"/members\"\n                  role=\"button\"\n                >\n                  Inicio\n                </a>\n                <a\n                  className=\"btn btn-primary go-listado\"\n                  href=\"/add-member\"\n                  role=\"button\"\n                >\n                  Nuevo\n                </a>\n                <a\n                  className=\"btn btn-primary go-listado\"\n                  href=\"/member-list\"\n                  role=\"button\"\n                >\n                  Listado\n                </a>\n              </div>\n            ) : (\n              <div className=\"form-container\">\n                <Typography component=\"h1\" variant=\"h5\">\n                  Editar Socio\n                </Typography>\n                <div className=\"login-container\">\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        className=\"default__textfield\"\n                        id=\"nombre\"\n                        label=\"Nombre y Apellido\"\n                        value={this.state.currentMember.nombre}\n                        name=\"nombre\"\n                        onChange={this.onChangeValues}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        name=\"dni\"\n                        required\n                        className=\"default__textfield\"\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"dni\"\n                        value={this.state.currentMember.dni}\n                        label=\"DNI\"\n                        onChange={this.onChangeValues}\n                      />\n                    </Grid>\n                    {/* <Grid item xs={12}>\n                    <InputLabel>Fecha inicio</InputLabel>\n                    <Datetime\n                      className=\"post-input  post-input__event\"\n                      dateFormat=\"DD-MM-YYYY\"\n                      timeFormat={false}\n                      name=\"date\"\n                      utc\n                      closeOnSelect\n                      disabled\n                      value={this.state.currentMember.date}\n                      onChange={this.onChangeDate}\n                    />\n                  </Grid> */}\n                    <Grid item xs={12}>\n                      <InputLabel>Fecha Vencimiento</InputLabel>\n                      <Datetime\n                        className=\"post-input  post-input__event\"\n                        dateFormat=\"DD-MM-YYYY\"\n                        timeFormat={false}\n                        name=\"datevenc\"\n                        utc\n                        closeOnSelect\n                        value={this.state.currentMember.dateVenc}\n                        onChange={this.onChangeDate}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        className=\"default__textfield\"\n                        id=\"telefono\"\n                        label=\"Teléfono\"\n                        name=\"telefono\"\n                        value={this.state.currentMember.telefono}\n                        onChange={this.onChangeValues}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        className=\"default__textfield\"\n                        fullWidth\n                        id=\"actividad\"\n                        label=\"Actividad\"\n                        value={this.state.currentMember.actividad}\n                        name=\"actividad\"\n                        onChange={this.onChangeValues}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        className=\"default__textfield\"\n                        fullWidth\n                        id=\"contacto\"\n                        label=\"Contacto de emergencia\"\n                        value={this.state.currentMember.contacto}\n                        name=\"contacto\"\n                        onChange={this.onChangeValues}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\"button__save\"\n                    onClick={this.updateClient}\n                  >\n                    Aceptar\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Container>\n        ) : (\n          <Container maxWidth=\"xs\">\n            {this.state.error && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                La contraseña es incorrecta\n              </div>\n            )}\n            <div className=\"col-md-6\">\n              <Typography component=\"h1\" variant=\"h5\">\n                Ingrese contraseña para editar\n              </Typography>\n              <form className=\"form\">\n                <TextField\n                  label=\"Contraseña\"\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={this.changePass}\n                  type=\"password\"\n                />\n\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  fullWidth\n                  className=\"button__save\"\n                  onClick={this.getUser}\n                >\n                  Aceptar\n                </Button>\n              </form>\n            </div>\n          </Container>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-datetime/css/react-datetime.css\";\nimport \"./App.scss\";\nimport \"antd-mobile/dist/antd-mobile.css\";\n\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\nimport DeleteReservas from \"./components/admin/adminReservations\";\n\n//Login\nimport SignIn from \"./components/Login/SignIn\";\nimport SignUp from \"./components/Login/SignUp\";\nimport Profile from \"./components/Login/Profile\";\n// Forest\nimport ReservasList from \"./components/Reservation/reservaList\";\nimport Reservation from \"./components/Reservation/add-reservation\";\nimport EditReserva from \"./components/Reservation/editReserva\";\nimport AddMesa from \"./components/Reservation/addMesa\";\nimport MesasMap from \"./components/Reservation/mesasMap\";\n// Windy\nimport AddClient from \"./components/Logistic/Clients/addClient\";\nimport EditClient from \"./components/Logistic/Clients/editClient\";\nimport ListClient from \"./components/Logistic/Clients/listClient\";\nimport AddProduct from \"./components/Logistic/Products/addProduct\";\nimport ListProduct from \"./components/Logistic/Products/listProduct\";\nimport EditProduct from \"./components/Logistic/Products/editProduct\";\nimport ChangePriceProduct from \"./components/Logistic/Products/changePrice\";\nimport Pedido from \"./components/Logistic/Pedido/pedido\";\nimport PedidoList from \"./components/Logistic/Pedido/pedidoList\";\nimport EditPedido from \"./components/Logistic/Pedido/editPedido\";\nimport Factura from \"./components/Logistic/Pedido/facturaTemplate\";\nimport Visita from \"./components/Logistic/Pedido/visita\";\n//Prode\nimport Pronostic from \"./components/Prode/addPronostic\";\nimport Positions from \"./components/Prode/positions\";\n\n//Gym\nimport AddMembers from \"./components/Members/addMember\";\nimport ListMember from \"./components/Members/listMember\";\nimport ValidateMember from \"./components/Members/validateMember\";\nimport EditMember from \"./components/Members/editMember\";\n\nimport FooterView from \"./components/FooterView\";\n\n// const [setAnchorEl] = React.useState(null);\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      toggle: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n  }\n\n  handleClick(event) {\n    this.setState({ show: !this.state.show });\n  }\n\n  toggleButton() {\n    this.setState({ toggle: !this.state.toggle });\n  }\n\n  render() {\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n    const isDesktop = window.matchMedia(\"(min-width: 768px)\").matches;\n\n    return (\n      <div>\n        {/* <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n  <div className=\"container-fluid\">\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"#\">Link</a>\n        </li>\n        <li className=\"nav-item dropdown\">\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown2\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Dropdown\n          </a>\n          <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown2\">\n            <a className=\"dropdown-item\" href=\"#\">Action</a>\n            <a className=\"dropdown-item\" href=\"#\">Another action</a>\n            <div className=\"dropdown-divider\"></div>\n            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n          </div>\n        </li>\n        <li className=\"nav-item dropdown\">\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown3\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Dropdown\n          </a>\n          <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown3\">\n            <a className=\"dropdown-item\" href=\"#\">Action</a>\n            <a className=\"dropdown-item\" href=\"#\">Another action</a>\n            <div className=\"dropdown-divider\"></div>\n            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n          </div>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"#\">Link</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav> */}\n        <nav\n          className=\"navbar navbar-expand-md navbar-dark bg-dark\"\n          role=\"navigation\"\n        >\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"/\">\n            {currentUser.rol === \"gym\" ? \"FactoryGYM\" : \"TopTec\"}\n            </a>\n            {currentUser && (\n              <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n                onClick={this.toggleButton}\n              >\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n            )}\n            {currentUser && (\n              <div\n                className={\n                  this.state.toggle\n                    ? \"collapse navbar-collapse show\"\n                    : \"collapse navbar-collapse\"\n                }\n                id=\"navbarSupportedContent\"\n              >\n                {(currentUser.rol === \"windy\" ||\n                  currentUser.rol === \"admin\") && (\n                  <div className=\"dropdown-container\">\n                    <ul className=\"navbar-nav\">\n                      <li className=\"nav-item\">\n                        <Link to={\"/list-client\"} className=\"nav-link\">\n                          Clientes\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to={\"/list-products\"} className=\"nav-link\">\n                          Productos\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to={\"/list-pedidos\"} className=\"nav-link\">\n                          Pedidos\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                )}\n                {(currentUser.rol === \"forest\" ||\n                  currentUser.rol === \"admin\") && (\n                  <div className=\"dropdown-container\">\n                    <ul className=\"navbar-nav\">\n                      <li className=\"nav-item\">\n                        <Link to={\"/forest/reservas\"} className=\"nav-link\">\n                          Listado de reservas\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to={\"/forest/reservation\"} className=\"nav-link\">\n                          Nueva reserva\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                )}\n                {(currentUser.rol === \"gym\" ||\n                  currentUser.rol === \"admin\") && (\n                  <div className=\"dropdown-container\">\n                    <ul className=\"navbar-nav\">\n                      <li className=\"nav-item\">\n                        <Link to={\"/members\"} className=\"nav-link\">\n                          Inicio\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to={\"/add-member\"} className=\"nav-link\">\n                          Nuevo Socio\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to={\"/member-list\"} className=\"nav-link\">\n                          Listado de Socios\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                )}\n                {(currentUser.rol === \"forest\" ||\n                currentUser.rol === \"admin\") && (\n                  <div className=\"dropdown-container\">\n                    <ul className=\"navbar-nav\">\n                      <li className=\"nav-item\">\n                        <Link to={\"/delete-reservas\"} className=\"nav-link\">\n                          Eliminar reservas\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                )}\n                <div className=\"dropdown-container left\">\n                  <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                      <a className=\"nav-link\" href=\"/login\">\n                        Salir\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            )}\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/tutorials\"]} component={TutorialsList} />\n\n            <Route\n              exact\n              path={!currentUser ? [\"/\", \"/login\"] : \"/login\"}\n              component={SignIn}\n            />\n            <Route exact path=\"/register\" component={SignUp} />\n            <Route exact path=\"/profile\" component={Profile} />\n\n            {currentUser ? (\n              <React.Fragment>\n                {/* // Forest */}\n                {(currentUser.rol === \"forest\" ||\n                  currentUser.rol === \"admin\") && (\n                  <React.Fragment>\n                    <Route\n                      exact\n                      path={\n                        currentUser && currentUser.rol === \"forest\"\n                          ? [\"/\", \"/forest/reservas\"]\n                          : \"/forest/reservas\"\n                      }\n                      component={ReservasList}\n                    />\n                    <Route\n                      exact\n                      path=\"/forest/reservation\"\n                      component={Reservation}\n                    />\n                    <Route\n                      exact\n                      path=\"/forest/reserva/:id\"\n                      component={EditReserva}\n                    />\n                    <Route exact path=\"/forest/mesa/:id\" component={AddMesa} />\n                    <Route exact path=\"/forest/mesas\" component={MesasMap} />\n                  </React.Fragment>\n                )}\n\n                {/* // Windy */}\n                {(currentUser.rol === \"windy\" ||\n                  currentUser.rol === \"admin\") && (\n                  <React.Fragment>\n                    <Route\n                      exact\n                      path={\n                        currentUser && currentUser.rol === \"windy\"\n                          ? [\"/\", \"/list-pedidos\"]\n                          : \"/list-pedidos\"\n                      }\n                      component={PedidoList}\n                    />\n                    <Route exact path=\"/pedido/:id\" component={Pedido} />\n                    <Route\n                      exact\n                      path=\"/edit-pedido/:id\"\n                      component={EditPedido}\n                    />\n                    <Route exact path=\"/list-client\" component={ListClient} />\n                    <Route exact path=\"/client\" component={AddClient} />\n                    <Route exact path=\"/client/:id\" component={EditClient} />\n                    <Route exact path=\"/products\" component={AddProduct} />\n                    <Route exact path=\"/product/:id\" component={EditProduct} />\n                    <Route\n                      exact\n                      path=\"/list-products\"\n                      component={ListProduct}\n                    />\n                    <Route\n                      exact\n                      path=\"/change-price\"\n                      component={ChangePriceProduct}\n                    />\n                    <Route exact path=\"/imprimir/:id\" component={Factura} />\n                    <Route exact path=\"/new-visit\" component={Visita} />\n                  </React.Fragment>\n                )}\n                {/* // Prode */}\n\n                <Route\n                  exact\n                  path={\n                    currentUser && currentUser.rol === \"prode\"\n                      ? [\"/\", \"/pronostico\"]\n                      : \"/pronostico\"\n                  }\n                  component={Pronostic}\n                />\n                <Route exact path=\"/positions\" component={Positions} />\n\n                 {/* // Gym */}\n\n                 <Route\n                  exact\n                  path={\n                    currentUser && currentUser.rol === \"gym\"\n                      ? [\"/\", \"/members\"]\n                      : \"/members\"\n                  }\n                  component={ValidateMember}\n                />\n                <Route exact path=\"/member-list\" component={ListMember} />\n                {currentUser && (currentUser.rol === \"admin\" || currentUser.userName === 'lucasnovach') &&\n                 <Route exact path=\"/members/:id\" component={EditMember} />\n                }\n                <Route exact path=\"/add-member\" component={AddMembers} />\n\n\n                {/* // Admin */}\n                {currentUser.rol === \"admin\" && (\n                  <React.Fragment>\n                    <Route\n                      exact\n                      path={\n                        currentUser && currentUser.rol === \"admin\"\n                          ? [\"/\", \"/add\"]\n                          : \"add\"\n                      }\n                      component={AddTutorial}\n                    />\n                    <Route\n                      exact\n                      path=\"/delete-reservas\"\n                      component={DeleteReservas}\n                    />\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            ) : (\n              <Redirect to=\"/login\" />\n            )}\n          </Switch>\n        </div>\n        {/* <FooterView /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\n\nclass App extends Component {\n  render() {\n    const date = new Date();\n    return (\n      <footer role=\"contentinfo\" className=\"footer\">\n        <div className=\"copy-right_text\">\n          <div className=\"container\">\n            <div className=\"footer_border\"></div>\n            <div className=\"row\">\n              <div className=\"col-xl-7 col-md-6\">\n                <p className=\"copy_right\">\n                  Copyright &copy;\n                  {date.getFullYear()} All rights reserved | \n                  <span className=\"footer_made\">\n                  This template is made by{\" \"}\n                  <a\n                    href=\"https://www.linkedin.com/in/jeremiascabrera/\"\n                    target=\"_blank\"\n                  >\n                    TopTec\n                  </a>\n                  </span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}